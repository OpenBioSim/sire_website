Search.setIndex({"docnames": ["acknowledgements", "api/base", "api/cas", "api/index", "api/index_base", "api/index_cas", "api/index_io", "api/index_maths", "api/index_mm", "api/index_mol", "api/index_search", "api/index_stream", "api/index_system", "api/index_units", "api/index_utils", "api/index_vol", "api/io", "api/maths", "api/mm", "api/mol", "api/search", "api/sire", "api/sire_modules", "api/stream", "api/system", "api/units", "api/utils", "api/vol", "changelog", "cheatsheet/index", "cheatsheet/search", "code_of_conduct", "contributing/codestyle", "contributing/development", "contributing/index", "contributing/packaging", "contributing/roadmap", "contributors", "features", "index", "install", "quickstart/index", "support", "tutorial/index", "tutorial/index_part01", "tutorial/index_part02", "tutorial/index_part03", "tutorial/index_part04", "tutorial/part01/01_importing_sire", "tutorial/part01/02_loading_a_molecule", "tutorial/part01/03_simple_indexing", "tutorial/part01/04_saving_a_molecule", "tutorial/part01/05_loading_from_multiple_files", "tutorial/part01/06_supported_file_formats", "tutorial/part02/01_indexing_atoms", "tutorial/part02/02_indexing_residues", "tutorial/part02/03_indexing_chains", "tutorial/part02/04_indexing_segments", "tutorial/part02/05_indexing_molecules", "tutorial/part02/06_indexing_bonds", "tutorial/part02/07_indexing_angles", "tutorial/part02/08_indexing_dihedrals", "tutorial/part02/09_indexing_impropers", "tutorial/part02/10_searching", "tutorial/part03/01_atom_properties", "tutorial/part03/02_cursors", "tutorial/part03/03_residue_properties", "tutorial/part03/04_molecule_properties", "tutorial/part03/05_bond_properties", "tutorial/part03/06_angle_properties", "tutorial/part03/07_dihedral_properties", "tutorial/part03/08_improper_properties", "tutorial/part04/01_measure", "tutorial/part04/02_trajectory", "tutorial/part04/03_energies", "tutorial/part04/04_energy_trajectories", "tutorial/part04/05_movement", "tutorial/part04/06_move_internals"], "filenames": ["acknowledgements.rst", "api/base.rst", "api/cas.rst", "api/index.rst", "api/index_base.rst", "api/index_cas.rst", "api/index_io.rst", "api/index_maths.rst", "api/index_mm.rst", "api/index_mol.rst", "api/index_search.rst", "api/index_stream.rst", "api/index_system.rst", "api/index_units.rst", "api/index_utils.rst", "api/index_vol.rst", "api/io.rst", "api/maths.rst", "api/mm.rst", "api/mol.rst", "api/search.rst", "api/sire.rst", "api/sire_modules.rst", "api/stream.rst", "api/system.rst", "api/units.rst", "api/utils.rst", "api/vol.rst", "changelog.rst", "cheatsheet/index.rst", "cheatsheet/search.rst", "code_of_conduct.rst", "contributing/codestyle.rst", "contributing/development.rst", "contributing/index.rst", "contributing/packaging.rst", "contributing/roadmap.rst", "contributors.rst", "features.rst", "index.rst", "install.rst", "quickstart/index.rst", "support.rst", "tutorial/index.rst", "tutorial/index_part01.rst", "tutorial/index_part02.rst", "tutorial/index_part03.rst", "tutorial/index_part04.rst", "tutorial/part01/01_importing_sire.rst", "tutorial/part01/02_loading_a_molecule.rst", "tutorial/part01/03_simple_indexing.rst", "tutorial/part01/04_saving_a_molecule.rst", "tutorial/part01/05_loading_from_multiple_files.rst", "tutorial/part01/06_supported_file_formats.rst", "tutorial/part02/01_indexing_atoms.rst", "tutorial/part02/02_indexing_residues.rst", "tutorial/part02/03_indexing_chains.rst", "tutorial/part02/04_indexing_segments.rst", "tutorial/part02/05_indexing_molecules.rst", "tutorial/part02/06_indexing_bonds.rst", "tutorial/part02/07_indexing_angles.rst", "tutorial/part02/08_indexing_dihedrals.rst", "tutorial/part02/09_indexing_impropers.rst", "tutorial/part02/10_searching.rst", "tutorial/part03/01_atom_properties.rst", "tutorial/part03/02_cursors.rst", "tutorial/part03/03_residue_properties.rst", "tutorial/part03/04_molecule_properties.rst", "tutorial/part03/05_bond_properties.rst", "tutorial/part03/06_angle_properties.rst", "tutorial/part03/07_dihedral_properties.rst", "tutorial/part03/08_improper_properties.rst", "tutorial/part04/01_measure.rst", "tutorial/part04/02_trajectory.rst", "tutorial/part04/03_energies.rst", "tutorial/part04/04_energy_trajectories.rst", "tutorial/part04/05_movement.rst", "tutorial/part04/06_move_internals.rst"], "titles": ["Acknowledgements", "Public API", "Public API", "Documentation", "sire.base", "sire.cas", "sire.io", "sire.maths", "sire.mm", "sire.mol", "sire.search", "sire.stream", "sire.system", "sire.units", "sire.utils", "sire.vol", "Public API", "Public API", "Public API", "Public API", "Public API", "sire module", "Sub-modules", "Public API", "Public API", "Public API", "Public API", "Public API", "Changelog", "Detailed Guides", "Searching", "Code of Conduct", "Coding Style", "Developer\u2019s guide", "Contributing", "Packaging releases", "Roadmap", "Contributors", "Features", "OpenBioSim | Sire", "Installation", "Quick Start Guide", "How to ask for help", "Tutorial", "Part 1 - Loading and Saving", "Part 2 - Indexing and Searching", "Part 3 - Molecular Properties", "Part 4 - Measurement, Trajectories and Movement", "Importing sire", "Loading a molecule", "Simple indexing", "Saving a molecule", "Loading from multiple files", "Supported file formats", "Indexing Atoms", "Indexing Residues", "Indexing Chains", "Indexing Segments", "Indexing Molecules", "Indexing Bonds", "Indexing Angles", "Indexing Dihedrals", "Indexing Impropers", "Searching", "Atom Properties", "Cursors and Editing Properties", "Residue, Chain and Segment Properties", "Molecule Properties", "Bond Views and Properties", "Angle Views and Properties", "Dihedral Views and Properties", "Improper Views and Properties", "Measuring Distances and Angles", "Measuring Trajectories", "Measuring Energies", "Measuring Energies Across Trajectories", "Moving Atoms and Molecules", "Moving Bonds, Angles and Dihedrals"], "terms": {"we": [0, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 45, 46, 48, 49, 52, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "give": [0, 21, 30, 34, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 73, 75, 77], "huge": 0, "thank": [0, 28, 34], "everyon": [0, 31, 34, 42], "who": [0, 31, 33], "ha": [0, 2, 19, 27, 28, 30, 32, 40, 41, 46, 49, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76], "contribut": [0, 31, 33, 37, 40], "sire": [0, 1, 2, 3, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "develop": [0, 28, 32, 34, 35, 36, 37, 39, 40], "whether": [0, 1, 2, 17, 18, 19, 21, 26, 27, 28, 30], "directli": [0, 3, 18, 19, 28, 30, 32, 40, 46, 49, 51, 54, 64, 73, 74, 76], "form": [0, 2, 17, 19, 28, 30, 33], "write": [0, 1, 3, 19, 21, 26, 28, 34, 40, 51, 53, 63, 65], "code": [0, 1, 18, 19, 21, 26, 34, 36, 39, 40, 42, 45, 65, 73], "test": [0, 21, 28, 34, 35, 42, 43], "document": [0, 18, 19, 28, 32, 34, 39, 42], "indirectli": 0, "via": [0, 3, 18, 19, 24, 26, 28, 30, 31, 33, 34, 40, 41, 46, 49, 50, 52, 54, 55, 56, 57, 58, 63, 66, 67, 68, 72, 73, 74, 75, 76, 77], "support": [0, 3, 21, 26, 28, 33, 35, 40, 43, 44, 55, 56, 58, 63, 65, 73, 77], "discuss": [0, 30, 34, 42], "submit": [0, 34, 35, 37], "issu": [0, 28, 30, 31, 32, 34, 35, 36, 42], "bug": [0, 28, 33, 34, 35, 42], "report": [0, 31, 68, 69, 70, 71], "gratefulli": 0, "fund": [0, 34], "from": [0, 1, 3, 17, 18, 19, 21, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 41, 42, 43, 44, 45, 46, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77], "epsrc": 0, "bbsrc": 0, "initi": [0, 28], "ar": [0, 1, 2, 3, 17, 18, 19, 21, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "also": [0, 1, 19, 21, 26, 28, 30, 32, 33, 34, 41, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "ucb": 0, "cresset": [0, 28], "exscientia": 0, "evotec": 0, "have": [0, 2, 17, 18, 19, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 46, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77], "all": [0, 1, 2, 3, 18, 19, 21, 24, 26, 27, 28, 29, 31, 33, 34, 35, 40, 41, 42, 45, 46, 47, 50, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "either": [0, 1, 17, 18, 19, 21, 30, 32, 35, 42, 49, 54, 64, 65, 66, 67, 71, 72, 73, 76, 77], "research": 0, "sustain": 0, "institut": 0, "mani": [0, 1, 19, 30, 32, 33, 36, 37, 46, 49, 50, 53, 54, 55, 57, 64, 72, 73], "us": [0, 1, 2, 3, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 38, 39, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77], "univers": 0, "bristol": [0, 28], "edinburgh": [0, 28], "provid": [0, 1, 3, 18, 19, 21, 24, 26, 27, 28, 33, 39, 42, 63, 65, 68, 69, 70, 74], "time": [0, 19, 21, 25, 26, 28, 32, 33, 35, 41, 54, 55, 56, 57, 58, 64, 73, 75, 77], "member": [0, 18, 19, 31], "staff": 0, "": [0, 17, 18, 19, 21, 28, 30, 31, 34, 39, 40, 45, 46, 49, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "ccp": [0, 28], "biosim": [0, 28], "guidanc": [0, 40], "encourag": [0, 33, 34, 40], "dure": [0, 28, 33, 58, 71, 73], "thi": [0, 1, 2, 3, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "wa": [0, 19, 26, 28, 30, 33, 41, 43, 44, 51, 63, 65, 67, 73, 75, 76, 77], "gener": [0, 2, 27, 28, 30, 33, 63, 73, 75, 76, 77], "sphinx": [0, 28, 32, 33], "modifi": [0, 28, 32, 33, 46, 73], "version": [0, 3, 18, 19, 21, 24, 28, 31, 35, 40, 42, 44, 58, 59], "furo": [0, 33], "theme": [0, 26], "i": [0, 1, 2, 3, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "github": [0, 32, 33, 34, 35, 36, 37, 40, 42], "make": [0, 2, 19, 28, 29, 31, 33, 36, 44, 47, 52, 59, 60, 61, 62, 65, 67, 68, 69, 70, 71, 73, 75], "extens": [0, 21, 39, 51], "its": [0, 19, 27, 28, 30, 31, 33, 36, 41, 54, 55, 56, 57, 58, 63, 65, 73, 74, 76], "excel": [0, 36, 40], "featur": [0, 34, 35, 36, 39, 40, 54, 71], "includ": [0, 3, 19, 28, 30, 31, 33, 34, 35, 38, 47, 54, 59, 60, 61, 62, 74, 75], "page": [0, 33, 34, 36, 40, 42, 54], "action": [0, 28, 31, 33, 35], "ci": [0, 28, 33], "cd": [0, 33, 40, 54, 56, 63], "binari": [0, 3, 28, 40, 53], "packag": [0, 26, 28, 33, 34, 36, 39, 40, 54, 57], "conda": [0, 26, 28, 33, 35, 42, 73], "forg": [0, 28, 33, 35, 40], "contain": [0, 1, 2, 3, 17, 18, 19, 24, 26, 27, 28, 30, 33, 35, 36, 41, 45, 46, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77], "docker": [0, 28, 40], "hub": [0, 40], "The": [0, 1, 17, 18, 19, 21, 26, 27, 28, 30, 31, 32, 33, 35, 40, 41, 43, 45, 46, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "notebook": [0, 18, 19, 24, 33, 40, 48, 49, 73, 75, 76], "servic": [0, 40], "jupyterhub": [0, 40], "cluster": 0, "built": [0, 2, 28, 30, 33, 40, 63, 67, 73], "follow": [0, 1, 28, 30, 31, 32, 33, 35, 40, 42, 43, 44, 49], "instruct": [0, 28, 35, 40, 43, 44, 49, 54], "zero": [0, 2, 17, 28, 30, 58, 65, 74, 75], "kubernet": 0, "microsoft": [0, 40], "azur": [0, 28], "lot": [0, 28, 30, 33, 36, 38, 41, 46, 66, 68, 69, 70, 71, 73], "detail": [0, 21, 28, 31, 33, 35, 36, 38, 42, 54, 63, 65, 67], "licens": [0, 34], "which": [0, 3, 17, 18, 19, 21, 27, 28, 30, 31, 32, 33, 36, 40, 43, 44, 45, 46, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 73, 76, 77], "can": [0, 1, 3, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "found": [0, 1, 21, 28, 30, 33, 54, 62], "below": [0, 30, 32, 33, 37], "instal": [0, 26, 28, 33, 39, 42, 43, 44, 49, 73], "automat": [0, 1, 19, 21, 28, 33, 35, 40, 45, 51, 52, 57, 73, 74, 76, 77], "part": [0, 2, 19, 21, 27, 28, 29, 30, 32, 33, 36, 39, 43, 63], "so": [0, 2, 3, 18, 19, 21, 24, 27, 28, 30, 32, 33, 36, 37, 40, 41, 42, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "you": [0, 1, 3, 17, 18, 19, 21, 24, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "shouldn": [0, 21], "t": [0, 1, 3, 17, 18, 19, 21, 28, 30, 32, 33, 36, 40, 42, 43, 52, 54, 55, 59, 66, 67, 69, 70, 71, 75, 77], "do": [0, 19, 21, 28, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 45, 47, 49, 54, 55, 56, 57, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77], "anyth": [0, 17, 19, 21, 26, 28, 42, 59, 60, 61, 62], "yourself": [0, 1, 3, 21, 64, 75, 76], "itself": [0, 18, 19, 28, 54, 55, 56, 57, 65, 73, 77], "distribut": [0, 28, 39, 40, 77], "under": [0, 34, 48], "term": [0, 28, 30, 57, 59, 63], "gpl": 0, "3": [0, 16, 17, 19, 27, 28, 30, 33, 39, 40, 41, 43, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "ani": [0, 1, 2, 3, 19, 21, 26, 28, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77], "later": [0, 30, 34, 54, 65], "sourc": [0, 1, 16, 17, 19, 21, 24, 25, 26, 28, 32, 33, 39], "link": [0, 28, 35, 71], "gpl3": 0, "e": [0, 1, 2, 3, 17, 18, 19, 21, 24, 26, 27, 28, 29, 31, 32, 33, 34, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "g": [0, 1, 2, 3, 17, 18, 19, 21, 24, 25, 26, 28, 30, 32, 33, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "mean": [0, 1, 19, 30, 32, 46, 48, 53, 54, 55, 56, 57, 58, 59, 63, 72, 73, 75, 77], "entir": [0, 19, 28, 30, 66, 77], "top": [0, 21, 28, 35, 39, 40, 41, 46, 52, 53, 58, 59, 60, 61, 62, 63, 66, 67, 72, 74, 75, 76, 77], "core": [0, 40, 45], "lgpl": 0, "2": [0, 2, 17, 19, 27, 28, 30, 33, 39, 41, 43, 46, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "doe": [0, 2, 19, 26, 28, 30, 33, 36, 54, 57, 65, 74], "allow": [0, 1, 2, 3, 19, 21, 28, 63, 73], "both": [0, 19, 21, 28, 30, 31, 52, 54, 55, 56, 57, 58, 63, 72, 73, 75, 77], "commerci": 0, "non": [0, 19, 27, 28, 30, 57, 65, 67, 75], "without": [0, 21, 28, 31, 36, 40, 43, 55, 56, 65], "fee": 0, "find": [0, 1, 16, 19, 21, 28, 29, 33, 34, 35, 42, 52, 54, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73], "out": [0, 21, 30, 32, 34, 40, 53, 54, 58, 63, 73], "more": [0, 2, 18, 19, 21, 28, 30, 33, 34, 36, 38, 40, 41, 54, 55, 57, 63, 64, 65, 68, 76, 77], "about": [0, 17, 18, 19, 21, 28, 30, 31, 33, 35, 36, 54, 73, 76, 77], "here": [0, 18, 19, 28, 29, 30, 33, 36, 40, 41, 43, 44, 54, 59, 60, 61, 62, 64, 65, 72, 73, 75, 76, 77], "wrap": [0, 1, 4, 26, 28, 33], "up": [0, 2, 17, 19, 21, 26, 28, 32, 34, 35, 40, 45, 46, 54, 57, 58, 59, 60, 61, 62, 63, 66, 72, 74, 76], "made": [0, 19, 21, 26, 28, 68, 69, 70, 71, 75, 77], "avail": [0, 21, 26, 28, 31, 33, 36, 40, 49, 54, 55, 56, 57, 65], "within": [0, 19, 26, 27, 28, 30, 31, 46, 50, 54, 55, 56, 57, 59, 60, 61, 62, 64, 68, 69, 70, 73, 74, 75, 77], "psf": [0, 53, 57, 66], "compat": [0, 21, 28, 34, 35, 40, 68, 69, 70, 71, 73], "gplv3": [0, 34], "compon": [0, 19, 28, 39, 41, 64, 72, 75, 76], "particular": [0, 30, 33, 65, 73], "modul": [0, 1, 2, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 33, 38, 39, 48], "gplc3": 0, "auto": [0, 28, 33, 52], "wrapper": [0, 1, 28, 32, 40], "gccxml": 0, "castxml": [0, 28], "tool": [0, 28, 32, 36, 40], "affect": [0, 28, 30, 63], "read": [0, 3, 24, 28, 32, 33, 38, 40, 52, 53], "system": [0, 3, 21, 22, 24, 27, 28, 38, 39, 40, 41, 42, 44, 46, 49, 52, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76], "As": [0, 19, 27, 30, 33, 48, 53, 54, 57, 71, 72, 74, 75, 76, 77], "specif": [0, 17, 19, 26, 30, 31, 33, 68, 73], "mambaforg": [0, 33], "simplifi": [0, 2, 28, 36, 65, 76], "manag": [0, 28, 33, 35, 40], "variou": [0, 3, 29, 45, 74], "miniconda": [0, 28, 33, 43, 44], "open": [0, 30, 31, 32, 39, 40, 54], "project": [0, 28, 31, 39], "explicitli": 0, "them": [0, 3, 19, 21, 26, 28, 33, 34, 38, 47, 63, 73], "an": [0, 1, 2, 3, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 38, 39, 44, 45, 48, 50, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 73, 74, 75, 77], "node": 0, "parallelis": [0, 28], "apach": [0, 34], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "some": [0, 1, 17, 18, 19, 21, 26, 28, 29, 33, 52, 63, 67], "routin": [0, 28], "v3": 0, "inform": [0, 18, 19, 21, 31, 32, 33, 40, 45, 46, 52, 53, 54, 63, 73], "amber": [0, 28, 38, 46, 53, 67], "file": [0, 3, 19, 21, 24, 26, 28, 32, 33, 38, 40, 41, 42, 43, 44, 45, 46, 51, 54, 57, 58, 65, 68, 69, 70, 71, 73, 76], "openli": 0, "bsd": [0, 34], "style": [0, 18, 19, 21, 24, 25, 26, 28, 34, 39, 65], "perform": [0, 2, 17, 19, 21, 24, 28, 30, 33, 36, 47, 58, 59, 65, 75, 76, 77], "acceler": 0, "dynam": [0, 73], "somd": [0, 28], "program": [0, 19, 28, 33, 58], "mit": [0, 34], "least": [0, 30, 35, 58, 63, 77], "squar": [0, 2, 17, 27, 77], "polynomi": 0, "eigenvector": [0, 17], "eigenmatrix": 0, "calcul": [0, 3, 17, 19, 21, 24, 27, 28, 30, 36, 38, 41, 47, 64, 66, 67, 68, 69, 70, 71, 72, 73], "connelli": 0, "barn": 0, "public": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 28, 31, 33], "domain": [0, 2], "deriv": [0, 1, 33, 45, 46, 66, 71], "java": 0, "matrix": [0, 7, 17, 19, 27, 28, 76], "jama": 0, "richard": 0, "wagner": 0, "random": [0, 27, 28], "number": [0, 2, 17, 18, 19, 21, 24, 28, 29, 35, 38, 40, 41, 45, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77], "shown": [0, 30, 46, 59, 60, 61, 62], "class": [0, 1, 2, 3, 17, 18, 19, 21, 24, 26, 27, 28, 33, 36, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 74], "mtrand": 0, "base": [0, 1, 2, 3, 18, 19, 21, 22, 28, 30, 38, 41, 46, 52, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75], "makoto": 0, "matsumoto": 0, "takuji": 0, "nishimura": 0, "shawn": 0, "coku": 0, "j": [0, 2, 17, 32, 74], "v1": 0, "15": [0, 30, 36, 41, 46, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "mai": [0, 17, 19, 21, 27, 28, 31, 36, 40, 47, 49, 65, 73, 74, 77], "2003": 0, "rjwagner": 0, "writem": 0, "com": [0, 40], "algorithm": [0, 63, 77], "It": [0, 19, 26, 28, 30, 33, 35, 36, 39, 40, 42, 49, 52, 54, 55, 56, 57, 59, 63, 65, 68, 69, 70, 71, 73, 74], "design": [0, 3, 19, 33, 43, 44, 53], "consider": 0, "flaw": 0, "other": [0, 1, 2, 3, 17, 18, 19, 21, 27, 28, 30, 31, 32, 33, 36, 40, 42, 43, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77], "period": [0, 19, 21, 27, 28, 30], "19937": 0, "1": [0, 2, 17, 18, 19, 27, 30, 31, 33, 39, 41, 43, 46, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "order": [0, 2, 19, 28, 30, 33, 43, 54, 56, 65, 66, 73], "equidistribut": 0, "623": 0, "dimens": [0, 3, 17, 18, 19, 25, 27, 30, 72, 73], "far": [0, 28, 33, 54, 72], "greater": [0, 30, 63], "fast": [0, 33, 40], "avoid": [0, 21, 28, 30, 32, 33, 77], "multipl": [0, 2, 18, 19, 21, 27, 28, 38, 41, 43, 44, 47, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 75], "divis": 0, "benefit": [0, 73], "cach": [0, 21], "pipelin": [0, 28], "For": [0, 3, 26, 30, 31, 32, 33, 38, 40, 46, 49, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "see": [0, 18, 19, 21, 28, 30, 31, 32, 33, 42, 46, 47, 49, 58, 72, 73, 74], "inventor": 0, "web": [0, 33], "http": [0, 18, 19, 21, 28, 31, 40, 45, 49, 52, 57], "www": [0, 31], "math": [0, 3, 17, 19, 21, 22, 28, 64, 72, 76], "keio": 0, "ac": [0, 41, 46, 49, 52, 57, 58, 59, 60, 61, 62, 65, 67, 75], "jp": 0, "matumoto": 0, "emt": 0, "html": [0, 31, 33], "refer": [0, 58, 63], "m": [0, 2, 21, 33, 46, 49, 52, 57, 65], "A": [0, 1, 2, 17, 18, 19, 21, 27, 28, 30, 33, 38, 50, 54, 56, 57, 58, 59, 60, 61, 62, 73], "dimension": [0, 17, 27], "uniform": 0, "pseudo": 0, "acm": 0, "transact": 0, "model": [0, 39, 51], "comput": [0, 3, 21, 28, 34, 40, 42, 49, 67], "simul": [0, 19, 28, 36, 71, 73], "vol": [0, 3, 22, 27], "8": [0, 28, 30, 40, 41, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77], "No": [0, 54], "januari": 0, "1998": 0, "pp": 0, "30": [0, 41, 54, 55, 56, 58, 59, 60, 63, 73, 77], "copyright": 0, "1997": 0, "2002": 0, "2000": 0, "right": [0, 17, 27, 28, 31, 33, 54, 77], "reserv": 0, "redistribut": 0, "modif": 0, "permit": 0, "condit": [0, 3, 21, 27, 32], "met": [0, 55, 58, 63], "must": [0, 19, 21, 30, 35, 40, 54, 73, 74, 77], "retain": [0, 36], "abov": [0, 1, 28, 30, 33, 42, 46, 47, 52, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 77], "notic": [0, 57, 71, 72, 73, 77], "list": [0, 18, 19, 21, 26, 27, 28, 30, 33, 46, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 72, 73, 76, 77], "disclaim": 0, "reproduc": [0, 28, 42], "materi": 0, "name": [0, 1, 17, 18, 19, 20, 21, 24, 25, 26, 28, 30, 33, 34, 37, 40, 46, 49, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 72, 73, 74, 75], "contributor": [0, 31, 32, 34, 39], "endors": 0, "promot": 0, "product": [0, 2, 28, 33, 35, 40], "prior": 0, "written": [0, 1, 21, 28, 33, 44, 51, 64, 65, 71], "permiss": [0, 31, 34], "BY": 0, "THE": [0, 35], "holder": 0, "AND": 0, "AS": 0, "express": [0, 2, 5, 18, 19, 30, 31, 52, 64, 65, 66, 67, 68, 69, 70, 71], "OR": 0, "impli": [0, 71], "warranti": 0, "BUT": 0, "NOT": 0, "limit": [0, 24, 27, 28, 40, 42, 73], "TO": 0, "OF": 0, "merchant": 0, "FOR": 0, "purpos": [0, 47], "IN": 0, "NO": 0, "event": [0, 31], "shall": 0, "owner": 0, "BE": 0, "liabl": 0, "direct": [0, 21, 27, 47], "indirect": 0, "incident": 0, "special": [0, 65], "exemplari": 0, "consequenti": 0, "damag": 0, "procur": 0, "substitut": [0, 2], "good": [0, 31, 34, 35], "loss": 0, "data": [0, 3, 18, 19, 21, 24, 26, 28, 38, 40, 47, 53], "profit": 0, "busi": 0, "interrupt": 0, "howev": [0, 28, 35, 64], "caus": [0, 28, 30, 40, 68, 69, 70, 71], "ON": 0, "theori": 0, "liabil": 0, "contract": [0, 29], "strict": [0, 32, 33], "tort": 0, "neglig": 0, "otherwis": [0, 17, 19, 31], "aris": 0, "wai": [0, 19, 21, 28, 30, 33, 34, 40, 41, 50, 54, 55, 56, 57, 58, 64, 65, 66, 69, 70, 71, 73, 75, 77], "even": [0, 28, 32, 47, 54, 58, 60, 61, 62, 63, 68, 69, 70, 71, 76], "IF": 0, "advis": 0, "possibl": [0, 2, 17, 27, 30, 32, 33, 53, 54, 58], "SUCH": 0, "origin": [0, 21, 27, 28, 30, 33, 65, 72, 76], "when": [0, 21, 27, 28, 30, 31, 33, 34, 35, 40, 54, 55, 56, 57, 58, 63, 64, 75, 76, 77], "send": [0, 21, 28], "email": 0, "appropri": [0, 31, 57], "your": [0, 1, 21, 30, 32, 34, 35, 37, 40, 42, 49, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72], "work": [0, 1, 19, 21, 24, 26, 28, 33, 34, 35, 36, 40, 42, 43, 46, 58, 60, 61, 62, 64, 66, 72, 73, 77], "would": [0, 1, 19, 21, 28, 30, 32, 33, 36, 40, 46, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 69, 72, 73, 74, 75, 76, 77], "nice": 0, "cc": 0, "washington": 0, "edu": 0, "rememb": [0, 30, 33, 35, 37, 42], "vectoris": [0, 28], "intrins": 0, "function": [0, 1, 2, 3, 17, 18, 19, 21, 24, 26, 28, 30, 33, 35, 36, 39, 41, 46, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "processor": [0, 33, 40], "sse": 0, "These": [0, 3, 17, 19, 28, 30, 33, 35, 36, 40, 45, 49, 63, 64, 67, 72, 73, 77], "were": [0, 28, 30, 36, 41, 52, 54, 58, 77], "julien": 0, "pommier": 0, "releas": [0, 28, 33, 34, 39, 40, 42], "zlib": 0, "given": [0, 2, 63], "2007": 0, "In": [0, 1, 21, 27, 28, 30, 31, 33, 40, 46, 49, 51, 54, 55, 56, 57, 58, 62, 63, 64, 66, 67, 71, 73, 76, 77], "author": [0, 1, 2, 17, 19, 27, 32], "held": [0, 19, 46, 58, 64, 68, 69, 70, 71], "grant": 0, "anyon": [0, 19, 32, 42], "applic": 0, "alter": 0, "freeli": 0, "subject": 0, "restrict": [0, 28], "misrepres": 0, "claim": 0, "wrote": 0, "If": [0, 2, 17, 18, 19, 21, 24, 26, 27, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 49, 52, 58, 59, 60, 61, 62, 64, 72, 73, 75, 76, 77], "appreci": [0, 32], "requir": [0, 19, 28, 33, 58], "plainli": 0, "mark": [0, 33, 65], "being": [0, 19, 27, 28, 30, 33, 35, 36, 54, 77], "remov": [0, 19, 21, 28, 31, 32, 52, 65, 73], "avx": [0, 28], "inspir": 0, "extend": [0, 28, 46], "giovanni": 0, "garberoglio": 0, "implement": [0, 3, 19, 28, 30, 33, 54, 55, 56, 57, 58, 74], "sin": [0, 2], "co": [0, 46, 67], "sinco": 0, "exp": 0, "log": [0, 21, 26, 40], "h": [0, 28, 30, 33, 40, 41, 46, 51, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77], "gruntthepeon": 0, "free": [0, 28, 31, 32, 33, 35, 40], "fr": 0, "ssemath": 0, "2012": 0, "interdisciplinari": 0, "laboratori": 0, "scienc": 0, "lisc": 0, "fondazion": 0, "bruno": 0, "kessler": 0, "trento": 0, "sommar": 0, "18": [0, 19, 41, 46, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "38123": 0, "itali": 0, "convert": [0, 13, 17, 19, 21, 24, 25, 28, 57, 58, 68, 69, 70, 71, 73, 76], "hand": [0, 33], "sse2": 0, "arm": 0, "neon": 0, "amazingli": 0, "well": [0, 19, 27, 28, 36, 40, 74], "sincer": 0, "produc": 0, "header": [0, 26], "onli": [0, 2, 3, 17, 18, 19, 21, 24, 26, 28, 30, 33, 35, 40, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 72, 73, 77], "own": [0, 1, 28, 30, 32, 33, 40, 42, 54, 55, 56, 57, 58, 63, 66, 68, 69, 70, 71, 74, 75], "solv": [0, 30, 54], "freewar": 0, "l": 0, "peter": 0, "deutsch": 0, "1999": 0, "aladdin": 0, "enterpris": 0, "ghost": 0, "align": [0, 28, 31], "calculate_rmsd": 0, "script": [0, 21, 28, 33, 40, 46, 58, 72], "jimmi": 0, "charnlei": 0, "kromann": 0, "lar": 0, "bratholm": 0, "rmsd": [0, 77], "2013": [0, 54], "dk": 0, "bundl": [0, 28, 33, 40], "draw": 0, "graph": [0, 47, 75], "9": [0, 28, 30, 40, 41, 46, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "fouesneau": 0, "chang": [0, 1, 19, 27, 28, 30, 32, 33, 36, 40, 65, 68, 72, 74, 76, 77], "ve": 0, "run": [0, 19, 26, 28, 34, 35, 42, 43, 49, 58, 73], "through": [0, 19, 43, 73, 77], "2to3": 0, "simpl": [0, 17, 19, 26, 28, 30, 43, 44, 58, 65, 72, 73, 76, 77], "la": 0, "matplotlib": [0, 73], "imri": 0, "goldberg": 0, "plotter": 0, "pypi": 0, "org": [0, 18, 19, 21, 31, 40, 45, 49, 52, 57], "At": [0, 30, 40, 58, 76], "enoi": 0, "secur": 0, "me": [0, 19], "access": [0, 19, 21, 26, 35, 40, 45, 46, 50, 55, 56, 57, 58, 63, 66, 67, 68, 72], "my": 0, "thu": [0, 17, 33, 51, 56, 63], "quickli": [0, 19, 32, 35, 73], "figur": 0, "look": [0, 18, 19, 21, 26, 27, 30, 32, 38, 40, 41, 54, 58, 59, 60, 61, 62, 63, 74], "how": [0, 18, 19, 28, 33, 34, 35, 39, 40, 45, 46, 47, 48, 49, 51, 54, 55, 57, 58, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77], "could": [0, 30, 31, 33, 40, 41, 42, 47, 52, 54, 55, 58, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "quick": [0, 19, 38, 63, 73], "dirti": 0, "But": [0, 30, 33, 36, 69, 70, 71], "someth": [0, 21, 25, 32, 54, 59, 72, 75], "want": [0, 1, 21, 26, 30, 36, 40, 42, 46, 47, 51, 54, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77], "just": [0, 2, 18, 19, 26, 27, 28, 30, 33, 40, 41, 45, 59, 60, 61, 62, 65, 68, 69, 70, 71, 73, 74, 75, 76], "standard": [0, 3, 27, 28, 30, 33, 58, 65, 75], "ish": 0, "numpi": [0, 16, 28, 33, 73], "scipi": 0, "came": 0, "after": [0, 26, 32, 33, 40, 76, 77], "iter": [0, 19, 24, 28, 65], "ad": [0, 2, 19, 21, 28, 32, 33, 34, 36, 51, 65, 66, 73, 75, 76], "show": [0, 18, 19, 28, 30, 31, 35, 48, 49, 72], "curv": 0, "one": [0, 18, 19, 21, 26, 27, 30, 32, 46, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 77], "differ": [0, 3, 18, 19, 28, 30, 31, 33, 34, 35, 38, 40, 47, 52, 55, 57, 58, 76, 77], "marker": 0, "And": [0, 55, 59, 73], "usag": [0, 26, 28], "close": 0, "hist": 0, "hist2d": 0, "imshow": 0, "todo": 0, "axi": [0, 17, 19, 72, 76], "yet": [0, 33], "correct": [0, 28, 31, 32], "lazi": 0, "load": [0, 3, 21, 24, 26, 28, 33, 36, 38, 39, 41, 43, 45, 46, 47, 53, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "consol": [0, 14, 26, 48], "output": [0, 3, 21, 25, 26, 28, 33, 55], "print": [0, 21, 26, 28, 30, 40, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "datafram": [0, 41, 73, 75], "easili": [0, 28, 35, 40, 59, 60, 61, 62, 63, 74], "oper": [0, 18, 19, 21, 28, 29, 33, 40, 42, 54, 55, 56, 57, 58, 63, 65, 66, 77], "explor": [0, 40, 63], "user": [0, 1, 19, 28, 40, 57], "2023": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "view": [1, 2, 3, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 38, 41, 43, 45, 46, 49, 50, 57, 66, 67, 73, 74, 76, 77], "index": [1, 2, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 33, 39, 41, 43, 44, 66, 68, 69, 70, 71, 73, 74, 77], "propertymap": [1, 4, 18, 19, 28], "hold": [1, 2, 3, 19, 24, 62, 66, 67, 72], "collect": [1, 3, 18, 19, 28, 30, 33, 50, 55, 56, 57, 58, 64, 68, 69, 70, 71, 76], "suppli": [1, 2, 19, 21, 24, 75], "option": [1, 2, 16, 18, 19, 21, 25, 26, 30, 45, 77], "properti": [1, 3, 16, 18, 19, 24, 28, 29, 32, 38, 39, 43, 73, 76], "locat": [1, 27, 28, 33], "cljff": 1, "add": [1, 2, 18, 19, 21, 24, 26, 28, 32, 33, 34, 37, 63, 65, 66, 68, 73], "mol": [1, 3, 16, 18, 19, 21, 22, 24, 26, 28, 30, 32, 33, 41, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "set": [1, 3, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 31, 32, 34, 40, 54, 55, 56, 57, 58, 63, 65, 66, 68, 69, 70, 71, 72, 73, 76, 77], "charg": [1, 24, 25, 29, 46, 64, 65, 67], "chg": 1, "lj": [1, 46, 64, 65, 67, 75], "ljparam": 1, "propertymappropertynam": 1, "kwarg": [1, 17, 18, 19, 21, 24, 26], "like": [1, 21, 28, 30, 32, 33, 36, 40, 46, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71], "interfac": [1, 18, 19, 21, 24, 65], "c": [1, 2, 3, 17, 18, 19, 20, 21, 25, 27, 28, 30, 34, 38, 40, 41, 46, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "inde": [1, 30], "python": [1, 3, 19, 21, 28, 34, 35, 38, 40, 43, 44, 46, 48, 51, 54, 63, 64, 65], "should": [1, 17, 18, 19, 21, 26, 27, 28, 30, 33, 35, 36, 40, 48, 53, 58, 77], "christoph": [1, 2, 17, 19, 27], "wood": [1, 2, 17, 19, 27], "assign": [1, 2, 17, 18, 19, 27, 28, 38, 46, 54, 55, 56, 57, 58, 65], "arg1": [1, 2, 17, 18, 19, 27], "signatur": [1, 2, 17, 18, 19, 20, 25, 27], "sirebas": [1, 18, 19, 27, 65], "lvalu": [1, 2, 17, 18, 19, 27], "clone": [1, 2, 17, 18, 19, 24, 27, 40], "is_default": [1, 30], "isdefault": 1, "bool": [1, 2, 17, 18, 19, 20, 21, 26, 27], "return": [1, 2, 3, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 33, 41, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "map": [1, 3, 16, 18, 19, 21, 24, 28, 30, 40], "default": [1, 18, 19, 21, 25, 28, 30, 33, 53, 56, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77], "doesnt": [1, 27], "specifi": [1, 16, 17, 18, 19, 21, 26, 27, 30, 51, 63, 64, 65, 72, 73, 76, 77], "merg": [1, 28, 33, 35], "combin": [1, 28, 30, 33, 54, 55, 56, 57, 58, 63, 64, 73], "kei": [1, 3, 18, 19, 24, 39, 54, 57, 65, 73, 77], "take": [1, 21, 31, 33, 38, 40, 41, 43, 46, 63, 73], "preced": [1, 30], "over": [1, 24, 25, 28, 35, 36, 50, 65, 66, 68, 69, 70, 71, 74, 75, 77], "str": [1, 2, 17, 18, 19, 21, 25, 26, 27, 57], "valu": [1, 2, 17, 18, 19, 24, 26, 28, 30, 46, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77], "call": [1, 3, 17, 18, 19, 21, 24, 26, 28, 30, 33, 35, 40, 41, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 72, 73, 74, 76, 77], "char": [1, 2, 17, 18, 19, 27], "const": [1, 2, 17, 18, 19, 27], "object": [1, 2, 3, 17, 18, 19, 20, 21, 24, 27, 28, 30, 33, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72], "qstring": [1, 2, 17, 18, 19, 20, 27], "propertynam": [1, 18, 19], "to_dict": 1, "todict": 1, "raw": [1, 65], "underli": [1, 19], "dictionari": [1, 18, 19, 21, 46, 54, 65, 73, 74], "qhash": 1, "to_str": [1, 2, 17, 18, 19, 26, 27], "tostr": [1, 2, 17, 18, 19, 27], "string": [1, 2, 17, 18, 19, 21, 26, 27, 28, 29, 54, 55, 56, 57, 59, 60, 61, 62, 65], "represent": [1, 2, 17, 18, 19, 27, 31, 39], "typenam": [1, 2, 17, 18, 19, 27], "what": [1, 2, 17, 18, 19, 21, 31, 33, 36, 38, 41, 53, 63, 65, 73, 75], "create_map": [1, 4, 28], "construct": [1, 21, 31, 45, 59, 60, 61, 62, 65, 66, 72], "pass": [1, 2, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 33, 35, 41, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 72, 73, 76, 77], "let": [1, 19, 21, 28, 38, 40, 42, 45, 49, 57, 59, 60, 61, 62, 63, 66, 68, 72, 73, 75, 76, 77], "extra": [1, 32, 33], "normal": [1, 18, 19, 24, 30, 65, 77], "wouldn": 1, "instead": [1, 21, 28, 32, 33, 67, 68, 69, 70, 71, 72], "creat": [1, 3, 17, 19, 21, 24, 28, 29, 31, 32, 33, 34, 40, 42, 46, 47, 52, 54, 55, 56, 57, 58, 63, 65, 66, 75], "energi": [1, 3, 18, 19, 24, 25, 28, 38, 41, 43, 47, 68, 69, 70, 71, 77], "cutoff": [1, 27], "5": [1, 2, 28, 30, 32, 41, 46, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "angstrom": [1, 13, 17, 25, 27, 28, 63, 68, 72, 73, 76, 77], "equival": [1, 18, 19, 30, 63], "case": [1, 21, 27, 28, 30, 33, 41, 49, 51, 52, 54, 57, 58, 59, 62, 63, 64, 66, 67, 72, 73, 74, 76, 77], "coordin": [1, 16, 19, 21, 24, 27, 28, 30, 32, 38, 46, 52, 53, 54, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76], "my_coord": 1, "rather": [1, 19, 27, 28, 63, 65], "than": [1, 2, 19, 27, 28, 30, 33, 54, 55, 63, 65, 72], "recurs": 1, "item": [1, 21, 24, 54, 63, 65, 72], "note": [1, 2, 17, 18, 19, 21, 26, 27, 30, 32, 33, 35, 48, 51, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77], "don": [1, 3, 28, 30, 33, 40, 55, 66, 69, 70, 71, 77], "need": [1, 3, 21, 30, 32, 33, 35, 40, 41, 46, 51, 52, 55, 56, 57, 65, 73, 75], "handl": [1, 19, 26, 28, 32, 34, 37], "ca": [2, 3, 22, 30, 41, 46, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 75, 77], "algebra": [2, 3, 67, 68, 69, 70, 71], "entiti": 2, "ex": 2, "sireca": [2, 18], "float": [2, 17, 19, 20, 25, 26, 27, 28, 73], "val": [2, 25, 55, 56, 58, 63], "doubl": [2, 17, 19, 20, 25, 27, 42, 68, 69, 70, 71, 72], "complex": [2, 30, 59, 60, 61, 62, 65], "siremath": [2, 17, 27, 28], "expressionbas": 2, "children": 2, "child": [2, 26], "conjug": 2, "cube": 2, "diff": 2, "symbol": [2, 5, 19, 26, 28, 30, 54], "int": [2, 17, 18, 19, 20, 21, 26, 32], "level": [2, 21, 24, 26, 31, 39, 63], "synonym": [2, 72], "differenti": 2, "respect": [2, 27, 31, 42], "result": [2, 3, 18, 19, 21, 24, 28, 30, 31, 33, 35, 41, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 73, 74, 75, 77], "throw": [2, 17, 18, 19, 27, 28], "unavailable_differenti": 2, "divid": [2, 50, 73, 77], "z": [2, 17, 19, 30, 64, 72, 76], "evalu": [2, 18, 19, 24, 28, 64, 66, 72, 73], "numer": [2, 17, 30, 65], "unidentifi": 2, "assum": [2, 17, 18, 19, 27, 43, 44, 58], "equal": [2, 17, 19, 30, 63, 74, 77], "real": [2, 71], "arithmet": [2, 46, 67], "except": [2, 18, 19, 21, 26, 27, 28, 54, 57, 68, 77], "thrown": [2, 33], "domain_error": 2, "complexvalu": 2, "expand": [2, 3, 18, 19, 21, 26, 28, 30, 41, 46, 52, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 72, 73, 74, 75, 76, 77], "factor": [2, 67], "power": [2, 3, 21, 28, 36, 38, 54, 63, 73], "attempt": [2, 21, 26, 30], "rearrang": 2, "equat": 2, "n": [2, 17, 21, 28, 30, 40, 41, 46, 54, 55, 56, 57, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 77], "constant": 2, "etc": [2, 18, 19, 21, 28, 29, 33, 35, 38, 45, 46, 50, 51, 58, 63, 65, 72, 73, 74], "fail": [2, 30, 40], "rearrangement_error": 2, "qlist": [2, 18, 19, 27], "hash": [2, 19], "unsign": [2, 18, 19], "integ": [2, 19, 28, 30, 54, 55, 56, 57, 58], "integr": [2, 28], "unavailable_integr": 2, "invert": [2, 17, 18, 19, 28], "is_complex": 2, "iscomplex": 2, "is_compound": 2, "iscompound": 2, "compound": 2, "singl": [2, 17, 18, 19, 21, 28, 30, 32, 33, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 72, 73, 75, 77], "sum": [2, 26, 30, 74], "powerfunct": 2, "is_const": 2, "isconst": 2, "is_funct": 2, "isfunct": 2, "is_zero": 2, "iszero": 2, "multipli": 2, "negat": 2, "neg": [2, 27, 30, 63], "pow": 2, "rais": [2, 18, 32, 33, 34, 36, 54, 55, 57, 59, 60, 61, 62, 68, 77], "expresss": 2, "ration": 2, "root": [2, 77], "nth": [2, 29], "seri": [2, 28], "expans": [2, 29, 52], "try": [2, 26, 33, 40, 51, 57, 75], "ident": [2, 17, 19, 31, 58, 66], "unsafe_complex_simplif": 2, "necessarili": [2, 17], "true": [2, 19, 21, 26, 27, 30, 32, 65, 72, 73, 77], "arcsin": 2, "wherebi": 2, "been": [2, 19, 21, 28, 33, 41, 42, 49, 51, 54, 57, 58, 63, 67, 68, 69, 70, 71, 72, 73, 76], "subtract": 2, "to_open_m_m_str": 2, "toopenmmstr": 2, "openmm": [2, 28], "syntax": [2, 30, 54, 63, 77], "repres": [2, 3, 17, 19, 27, 28, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 76], "x": [2, 5, 21, 28, 30, 33, 54, 59, 63, 64, 72, 73, 75, 76], "y": [2, 5, 30, 33, 59, 64, 72, 73, 76], "symid": 2, "There": [2, 19, 28, 30, 41, 50, 54, 55, 58, 60, 61, 62, 63, 65, 72, 75, 77], "sym": 2, "els": [2, 21, 40, 42, 54], "present": 2, "id": [2, 18, 19, 24, 33, 54, 55, 59, 60, 61, 62], "uniqu": [2, 19, 28, 73], "definit": [2, 27, 28, 30], "arg0": [2, 19], "is_nul": [2, 18, 19, 26], "isnul": [2, 18, 19], "null": [2, 17, 18, 19, 26, 30, 58, 63], "match": [2, 17, 18, 19, 21, 24, 28, 29, 33, 40, 55, 57, 58, 59, 60, 61, 62, 63, 65], "exist": [2, 21, 26, 28, 30, 32, 33, 52, 54, 65], "lam": [2, 5], "\u03bb": 2, "primari": [3, 21], "submodul": 3, "import": [3, 21, 26, 28, 33, 40, 41, 43, 44, 45, 46, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74], "sr": [3, 19, 21, 28, 40, 41, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 72, 73, 74, 75, 76, 77], "main": [3, 28, 33, 35, 40, 57, 73], "gatewai": 3, "mostli": [3, 28, 71], "rare": [3, 19], "exampl": [3, 19, 21, 26, 28, 30, 31, 32, 33, 35, 38, 40, 42, 45, 46, 49, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "parser": [3, 21, 28, 53], "defin": [3, 19, 28, 30, 31, 33, 34, 57, 62, 71], "io": [3, 16, 22, 26], "molecul": [3, 9, 16, 18, 19, 21, 24, 27, 28, 29, 32, 36, 38, 41, 43, 44, 45, 46, 47, 50, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77], "each": [3, 17, 19, 21, 27, 28, 30, 33, 42, 45, 46, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77], "manipul": [3, 19, 36, 38, 39, 44], "search": [3, 18, 19, 20, 22, 24, 28, 29, 33, 38, 39, 41, 43, 49, 60, 61, 62, 68, 69, 70, 71], "behind": 3, "unit": [3, 16, 17, 18, 19, 21, 22, 25, 28, 30, 33, 42, 63, 65, 68, 69, 70, 71, 72, 74, 76, 77], "complet": [3, 19, 24, 28, 30, 33, 34, 35, 40, 52, 64, 74], "physic": [3, 31, 68, 69, 70, 71], "quantiti": [3, 19, 25], "proper": [3, 28], "point": [3, 17, 19, 21, 27, 28, 30, 32, 63, 73, 75], "space": [3, 17, 21, 27, 28, 30, 31, 63, 73], "vector": [3, 7, 17, 19, 21, 27, 28, 30, 64, 72, 76, 77], "sphere": [3, 7, 17, 66], "flexibli": 3, "interact": [3, 24, 48, 67, 75], "forc": [3, 28], "between": [3, 17, 18, 19, 21, 27, 28, 30, 35, 47, 54, 59, 60, 61, 62, 67, 73, 75, 77], "atom": [3, 9, 17, 18, 19, 21, 24, 27, 28, 29, 32, 38, 41, 43, 45, 46, 47, 49, 50, 51, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77], "input": [3, 21, 24, 27, 28, 33, 38, 40, 41, 42, 46, 52, 54, 55, 57, 73, 76], "molecular": [3, 18, 19, 21, 28, 36, 38, 39, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "mm": [3, 18, 22, 46, 67, 68, 69, 70, 72, 74], "mechan": [3, 62, 67, 71, 74], "forcefield": [3, 28, 38, 41, 46, 65, 67, 71], "enabl": [3, 21, 26, 28, 30, 63, 65, 72, 77], "rapidli": 3, "associ": [3, 19, 24, 28, 38, 46, 68, 69, 70, 71], "type": [3, 18, 19, 21, 28, 29, 33, 40, 43, 48, 49, 52, 59, 60, 61, 62, 64, 65, 68, 71, 73], "layer": [3, 28], "stream": [3, 22, 28], "pickl": [3, 28], "cross": [3, 28], "platform": [3, 35], "format": [3, 19, 21, 28, 33, 38, 43, 44, 51, 63, 68, 69, 70, 71, 73], "volum": [3, 27], "distanc": [3, 21, 27, 28, 29, 38, 43, 47, 63, 73], "boundari": [3, 21, 27, 30], "util": [3, 22, 26], "miscellan": 3, "fit": 3, "neatli": 3, "api": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 28, 33, 36, 42], "atomid": [3, 18, 19, 21, 54, 59, 60, 61, 62], "chainid": [3, 18, 19, 21, 56], "disable_thumbs_up": [3, 21], "get_thumbs_up_info": [3, 21], "load_test_fil": [3, 21], "measur": [3, 18, 21, 27, 28, 38, 39, 43], "molid": [3, 18, 19, 21, 58], "save": [3, 19, 21, 24, 26, 28, 33, 38, 39, 43, 47, 52, 65, 77], "save_to_str": [3, 21, 28, 51], "segid": [3, 18, 19, 21, 57], "supported_format": [3, 21, 53], "thumbs_up": [3, 21], "use_mixed_api": [3, 21], "use_new_api": [3, 21], "use_old_api": [3, 21, 28], "tutorial_url": [3, 21, 41, 46, 52, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 72, 73, 74, 75, 76, 77], "get_coords_arrai": [6, 16], "torsion": [7, 17, 21, 27, 28, 47, 61, 72], "triangl": [7, 17], "create_quaternion": [7, 17], "pi": [7, 17], "angl": [8, 13, 17, 18, 19, 21, 24, 25, 27, 28, 38, 41, 43, 45, 46, 47, 65, 67, 68, 70, 71, 74, 75], "bond": [8, 18, 19, 21, 24, 28, 29, 41, 43, 45, 46, 47, 58, 63, 65, 67, 69, 70, 71, 72, 74, 75], "dihedr": [8, 17, 18, 19, 21, 24, 28, 38, 41, 43, 45, 46, 47, 62, 65, 67, 68, 69, 71, 72, 74, 75], "improp": [8, 17, 18, 19, 21, 24, 28, 41, 43, 45, 46, 65, 67, 72, 74, 75, 77], "selectorangl": [8, 18, 60, 69, 73], "selectorbond": [8, 18, 28, 41, 59, 63, 68, 73], "selectordihedr": [8, 18, 61, 70], "selectorimprop": [8, 18, 62, 71], "selectormangl": [8, 18, 60], "selectormbond": [8, 18, 28, 41, 59], "selectormdihedr": [8, 18], "selectormimprop": [8, 18], "atomidx": [9, 18, 19, 30, 54, 58, 59, 60, 61, 62], "atomnam": [9, 19, 30, 32, 54, 55, 56, 57, 59, 60, 61, 62, 77], "atomnum": [9, 19, 30, 54, 59, 60, 61, 62], "bondtyp": [9, 19, 68], "chain": [9, 18, 19, 21, 24, 29, 43, 45, 46, 50, 55, 59, 60, 61, 62, 63, 68], "chainidx": [9, 19, 30, 56, 59, 60, 61, 62], "chainnam": [9, 19, 30, 56], "cursor": [9, 18, 19, 24, 28, 43, 46, 66, 68, 69, 70, 71, 77], "cursorsm": [9, 19], "element": [9, 17, 19, 28, 29, 41, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "molidx": [9, 19, 28, 30, 58, 75], "molnam": [9, 19, 30, 58], "molnum": [9, 19, 30, 41, 58, 59, 60, 63], "residx": [9, 19, 30, 55, 58, 59, 60, 61, 62, 74], "resnam": [9, 19, 30, 55, 56, 57, 58, 77], "resnum": [9, 19, 30, 55, 59, 63, 64, 68, 69, 70], "residu": [9, 18, 19, 21, 24, 28, 29, 43, 45, 46, 47, 49, 50, 54, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75], "segidx": [9, 19, 30, 57], "segnam": [9, 19, 30, 57], "segment": [9, 18, 19, 21, 24, 28, 30, 43, 45, 46, 50, 59, 60, 61, 62, 63, 68], "selectormol": [9, 18, 19, 24, 41, 58, 63], "stereoscopi": [9, 19, 68], "trajectoryiter": [9, 19, 28, 73], "approx_equ": [10, 20, 30], "delete_all_token": [10, 20, 30], "delete_token": [10, 20, 30, 63], "get_approx_epsilon": [10, 20, 30, 63], "get_min_protein_residu": [10, 20, 30, 58, 63], "get_protein_residue_nam": [10, 20, 30, 58, 63], "get_token": [10, 20, 30, 63], "has_token": [10, 20, 30], "set_approx_epsilon": [10, 20, 30, 63], "set_min_protein_residu": [10, 20, 30, 58, 63], "set_protein_residue_nam": [10, 20, 30, 58, 63], "set_token": [10, 20, 30, 63], "length": [13, 16, 18, 25, 28, 30, 68, 72, 76, 77], "set_energy_unit": [13, 25, 68, 74], "set_internal_unit": [13, 25, 68, 72, 73, 74], "set_length_unit": [13, 25, 68, 72, 73, 76], "set_mass_unit": [13, 25], "set_quantity_unit": [13, 25], "set_si_unit": [13, 25, 68, 72, 74], "set_time_unit": [13, 25], "picomet": [13, 25, 28, 30, 68, 72, 73], "nullprofil": [14, 26], "profil": [14, 26], "tabl": [14, 26, 30], "try_import": [14, 26], "try_import_from": [14, 26], "cartesian": [15, 21, 27], "periodicbox": [15, 27], "none": [16, 17, 18, 19, 20, 21, 24, 25, 26, 27], "arrai": [16, 17, 19, 28, 73], "shape": 16, "natom": [16, 18, 19, 21, 46, 67], "3x3": [17, 19], "3d": [17, 27, 72], "transform": 17, "checked_offset": 17, "checkedoffset": 17, "offset": 17, "sireerror": [17, 18, 19, 54, 68], "invalid_index": [17, 18, 19, 54], "column0": 17, "column": [17, 26, 54, 75], "column1": 17, "column2": 17, "static": [17, 19, 26, 28, 75], "covari": 17, "p": [17, 26, 27, 30, 40, 46, 65, 73], "q": [17, 25], "against": [17, 28, 30, 33, 73, 77], "min": [17, 30, 73], "len": [17, 54, 55], "qvector": [17, 19, 27], "determin": [17, 31, 73], "diagonalis": 17, "eigenvalu": 17, "boost": [17, 27, 28], "tupl": [17, 27, 72, 76], "null_typ": [17, 27], "enforce_symmetr": 17, "enforcesymmetr": 17, "ensur": [17, 28, 30, 32, 33, 34, 40, 54, 58, 68, 69, 70, 71, 77], "symmetr": [17, 27], "done": [17, 73, 75], "copi": [17, 19, 24, 27, 35, 58, 65], "upper": 17, "diagon": 17, "lower": [17, 28, 64], "left": [17, 77], "realli": [17, 32, 33, 42], "matrici": 17, "know": [17, 21, 33, 42, 54, 57, 69, 70, 71], "lost": [17, 28, 32, 40, 53], "symmetri": 17, "due": [17, 28], "round": [17, 30], "error": [17, 21, 26, 28, 30, 33, 40, 43, 52, 54, 55, 57, 65, 68, 69, 70, 71, 77], "void": [17, 18, 19, 20, 27, 32], "get_principal_ax": 17, "getprincipalax": 17, "obtain": [17, 68, 69, 70, 71, 74], "princip": 17, "ax": [17, 73], "sort": [17, 28], "highest": 17, "lowest": 17, "invers": [17, 19, 27], "math_error": 17, "cannot": [17, 26, 30], "is_ident": 17, "isident": 17, "is_symmetr": 17, "issymmetr": 17, "row0": 17, "row": [17, 19, 26, 73, 75], "row1": 17, "row2": 17, "set_to_ident": 17, "settoident": 17, "single_value_decomposit": 17, "singlevaluedecomposit": 17, "decomposit": [17, 28], "u": [17, 21, 32, 42], "v": [17, 33, 40, 72], "svd": 17, "trace": [17, 77], "transpos": 17, "xx": 17, "xy": 17, "xz": 17, "yx": 17, "yy": 17, "yz": 17, "zx": 17, "zy": 17, "zz": 17, "arg": [17, 18, 19, 21, 24, 26, 30, 55, 58, 63, 73], "three": [17, 19, 21, 27, 30, 60, 61, 62, 69, 71, 72, 74, 76], "four": [17, 21, 27, 28, 56, 61, 62, 70, 71, 72], "ly": [17, 55, 56, 58, 63], "plane": [17, 62], "imagin": [17, 62], "am": 17, "happi": [17, 33, 34, 42], "welcom": [17, 31, 32, 33, 34], "suggest": [17, 36], "around": [17, 27, 61, 70, 71, 76, 77], "line": [17, 19, 21, 33, 49, 51, 52, 54, 55, 57, 65, 73], "sireunit": [17, 18, 19, 25, 27], "physunit": [17, 18, 19, 27], "count": [17, 18, 19, 24, 28, 29, 58, 73], "improper_angl": [17, 21, 72], "improperangl": 17, "acut": [17, 27], "line03": 17, "line12": 17, "triangle1": 17, "point0": [17, 27], "point1": [17, 27], "point2": [17, 27], "triangle2": 17, "point3": [17, 27], "vector03": 17, "vector12": 17, "angle0": 17, "angle1": 17, "angle2": 17, "line0": 17, "line1": 17, "line2": 17, "vector0": 17, "vector1": 17, "vector2": 17, "precis": [17, 28, 68, 69, 70, 71, 72], "quaternion": [17, 19, 76], "rotat": [17, 19, 28, 47, 77], "ignor": [17, 19, 21, 63], "argument": [17, 18, 19, 21, 24, 25, 26, 30, 33, 45, 46, 49, 51, 52, 54, 55, 56, 57, 58, 64, 76], "interpret": [17, 19, 28], "degre": [17, 19, 27, 76, 77], "radian": [17, 19, 69, 70, 71, 76], "supersed": [17, 19], "descript": [17, 19], "describ": [17, 19, 21, 28, 30, 33, 35, 42, 54, 73], "\u03c0": 17, "141592653589793": 17, "assert_contain": [18, 19], "assertcontain": [18, 19], "moleculeview": [18, 19, 21, 24, 45, 46], "assert": [18, 19, 33], "siremol": [18, 19, 41, 46, 54, 55, 56, 57, 58, 63, 65, 66], "missing_atom": [18, 19, 54], "assert_has_metadata": [18, 19], "asserthasmetadata": [18, 19], "metakei": [18, 19], "metadata": [18, 19, 63], "missing_properti": [18, 19, 65], "assert_has_properti": [18, 19], "asserthasproperti": [18, 19], "assert_same_molecul": [18, 19], "assertsamemolecul": [18, 19], "same": [18, 19, 24, 27, 28, 30, 53, 54, 57, 58, 59, 63, 65, 66, 68, 72, 73, 74, 76, 77], "albeit": [18, 19], "incompatible_error": [18, 19, 68], "whose": [18, 19, 30, 33, 59, 63], "perhap": [18, 19, 58], "moleculedata": [18, 19], "siremm": [18, 46], "atom0": [18, 68, 69, 70, 71], "atom1": [18, 68, 69, 70, 71], "atom2": [18, 69, 70, 71], "selector_atom_": [18, 19, 54, 55, 58], "selector": [18, 19, 41, 54, 55, 56, 57, 58, 63, 65], "slice": [18, 19, 50, 54, 55, 56, 59, 60, 61, 62, 63, 68, 73], "long": [18, 19, 33], "qstringlist": [18, 19], "selector_chain_": [18, 19, 56], "involv": [18, 19, 30, 59, 60, 61, 62, 68, 69, 70, 71, 77], "missing_chain": [18, 19, 57], "duplicate_chain": [18, 19], "const_data": [18, 19], "constdata": [18, 19], "edit": [18, 19, 24, 28, 31, 32, 33, 36, 38, 43, 46, 68, 76, 77], "cutgroup": [18, 19], "cgid": [18, 19], "missing_cutgroup": [18, 19], "duplicate_cutgroup": [18, 19], "selector_cutgroup_": [18, 19], "delete_fram": [18, 19, 24, 73], "deletefram": [18, 19], "frame": [18, 19, 24, 28, 38, 41, 47, 73, 77], "generalunit": [18, 19, 28], "has_metadata": [18, 19], "hasmetadata": [18, 19], "has_properti": [18, 19], "hasproperti": [18, 19], "angleid": [18, 60], "is_empti": [18, 19], "isempti": [18, 19], "is_same_molecul": [18, 19], "issamemolecul": [18, 19], "is_selector": [18, 19], "isselector": [18, 19], "help": [18, 19, 21, 30, 32, 33, 34, 35, 39, 40, 57, 58, 68, 69, 70, 71], "distinguish": [18, 19], "load_fram": [18, 19, 24], "loadfram": [18, 19], "metadata_kei": [18, 19], "metadatakei": [18, 19], "metadata_typ": [18, 19], "metadatatyp": [18, 19], "idx": [18, 19, 21, 30, 54, 56, 57], "auto_reduc": 18, "fals": [18, 21, 26, 27, 30, 65, 77], "check": [18, 28, 33, 40, 42], "befor": [18, 19, 32, 33, 34, 35, 54, 75, 76, 77], "doesn": [18, 21, 28, 30, 32, 33, 40, 52, 54, 59, 69, 70, 71], "move": [18, 19, 27, 28, 33, 38, 43, 47, 58], "mover_angle_": 18, "mover": [18, 19], "num_atom": [18, 19, 21, 24, 41, 45, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 73], "num_chain": [18, 19, 24, 45], "nchain": [18, 19], "num_cutgroup": [18, 19], "ncutgroup": [18, 19], "num_fram": [18, 19, 24, 41, 73], "nframe": [18, 19], "num_residu": [18, 19, 24, 41, 45, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63], "nresidu": [18, 19], "num_seg": [18, 19, 24, 45], "nsegment": [18, 19], "num_view": [18, 19], "nview": [18, 19], "sub": [18, 19, 21, 26, 28, 33, 38, 39, 63, 67], "most": [18, 19, 28, 30, 33, 35, 40, 43, 54, 55, 57, 58, 68, 69, 70, 71, 73, 76, 77], "viewsofmol": [18, 19, 28], "potenti": [18, 28, 30, 67], "property_kei": [18, 19, 24, 46, 67, 68], "propertykei": [18, 19], "property_typ": [18, 19], "propertytyp": [18, 19], "selector_residue_": [18, 19, 55], "resid": [18, 19, 55, 56], "missing_residu": [18, 19], "save_fram": [18, 19, 24, 76, 77], "savefram": [18, 19], "selector_segment_": [18, 19, 57], "missing_seg": [18, 19], "select_al": [18, 19], "selectal": [18, 19], "select_all_atom": [18, 19], "selectallatom": [18, 19], "select_all_chain": [18, 19], "selectallchain": [18, 19], "select_all_cutgroup": [18, 19], "selectallcutgroup": [18, 19], "select_all_residu": [18, 19], "selectallresidu": [18, 19], "select_all_seg": [18, 19], "selectallseg": [18, 19], "selected_al": [18, 19], "selectedal": [18, 19], "select": [18, 19, 28, 40, 41, 59, 76], "atomselect": [18, 19], "size": [18, 19, 24, 28, 30, 31, 41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77], "to_list": [18, 19], "tolist": [18, 19], "propptr": [18, 19, 27], "to_molecul": [18, 19], "tomolecul": [18, 19], "to_selector": [18, 19], "toselector": [18, 19], "bondid": [18, 19, 59], "mover_bond_": 18, "atom3": [18, 70, 71], "dihedralid": [18, 61], "mover_dihedral_": 18, "improperid": [18, 62], "mover_improper_": 18, "phi": [18, 46, 67], "theta": [18, 46, 67], "__len__": [18, 19], "parent": [18, 19, 26, 54, 55, 56, 57, 58], "intersect": [18, 19], "mover_selectorangle_": 18, "stage_paramet": [18, 19], "nglview": [18, 19, 24, 28, 49], "viewer": [18, 19, 24, 65], "jupyt": [18, 19, 24, 40, 48, 49, 73, 75, 76], "captur": [18, 19], "variabl": [18, 19, 26, 28, 33, 52], "nglviewer": [18, 19, 38, 49], "displai": [18, 19], "configur": [18, 19, 33, 40, 47], "control": [18, 19, 33, 58, 73, 77], "render": [18, 19, 26, 28], "licoric": [18, 19], "dict": [18, 19, 21], "stage": [18, 19, 28], "paramet": [18, 19, 21, 28, 33, 38, 41, 46, 53, 58, 64, 65, 67, 71], "get": [18, 19, 21, 27, 28, 30, 33, 35, 40, 41, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77], "mover_selectorbond_": 18, "mover_selectordihedral_": 18, "mover_selectorimproper_": 18, "multi": [18, 19, 30, 58, 59], "appli": [18, 19, 24, 28, 31, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77], "func": [18, 19], "append": [18, 19], "actual": [18, 19, 30, 68, 72], "lambda": [18, 19, 28, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75], "posit": [18, 19, 30, 31, 63, 64, 76], "keyword": [18, 19, 30, 33, 76], "obj": [18, 19, 54, 57], "self": [18, 19, 27], "per": [18, 19, 46, 64, 65, 66, 68, 69, 70, 71, 74], "apply_reduc": [18, 19, 24, 28, 64, 74], "reduction_func": [18, 19], "reduc": [18, 19, 24, 28, 33, 48, 52, 64, 68, 69, 70, 71], "reduct": [18, 19, 24, 64], "isn": [18, 19, 21, 42], "selectorm_cutgroup_": [18, 19], "selectorm": [18, 19, 58, 63], "evaluatorm": [18, 19], "num_molecul": [18, 19, 24, 49, 52, 58], "nmolecul": [18, 19], "search_str": [18, 19], "selectresult": [18, 19], "to_molecule_group": [18, 19, 24], "tomoleculegroup": [18, 19], "moleculegroup": [18, 19, 24, 28], "to_select_result": [18, 19], "toselectresult": [18, 19], "updat": [18, 19, 24, 26, 28, 33, 35, 65, 75, 76], "assert_contains_metadata": 19, "assertcontainsmetadata": 19, "atomproperti": [19, 28, 64], "piec": [19, 42], "assert_contains_properti": 19, "assertcontainsproperti": 19, "cg_atom_idx": 19, "cgatomidx": 19, "atomeditor": 19, "editor": [19, 65], "total": [19, 24, 26, 30, 41, 50, 63, 64, 68, 69, 70, 71, 74, 75, 77], "second": [19, 33, 58, 59, 61, 62, 64, 71, 73, 76], "attach": [19, 21], "everyth": [19, 28, 30, 40, 42, 43], "empti": [19, 27, 59, 60, 61, 62, 65], "is_within_chain": 19, "iswithinchain": 19, "is_within_residu": 19, "iswithinresidu": 19, "is_within_seg": 19, "iswithinseg": 19, "mover_atom_": 19, "property_as_properti": 19, "propertyasproperti": 19, "propertyptr": 19, "property_as_vari": 19, "propertyasvari": 19, "qvariant": 19, "whole": [19, 27, 47, 57, 67, 76], "molinfo": 19, "identifi": [19, 21, 29, 63, 73, 75], "typic": [19, 40, 47, 54, 55, 56, 57, 62, 63, 65], "pdb": [19, 21, 28, 41, 45, 51, 53, 73], "Be": [19, 40, 42, 54, 55, 56, 57], "care": [19, 54, 55, 56, 57], "confus": [19, 30], "fifth": [19, 61], "whatev": [19, 57, 59], "aromatic_bond": 19, "aromaticbond": 19, "aromat": 19, "double_bond": [19, 68], "doublebond": 19, "is_defin": 19, "isdefin": 19, "is_doubl": 19, "isdoubl": 19, "is_singl": 19, "issingl": 19, "is_tripl": 19, "istripl": 19, "tripl": [19, 60], "isromat": 19, "isaromat": 19, "sdf_valu": 19, "sdfvalu": 19, "sdf": [19, 21, 28, 49, 52, 53, 68], "single_bond": 19, "singlebond": 19, "triple_bond": 19, "triplebond": 19, "undefined_bond": 19, "undefinedbond": 19, "undefin": 19, "chainproperti": 19, "atom_idx": 19, "indici": [19, 30, 54, 58, 59, 60, 61, 62], "thei": [19, 21, 24, 27, 28, 30, 31, 33, 35, 54, 55, 56, 57, 58, 64, 65, 66, 73, 76], "appear": [19, 31, 33, 54, 68], "chaineditor": 19, "mover_chain_": 19, "res_idx": 19, "moldata": 19, "intern": [19, 68, 74, 77], "navig": [19, 40], "while": [19, 30, 33, 40, 41, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77], "intend": [19, 33], "commit": [19, 28, 31, 34, 35, 65, 66, 68, 69, 70, 71, 76, 77], "newli": 19, "delet": [19, 24, 30, 63], "get_index": 19, "current": [19, 21, 24, 26, 30, 33, 35, 40, 52, 63, 72, 76], "get_nam": 19, "get_numb": 19, "is_angl": 19, "is_atom": 19, "is_bond": 19, "is_chain": 19, "is_dihedr": 19, "is_improp": 19, "is_intern": 19, "is_molecul": 19, "is_residu": 19, "is_same_editor": 19, "seen": [19, 32, 33, 65, 72], "is_seg": 19, "trajectori": [19, 24, 28, 38, 39, 41, 43, 53], "suitabl": 19, "center": [19, 24, 26, 27, 30, 60, 64, 66, 71, 72, 73, 76, 77], "henc": [19, 54, 74], "mass": [19, 24, 25, 28, 29, 46, 64, 65, 66, 67, 72, 73, 76, 77], "set_nam": 19, "set_numb": 19, "translat": [19, 27, 28, 47, 77], "underpin": 19, "conveni": [19, 55, 68, 69, 70, 71], "easier": [19, 28, 29, 32, 33, 36, 44, 47, 58, 73, 74], "abl": [19, 28, 40, 65], "back": [19, 33, 40, 58, 64, 65, 71, 74], "plu": [19, 74], "across": [19, 21, 26, 27, 28, 30, 38, 41, 43, 46, 47, 58, 59, 65, 73], "reflect": [19, 36], "date": [19, 35], "chemic": [19, 29, 58, 59, 60, 61, 62, 71], "easi": [19, 21, 33, 65, 68, 69, 70, 71], "storag": [19, 40], "veri": [19, 24, 28, 33, 54, 64, 65, 76], "low": 19, "pointer": [19, 28], "privat": [19, 28, 31, 33], "elementdata": 19, "declar": 19, "elementdb": 19, "cpp": [19, 28, 33], "actinid": 19, "alkali_earth_met": 19, "alkaliearthmet": 19, "alkali": 19, "earth": 19, "metal": 19, "group": [19, 27, 28, 35, 59], "alkali_met": 19, "alkalimet": 19, "biolog": [19, 30], "first": [19, 21, 26, 28, 30, 33, 40, 41, 45, 46, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77], "nobl": [19, 30], "ga": [19, 27], "halogen": [19, 30], "preclud": 19, "iron": 19, "potassium": 19, "calcium": 19, "biological_el": 19, "biologicalel": 19, "guess": [19, 21, 26, 51], "nearest": 19, "coupl": 19, "proton": [19, 28, 30, 55], "blue": 19, "colour": 19, "bond_order_radiu": 19, "bondorderradiu": 19, "radiu": [19, 30, 65, 66], "color": [19, 28, 65], "rgb": 19, "255": [19, 55, 73], "color_nam": [19, 65], "covalent_radiu": [19, 65], "covalentradiu": 19, "coval": [19, 65], "element_with_mass": 19, "elementwithmass": 19, "closest": [19, 27], "green": 19, "iupac": [19, 30], "lanthanid": 19, "too": [19, 30, 55, 56, 57, 58, 72, 73], "big": 19, "problem": [19, 28, 34, 42, 43, 75], "surpris": 19, "hear": 19, "hex_color": 19, "hex": 19, "averag": [19, 73], "max_bond": 19, "maxbond": 19, "maximum": [19, 27, 30, 64], "simultan": 19, "local": [19, 33], "languag": [19, 31], "noble_ga": 19, "noblega": 19, "num_proton": 19, "nproton": 19, "7": [19, 28, 33, 41, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "rare_earth": 19, "rareearth": 19, "red": 19, "transition_met": 19, "transitionmet": 19, "transit": 19, "vdw_radiu": 19, "vdwradiu": 19, "van": 19, "der": 19, "waal": 19, "molgroup": 19, "molgroupsbas": 19, "get_unique_numb": 19, "getuniquenumb": 19, "orer": 19, "addit": [19, 26, 28, 33, 40, 56, 64, 68, 69, 70, 71, 73, 76, 77], "therebi": [19, 21], "keep": [19, 27, 33, 34, 62, 71], "small": [19, 21, 28, 33, 42], "renam": [19, 26, 30], "43": [19, 41, 54, 55, 56, 58, 62, 63, 65, 73, 75, 77], "ala": [19, 21, 30, 41, 46, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 72, 74, 75, 76, 77], "subgroup": 19, "ala49": 19, "49": [19, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 73, 75, 77], "ala49_0": 19, "all_ala49": 19, "seg": [19, 30, 66], "moleditor": 19, "posses": 19, "info": [19, 21, 26, 32, 54, 55, 57, 65, 68], "moleculeinfo": 19, "layout": [19, 54], "join": [19, 35, 42], "mover_molecule_": 19, "although": [19, 33], "sai": [19, 67], "noth": [19, 21, 26, 30], "reseditor": 19, "resproperti": 19, "mover_residue_": 19, "segproperti": 19, "segeditor": 19, "mover_segment_": 19, "mol_num": 19, "down": [19, 27, 73], "is_down": 19, "isdown": 19, "is_not_stereo": 19, "isnotstereo": 19, "stereo": [19, 68], "is_up": 19, "isup": 19, "not_stereo": 19, "notstereo": 19, "6": [19, 28, 30, 33, 41, 46, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "process": [19, 28, 33, 35, 65, 76], "val0": 20, "val1": 20, "token": [20, 29], "qset": 20, "ep": 20, "nre": 20, "high": [21, 63, 68, 69, 70, 71], "hope": [21, 29, 33], "num": [21, 30, 54, 55], "case_sensit": 21, "identif": 21, "sensit": 21, "perman": [21, 31], "disabl": [21, 28, 31, 77], "thumb": 21, "home": [21, 40], "directori": [21, 26, 28, 33, 40, 52], "sire_no_thumbs_up": 21, "txt": [21, 28, 33], "deni": 21, "sent": [21, 26, 28], "openbiosim": [21, 31, 33, 34, 40, 49, 52, 57], "re": [21, 28, 30, 33, 50, 55, 64, 66, 72, 77], "path": [21, 28, 33, 40, 49, 51], "union": [21, 26], "prepend": 21, "filenam": [21, 49, 51, 52], "suffix": 21, "bz2": [21, 49, 52, 57], "url": [21, 28, 33, 40, 41, 49, 52], "urea": 21, "gro": [21, 51, 53, 63], "crd": [21, 41, 46, 52, 53, 58, 59, 60, 61, 62, 66, 67, 72, 74, 76, 77], "show_warn": 21, "download": [21, 33, 40, 45, 49, 52, 57], "split": [21, 32, 77], "popul": [21, 27], "messag": [21, 33], "warn": [21, 26, 49], "diagnos": 21, "why": [21, 74], "wasn": [21, 28, 30], "encount": [21, 58], "lead": [21, 32, 33, 53], "noisi": 21, "silenc": 21, "unzip": [21, 45, 49, 52, 57], "caffein": 21, "went": 21, "wrong": 21, "share": [21, 40, 42], "tutori": [21, 28, 30, 34, 35, 36, 38, 40, 41, 42, 44, 45, 48, 52], "websit": [21, 28, 32, 33, 42, 49], "compress": [21, 52], "item0": 21, "item1": 21, "item2": 21, "item3": 21, "ignore_spac": 21, "two": [21, 27, 30, 33, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 72, 73, 74, 75, 77], "account": [21, 28, 30, 31, 40], "minimum": [21, 27, 30, 58, 63], "imag": [21, 27], "convent": [21, 27, 33, 48, 64], "box": [21, 27, 28], "infinit": [21, 27, 28], "depend": [21, 28, 30, 33, 40, 55, 58, 72, 77], "param": 21, "still": [21, 32, 42, 56], "absolut": 21, "mol1": 21, "mol2": [21, 28, 51, 53], "mol3": 21, "broken": 21, "memori": [21, 28, 33, 40, 51], "text": [21, 26, 28, 32, 53], "amount": [21, 26, 48, 53, 64, 77], "visit": 21, "tell": [21, 40, 52], "support_old_module_nam": 21, "new": [21, 24, 28, 30, 33, 34, 35, 36, 38, 42, 65, 66, 76], "old": [21, 28], "migrat": [21, 28], "temporari": [21, 28, 31, 40], "port": [21, 28, 34, 40], "start": [21, 26, 28, 30, 32, 33, 40, 43, 48, 73], "safe": 21, "knowledg": 21, "aim": [21, 28, 33, 35, 71], "finish": [21, 33], "though": [21, 28, 57, 75], "forev": [21, 34], "duplic": [21, 28], "reason": [21, 31, 33], "act": [24, 31, 58], "similarli": [24, 30, 34, 56, 63, 64, 72, 75], "those": [24, 28, 30, 36, 40, 59, 60, 61, 62, 65, 68, 69, 70, 71], "subset": [24, 38, 41, 47], "geometri": [24, 72], "ith": 24, "individu": [24, 28, 30, 31, 33, 36, 64, 65, 68, 72, 73, 75], "content": 24, "systm": 24, "specfi": 24, "onto": [24, 33], "end": [24, 26, 32, 33, 51, 54], "set_properti": 24, "accord": [24, 27, 77], "session": [24, 40, 48, 58], "alreadi": [25, 42, 49, 58, 63, 65, 72], "tempbas": 25, "from_unit": 25, "to_unit": 25, "convers": [25, 28], "switch": [25, 26, 28, 33, 36, 74, 77], "akma": 25, "gram": 25, "kilocalori": [25, 68, 69, 70, 71, 74], "kcal": [25, 41, 46, 64, 65, 68, 69, 70, 71, 74, 75], "picosecond": 25, "mole": [25, 68, 69, 70, 71, 74], "mod_electron": 25, "si": [25, 28, 68, 72, 74], "kilojoul": [25, 68, 69, 70, 71], "kj": [25, 68, 74], "nanomet": [25, 72], "singleton": 26, "rich": [26, 28], "debug": 26, "markdown": 26, "debugging_en": 26, "section": 26, "panel": 26, "width": [26, 28], "pad": 26, "markup": 26, "print_except": 26, "redirect_output": 26, "outdir": 26, "auto_bzip": 26, "redirect": [26, 28, 40], "rule": [26, 28, 30], "titl": 26, "screen": [26, 28, 73], "accumul": 26, "filehandl": 26, "buffer": 26, "clear": [26, 32, 33], "set_debugging_en": 26, "off": [26, 77], "set_them": 26, "metaward": 26, "supports_emoji": 26, "emoji": 26, "manual": [26, 73, 75], "instrument": 26, "child_tot": 26, "spent": 26, "long_loop": 26, "stop": [26, 40, 69, 70, 71], "record": [26, 28], "millisecond": 26, "accur": 26, "nanosecond": 26, "show_foot": 26, "show_edg": 26, "add_column": 26, "justifi": [26, 33], "no_wrap": 26, "footer": 26, "justif": 26, "add_row": 26, "package_registri": 26, "pip": 26, "easy_instal": 26, "sy": 26, "mdtraj": 26, "md": 26, "argv": 26, "stdout": [26, 28], "fromlist": 26, "module_to_packag": 26, "mapreduc": 26, "scoop": 26, "futur": [26, 36], "ut": 26, "overload": 27, "simvolum": 27, "orthoganol": 27, "correspond": [27, 30, 40, 60, 61, 62, 64, 65, 72, 73, 74], "tradit": 27, "phase": [27, 28], "sirevol": 27, "beyond": 27, "dist": 27, "aabox": 27, "aabox0": 27, "aabox1": 27, "enclos": 27, "coordgroup": 27, "group0": 27, "group1": 27, "calc_angl": 27, "calcangl": 27, "lie": 27, "180": 27, "calc_dihedr": 27, "calcdihedr": 27, "clockwis": 27, "360": [27, 76], "calc_dist": 27, "calcdist": 27, "mat": 27, "shortest": 27, "pairmatrix": 27, "group2": 27, "calc_dist2": 27, "calcdist2": 27, "calc_dist_vector": 27, "calcdistvector": 27, "distvector": 27, "distmat": 27, "interpoint": 27, "b": [27, 28, 32, 33, 56], "calc_inv_dist": 27, "calcinvdist": 27, "smallest": [27, 30, 58], "calc_inv_dist2": 27, "calcinvdist2": 27, "change_volum": 27, "changevolum": 27, "delta": [27, 77], "get_box_cent": 27, "getboxcent": 27, "central": [27, 60, 61, 62, 71, 77], "get_copies_within": 27, "getcopieswithin": 27, "mere": 27, "get_images_within": 27, "getimageswithin": 27, "get_minimum_imag": 27, "getminimumimag": 27, "coordgrouparrai": 27, "translate_as_on": 27, "get_random_point": 27, "getrandompoint": 27, "rangener": 27, "truli": 27, "anywher": [27, 42], "10": [27, 28, 30, 32, 33, 36, 40, 41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 73, 75, 76, 77], "20": [27, 28, 30, 40, 41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 75, 76], "is_cartesian": 27, "iscartesian": 27, "is_period": 27, "isperiod": 27, "maximum_cutoff": 27, "maximumcutoff": 27, "obei": 27, "largest": [27, 57, 58], "half": [27, 30, 54], "side": 27, "minimum_dist": 27, "minimumdist": 27, "box0": 27, "box1": 27, "set_volum": 27, "setvolum": 27, "replic": 27, "infin": 27, "along": [27, 54, 76], "replica": 27, "togeth": [27, 30, 33, 42, 68, 69, 70, 71], "effect": 27, "now": [27, 28, 33, 35, 36, 40, 53, 63, 65, 66, 73, 75, 76], "treat": [27, 54, 72, 74], "larger": [27, 28, 30, 50, 63, 64], "break": [27, 28, 33], "place": [27, 28, 30, 33, 42, 54, 58, 64, 72, 73, 77], "max_coord": 27, "maxcoord": 27, "min_coord": 27, "mincoord": 27, "set_dimens": 27, "setdimens": 27, "span": 27, "scale": [27, 28, 46, 67], "uniformli": 27, "achiev": [27, 33, 58, 77], "sinc": [28, 36, 47, 53], "organis": 28, "refurbish": 28, "driven": [28, 33], "ppxasjsm": [28, 37], "jmichel80": [28, 37], "compris": [28, 59, 60, 61, 62, 68, 69, 70, 71], "2495": 28, "lohedg": [28, 35, 37], "chryswood": [28, 37], "halx": [28, 37], "ptosco": [28, 37], "sofiabariami": [28, 37], "fjclark": [28, 37], "steboss": [28, 37], "nigel": [28, 37], "palmer": [28, 37], "msuruzon": [28, 37], "kexul": [28, 37], "begin": [28, 41], "doc": [28, 33], "folder": [28, 33, 40], "clean": [28, 36, 40], "__all__": [28, 33], "moment": 28, "grow": 28, "implicitli": 28, "demonstr": [28, 66, 74], "teach": [28, 47], "fulli": [28, 33, 35, 42, 59, 60, 61, 62], "robust": [28, 72], "consist": [28, 30, 32, 33], "guid": [28, 34, 40, 63], "grammar": [28, 30], "behav": [28, 46, 55, 56, 57, 58, 63, 64, 66], "step": [28, 30, 54, 76], "hide": 28, "eventu": 28, "generalunitproperti": 28, "expos": [28, 33], "monkei": 28, "patch": 28, "improv": [28, 34], "unicod": 28, "empow": 28, "userto": 28, "choos": [28, 30], "full": [28, 30, 33, 40, 51, 54, 67, 68, 72, 77], "impact": 28, "relat": 28, "emb": 28, "expect": [28, 31, 33, 55, 56, 57], "progress": 28, "bar": 28, "indic": [28, 30, 33], "rework": 28, "dcd": [28, 73], "traj": [28, 41, 53, 75], "queri": [28, 30, 68, 69, 70], "cool": [28, 54], "thing": [28, 32, 47, 54, 55, 63, 66, 73, 74], "playabl": 28, "movement": [28, 39, 43], "sure": [28, 33, 59, 60, 61, 62, 72], "coords2": 28, "speak": 28, "almost": 28, "themselv": [28, 30, 64], "plain": [28, 68, 69, 70, 71], "fix": [28, 30, 33, 34, 35, 42, 71, 75], "suit": [28, 33], "unnecessari": 28, "truth": 28, "began": 28, "build": [28, 33, 35, 40, 44, 63], "window": [28, 33, 40, 42], "framework": [28, 39], "circular": 28, "particularli": [28, 55, 57, 58, 65], "decemb": 28, "restraint": 28, "pme": 28, "fep": 28, "pr": 28, "trigger": [28, 35], "extern": 28, "fork": [28, 35], "exclud": [28, 59, 67], "dummi": [28, 30, 58, 63], "repartit": 28, "hydrogen": [28, 30, 41, 46, 58, 59, 60, 61, 62, 63, 64, 68, 69, 72, 76, 77], "deprec": 28, "py37": 28, "novemb": 28, "hetatm": 28, "ter": 28, "simfil": 28, "dat": 28, "chamber": 28, "topologi": [28, 52, 53, 73], "detect": 28, "tovector": 28, "method": [28, 33], "veloc": [28, 46, 53, 65, 67, 73], "gromac": [28, 38, 53], "py": [28, 32, 33, 40, 54, 57], "ambertool": 28, "host": 28, "biosimspac": [28, 33, 36, 39, 40], "environ": [28, 31, 42, 43, 44], "abil": 28, "dev": [28, 40], "label": [28, 33, 40], "becom": 28, "underscore_cas": 28, "backward": [28, 35], "To": [28, 30, 32, 33, 35, 40, 41, 46, 49, 54, 63, 64, 65, 66, 72, 73, 76], "pytest": [28, 33, 34, 63], "overhaul": 28, "optimis": 28, "cmakelist": 28, "setup": [28, 40], "maco": [28, 33, 40, 42], "m1": 28, "recip": 28, "linux": [28, 33, 40, 42], "2022": 28, "pars": [28, 33], "miniforg": 28, "mambdabuild": 28, "boa": 28, "timeout": 28, "grotop": [28, 53], "oz": 28, "compil": [28, 33], "flag": [28, 33], "o": [28, 30, 41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72], "illeg": 28, "hardwar": 28, "clang": 28, "14": [28, 30, 41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77], "x86_64": 28, "reconstruct": 28, "triclin": 28, "miss": 28, "march": 28, "solvent_point": 28, "amberprm7": 28, "sigma_av": 28, "openmmfreenergyst": 28, "assumpt": 28, "perturb": [28, 38], "alwai": [28, 30, 40, 53, 54, 58, 72], "signific": [28, 33], "enhanc": 28, "sireio": 28, "updatecoordinatesandveloc": 28, "significantli": 28, "200x": 28, "speed": [28, 33], "remap": 28, "bottleneck": 28, "larg": 28, "protein": [28, 29, 45, 53, 54, 55, 56, 57, 58, 63, 66, 73], "ligand": [28, 55, 58], "gsl": 28, "fault": 28, "singular": 28, "jan": 28, "swap": 28, "water": [28, 29, 41, 58, 63, 72, 74, 75], "preserv": [28, 53], "fallback": 28, "bgf": 28, "solver": 28, "analysi": [28, 73, 76], "skip": 28, "infer": [28, 68, 69, 70], "latest": [28, 40, 42], "substanti": 28, "mini": 28, "codebas": 28, "awai": [28, 36, 75], "qalgorithm": 28, "qt": [28, 30], "constructor": [28, 73], "oneapi": 28, "abi": 28, "minim": 28, "nativ": [28, 33], "compliant": [28, 32, 33], "upload": [28, 33], "anaconda": [28, 33, 43, 44], "cloud": 28, "2021": 28, "aug": 28, "ryckaert": 28, "bellememan": 28, "fourier": 28, "arbitrari": [28, 50, 55, 56, 57, 72], "pdb2": 28, "numextra": 28, "parm": 28, "natyp": 28, "solti": 28, "aren": [28, 32, 77], "incorrect": 28, "tip5p": 28, "correctli": 28, "opl": 28, "field": 28, "mmdetail": 28, "librari": [28, 34, 40, 44, 73], "std": [28, 73], "tbb": 28, "analyt": 28, "libcpuid": 28, "conect": 28, "connect": [28, 30, 46, 60, 61, 62, 65, 67, 68, 69, 70, 71, 77], "pmemd": 28, "seed": 28, "freenrg": 28, "cycl": 28, "2020": 28, "waterview": 28, "extract": [28, 32, 33, 41, 68, 69, 70, 71], "stabl": 28, "freeenergyanalysi": 28, "pymbar": 28, "loop": [28, 32, 50, 54, 55, 56, 57, 58, 66, 68, 69, 70, 71, 73, 74, 75], "cut": 28, "minor": 28, "copil": 28, "runtim": 28, "2019": 28, "ring": 28, "intrascal": [28, 46, 65, 67], "effici": [28, 33], "scanhead": 28, "octob": 28, "pin": 28, "septemb": 28, "writer": 28, "background": 28, "restart": [28, 53], "everi": [28, 30, 41, 58, 65, 73, 74, 75, 76], "monitor": 28, "libpython": 28, "prevent": [28, 33, 71, 77], "statist": [28, 73], "track": 28, "mc": 28, "heavi": 28, "light": 28, "recent": [28, 40, 54, 55, 57], "temporarili": [28, 31], "amberprm": 28, "thread": 28, "continu": [28, 32, 42], "autom": 28, "deploy": 28, "final": [28, 33, 34, 77], "2018": [28, 54], "reader": 28, "modern": 28, "ubuntu": 28, "bugfix": 28, "crash": 28, "spirit": 28, "quantomm": 28, "ion": [28, 30, 63], "solut": [28, 74], "signficantli": 28, "charmm": [28, 38, 53], "localis": 28, "mbar": 28, "molecu": 28, "better": [28, 30, 33, 63, 77], "2017": [28, 40, 54], "gro87": [28, 51, 53], "charmmpsf": 28, "moleculepars": 28, "isrun": 28, "wait": 28, "prmtop": [28, 53], "rst7": [28, 53], "rst": [28, 53], "trj": [28, 53], "parallel": 28, "prm": [28, 53], "arch": 28, "temperatur": 28, "512": 28, "intel": [28, 40], "knl": 28, "successfulli": 28, "gcc": 28, "2016": [28, 54], "macosx_deployment_target": 28, "execut": [28, 33], "mountain": 28, "lion": 28, "ligandswap": 28, "waterswap": 28, "multidoubl": 28, "meant": 28, "lib": [28, 54, 57], "lib64": 28, "suse": 28, "22": [28, 41, 46, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77], "block": 28, "faster": [28, 33], "semi": 28, "workshop": [28, 35], "29": [28, 41, 50, 54, 55, 56, 58, 59, 60, 63, 65, 73, 75, 76], "nautilu": 28, "gradient": 28, "compuat": 28, "openmmfreenergst": 28, "finit": 28, "differec": 28, "separ": [28, 31, 32, 52], "equilibr": 28, "timestep": 28, "repositori": [28, 35], "archiv": 28, "2775": 28, "nividic73": [28, 37], "svndump": 28, "histori": [28, 36], "831": [28, 63], "protom": 28, "rewrit": 28, "fortran": 28, "essex": 28, "understand": [29, 30, 43], "comparison": [29, 63, 65], "logic": [29, 54], "advanc": [29, 31], "approxim": [29, 63], "custom": [29, 65, 73, 75], "concept": [30, 58], "pair": [30, 33, 59, 67, 73, 74], "belong": [30, 55, 56, 57], "sometim": [30, 40, 57], "shorten": [30, 63], "35": [30, 41, 46, 54, 55, 56, 58, 59, 60, 63, 65, 67, 69, 73, 75, 77], "last": [30, 33, 40, 54, 55, 57, 58, 68, 69, 70, 73, 75], "rang": [30, 33, 40, 50, 54, 55, 56, 58, 73, 74, 76, 77], "revers": [30, 54, 56], "unbound": 30, "upward": [30, 53], "downward": 30, "12": [30, 41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77], "100": [30, 41, 54, 55, 63, 73, 75, 77], "regular": 30, "glob": [30, 52, 55, 56, 57, 58], "pattern": 30, "al": [30, 54], "hi": [30, 55, 58, 63], "esdp": 30, "d": [30, 56], "hie": [30, 55, 58, 63], "hid": [30, 55, 58, 63], "hip": [30, 55, 58, 63], "wildcardtoregularexpress": [30, 54], "further": [30, 31, 74], "insensit": [30, 54, 58], "asp": [30, 55, 56, 58, 63], "compar": [30, 33], "less": [30, 54, 63, 65], "16": [30, 41, 46, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76], "best": [30, 31, 59, 60, 61, 62, 65, 69, 70, 71], "bracket": 30, "searcher": 30, "introduc": [30, 33, 68, 69, 70], "complic": 30, "becaus": [30, 40, 52, 54, 55, 56, 57, 58, 63, 64, 65, 67, 72, 73, 74, 75, 77], "sit": 30, "outsid": 30, "hierarchi": 30, "smaller": 30, "decompos": 30, "prefer": [30, 33], "rel": [30, 33, 77], "summaris": 30, "atomv": 30, "anoth": [30, 40, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 76], "think": [30, 74], "insid": [30, 33], "explicit": [30, 31], "natur": [30, 33], "view_typ": 30, "abbrevi": [30, 32], "bridg": 30, "basic": [30, 76], "where": [30, 33, 40, 61, 63, 72], "wholli": [30, 59, 62], "carbon": [30, 41, 46, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 75, 77], "na": [30, 63], "lowercas": [30, 33], "sodium": 30, "valid": [30, 33, 59, 60, 61, 62, 77], "consid": [30, 31, 45], "gase": 30, "shorthand": [30, 54, 64], "bio": 30, "twenti": 30, "five": [30, 58, 64, 72, 73, 75], "oxygen": [30, 41, 58, 62, 63, 64, 65, 72, 77], "modulo": [30, 63], "electron": [30, 31, 63], "50": [30, 46, 54, 57, 58, 63, 67, 73, 75, 77], "lig": [30, 58], "imprecis": 30, "aladip": [30, 46, 58, 59, 60, 61, 62, 67, 72, 74, 75, 76], "48778e": [30, 64], "09756e": 30, "09": [30, 46, 54, 55, 56, 63, 67, 68, 72, 75], "experienc": 30, "search_approx_not_equ": 30, "approx_great": 30, "approx_less": 30, "approx_greater_equ": 30, "approximatlei": 30, "approx_less_equ": 30, "epsilon": [30, 46, 63, 64, 65], "retriev": [30, 46], "neutral": [30, 63], "sever": [30, 54, 58, 65], "rout": [30, 40, 55, 56, 58, 64], "is_perturb": 30, "atomtyp": [30, 46, 65, 67], "truthfulli": 30, "\u00e5": [30, 46, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77], "subscript": 30, "pick": 30, "few": [30, 36, 46, 58, 68, 77], "variant": 30, "Or": [30, 40, 41, 65, 68, 72, 76], "cl": [30, 63], "f": [30, 41, 45, 69, 70, 71, 73], "chlorin": 30, "fluorin": 30, "criterion": 30, "geometr": 30, "max": [30, 64, 73], "amino": [30, 55, 58], "acid": [30, 55, 58], "commonli": [30, 64], "deproton": 30, "ch": 30, "letter": [30, 64], "redefin": 30, "onc": [30, 40, 73], "again": [30, 35, 49, 59, 60, 61, 62, 66, 67, 74], "silent": 30, "pre": [30, 40], "interest": [31, 33, 35, 73], "foster": 31, "maintain": [31, 32], "particip": 31, "commun": [31, 39, 42], "harass": 31, "experi": [31, 42], "regardless": 31, "ag": 31, "bodi": 31, "ethnic": 31, "sex": 31, "characterist": 31, "gender": 31, "educ": 31, "socio": 31, "econom": 31, "statu": [31, 34], "nation": 31, "person": [31, 35], "race": 31, "religion": 31, "sexual": 31, "orient": 31, "behavior": 31, "inclus": 31, "Being": 31, "viewpoint": 31, "gracefulli": 31, "accept": [31, 32, 33, 34, 35, 49, 77], "critic": 31, "focus": 31, "empathi": 31, "toward": [31, 75, 77], "unaccept": 31, "imageri": 31, "unwelcom": 31, "attent": 31, "troll": 31, "insult": 31, "derogatori": 31, "comment": [31, 33], "polit": 31, "attack": 31, "publish": 31, "address": 31, "inappropri": 31, "profession": 31, "clarifi": 31, "fair": 31, "instanc": [31, 40, 73], "reject": 31, "wiki": 31, "ban": 31, "deem": 31, "threaten": 31, "offens": 31, "harm": 31, "offici": 31, "mail": 31, "post": [31, 34, 42], "social": 31, "media": 31, "appoint": 31, "onlin": 31, "offlin": 31, "abus": 31, "contact": 31, "team": [31, 33], "complaint": 31, "review": [31, 32, 35], "investig": 31, "necessari": 31, "circumst": 31, "oblig": 31, "confidenti": 31, "regard": [31, 33], "incid": 31, "polici": 31, "faith": 31, "face": 31, "repercuss": 31, "leadership": 31, "adapt": 31, "coven": 31, "answer": 31, "common": [31, 52, 53, 55, 63, 64, 65, 74], "question": 31, "faq": 31, "pull": [32, 33, 34, 35, 37], "request": [32, 33, 34, 35, 36, 37, 54, 63], "devel": [32, 33, 34, 35, 40], "branch": [32, 34, 35, 36, 40], "throughout": [32, 48], "ask": [32, 33, 39, 43, 54, 64, 73], "offend": 32, "submiss": 32, "meet": 32, "pep8": [32, 33], "ideal": [32, 33], "autoformat": 32, "black": [32, 33], "perfect": 32, "feel": [32, 33, 35, 63], "notifi": 32, "evolv": [32, 35], "year": [32, 36], "homogen": 32, "foo": 32, "underscor": [32, 33], "bigmolecul": 32, "big_molecul": 32, "getradiu": 32, "get_radiu": 32, "word": 32, "obviou": 32, "recommend": [32, 33, 40], "added_mol": 32, "added_molecul": 32, "addedmol": 32, "missing_molecul": 32, "missing_mol": 32, "missingmolecul": 32, "atomcoord": [32, 46, 64, 67, 76], "coord": [32, 64], "o00": 32, "asa": 32, "blank": 32, "statement": 32, "come": 32, "11": [32, 41, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 68, 69, 70, 73, 74, 75, 76, 77], "much": [32, 33, 42, 53, 74], "discourag": [32, 33], "our": [32, 34, 36, 40, 42, 53, 77], "bear": 32, "multilin": 32, "debat": 32, "propos": [32, 34], "mambaforc": 33, "prioriti": 33, "channel": [33, 40], "mamba": [33, 40, 49, 73], "worth": [33, 52], "activ": [33, 36, 40, 43, 44], "bin": [33, 40], "environment_nam": 33, "replac": [33, 40], "shell": 33, "command": [33, 40, 48, 49, 73], "deactiv": 33, "predominantli": [33, 36, 38], "legaci": 33, "engag": 33, "modernis": 33, "nearli": [33, 38], "flake8": 33, "linter": 33, "autoformatt": 33, "vscode": 33, "strictli": 33, "2014": [33, 54, 76], "conform": 33, "newer": [33, 40], "portabl": 33, "remain": [33, 77], "ourselv": 33, "x86": [33, 40], "64": [33, 40, 54, 55, 56, 57, 58, 63, 73], "arm64": [33, 40], "peopl": [33, 37], "powerpc": [33, 40], "eas": 33, "resort": 33, "vendor": 33, "burden": 33, "With": 33, "mind": [33, 34, 42], "singleword": 33, "camelcas": 33, "snake_cas": [33, 64], "pure": 33, "lowercamelcas": 33, "lowerclassnam": 33, "tab": 33, "ipython": [33, 40, 48], "doxygen": 33, "prominantli": 33, "visibl": 33, "protect": 33, "git": [33, 35, 40], "checkout": [33, 40], "prefix": 33, "feat": 33, "structur": [33, 45, 49, 53, 73], "test_fil": 33, "file_test": 33, "def": 33, "test_func": 33, "func_test": 33, "test_": 33, "simpli": [33, 40, 49, 52, 73, 76], "test_atomprop": 33, "verbos": 33, "invok": 33, "quicker": 33, "fixtur": 33, "conftest": 33, "approx": 33, "By": [33, 64], "toler": 33, "1e": [33, 63], "might": 33, "desir": [33, 72, 73], "decor": 33, "Not": [33, 57], "test_new_featur": 33, "unimpl": 33, "often": [33, 50, 52, 54, 57, 62, 63, 74], "mul": 33, "test_mul": 33, "manner": 33, "altern": [33, 65], "21": [33, 41, 46, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77], "58": [33, 54, 55, 56, 63, 73, 75], "37": [33, 41, 46, 54, 55, 56, 60, 61, 62, 63, 65, 67, 70, 73, 75, 77], "test_sub": 33, "known": 33, "suppos": 33, "had": [33, 36, 63, 73], "indexerror": [33, 54], "test_indexerror": 33, "slow": 33, "test_slow_funct": 33, "mypkg": 33, "pleas": [33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 63], "veryslow": 33, "push": [33, 35], "until": 33, "tag": 33, "docstr": 33, "sphinxcontrib": 33, "programoutput": 33, "sphinx_issu": 33, "Then": 33, "browser": 33, "frequent": 33, "next": [33, 40, 73, 77], "conflict": [33, 35], "resolv": 33, "touch": [33, 35], "recompil": 33, "typo": [33, 34], "unnecessarili": 33, "yaml": 33, "remot": 33, "server": [33, 40], "enjoi": 33, "plai": [33, 75], "go": [33, 40, 56, 57, 58, 77], "lester": 33, "hedg": 33, "great": [33, 73], "advic": 33, "repo": [33, 34], "procedur": 33, "qualiti": 34, "short": 34, "blog": 34, "donat": 34, "idea": [34, 36], "conduct": [34, 39, 42], "employ": 34, "employe": 34, "ground": 34, "laid": 34, "recognis": [34, 37, 73], "guidelin": 34, "workflow": 34, "roadmap": [34, 39], "deploi": [35, 36], "authoris": 35, "THAT": 35, "greatli": 35, "accompani": 35, "wish": 35, "demostr": 35, "difficult": 35, "learn": [35, 36, 40, 41, 45, 46, 47], "regularli": 35, "capabl": [35, 73], "job": 35, "decid": 35, "changelog": 35, "previou": 35, "establish": 36, "foundat": 36, "softwar": [36, 40], "hasn": [36, 42, 75], "major": 36, "plan": [36, 40], "rough": 36, "edg": 36, "prototyp": 36, "smooth": 36, "dead": 36, "littl": 36, "leav": 36, "someon": 36, "focu": 36, "flexibl": [36, 46], "companion": 36, "biomolecular": [38, 39], "recombin": 38, "engin": [38, 63, 74], "state": [38, 55], "overview": [38, 40], "flavour": 38, "unix": 40, "lab": [40, 73], "termin": 40, "prompt": 40, "quickstart": 40, "gb": 40, "disk": [40, 49], "concurr": 40, "inact": 40, "minut": 40, "easiest": [40, 52, 54, 55, 56, 57, 58], "drop": 40, "highli": 40, "quit": 40, "outdat": 40, "minimis": [40, 77], "risk": [40, 68, 69, 70, 71], "failur": 40, "incompat": [40, 68], "jupyterlab": [40, 73], "podman": 40, "8888": 40, "fresh": 40, "feat_nam": 40, "haven": 40, "patient": [40, 42], "visual": 40, "studio": 40, "chocolatei": 40, "choco": 40, "visualstudio2017": 40, "workload": 40, "vctool": 40, "admin": 40, "bss": 40, "dep": 40, "accident": 40, "p38": 41, "put": [41, 45], "front": 41, "630": [41, 58, 59, 60], "wat": [41, 58], "625": [41, 58, 59, 60], "629": [41, 58, 59, 60], "626": [41, 58, 59, 60], "627": [41, 58, 59, 60], "631": [41, 52, 56, 58, 59, 60], "628": [41, 58, 59, 60], "632": [41, 58, 59, 60], "633": [41, 52, 58], "ch3": [41, 46, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 75], "98": [41, 50, 54, 55, 56, 58, 59, 60, 61, 63, 65, 73], "45": [41, 54, 55, 56, 58, 59, 60, 61, 63, 65, 73, 75, 77], "13": [41, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "39": [41, 46, 54, 55, 56, 58, 59, 60, 61, 63, 65, 67, 70, 73, 77], "48": [41, 54, 55, 56, 58, 63, 65, 73, 75, 77], "55": [41, 54, 55, 56, 58, 63, 65, 73, 77], "54": [41, 54, 55, 56, 58, 62, 65, 73, 75, 77], "03": [41, 54, 55, 56, 62, 63, 65], "81": [41, 50, 54, 62, 63, 65, 73], "cb": [41, 46, 54, 55, 56, 57, 59, 61, 63, 65, 67, 68, 69, 70, 73, 75], "05": [41, 54, 55, 56, 58, 65, 71, 72, 73, 77], "26": [41, 50, 54, 55, 57, 58, 59, 60, 63, 65, 73, 75, 76, 77], "19": [41, 46, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "83": [41, 54, 58, 63, 65, 73], "94": [41, 54, 55, 56, 58, 65, 73, 77], "hh31": [41, 46, 58, 59, 60, 61, 65, 67, 68, 69, 70, 72], "hh32": [41, 46, 58, 59, 60, 61, 65, 67, 68, 69, 70], "hh33": [41, 46, 58, 59, 60, 61, 65, 67, 68, 69, 70], "17": [41, 46, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77], "1260": [41, 59], "23": [41, 54, 55, 56, 58, 59, 60, 61, 63, 65, 72, 73, 75, 76, 77], "h1": [41, 46, 59, 60, 63, 73], "24": [41, 50, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 73, 75, 76, 77], "h2": [41, 59, 60, 63], "25": [41, 54, 55, 56, 58, 59, 60, 61, 63, 73, 75, 76, 77], "27": [41, 54, 55, 56, 59, 60, 63, 64, 66, 73, 75, 76, 77], "28": [41, 54, 55, 56, 59, 60, 63, 73, 75, 76], "1255": [41, 59], "1904": [41, 58, 59, 60], "1906": [41, 59, 60], "1256": [41, 59], "1907": [41, 58, 59, 60], "1908": [41, 59, 60], "1257": [41, 59], "1909": [41, 59, 60], "1258": [41, 59], "1910": [41, 58, 59, 60], "1911": [41, 59, 60], "1259": [41, 59], "1912": [41, 52, 58, 59, 60], "500": [41, 73, 75], "movi": [41, 76, 77], "6917": 41, "80034": 41, "intra_lj": [41, 74, 75, 77], "31125": 41, "485545": [41, 75], "4_coulomb": [41, 74, 75, 77], "44": [41, 50, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 72, 73, 74, 75, 77], "8105": 41, "4_lj": [41, 74, 75, 77], "50984": 41, "intra_coulomb": [41, 74, 75, 77], "3982": 41, "22497": 41, "57006": 41, "panda": [41, 75], "200000": [41, 75], "509838": [41, 75], "810452": [41, 75], "570059": [41, 75], "224970": [41, 75], "800343": [41, 75], "311255": [41, 75], "398213": [41, 75], "691740": 41, "400000": [41, 75], "700506": [41, 75], "47": [41, 54, 55, 56, 63, 73, 75, 77], "698455": [41, 75], "470519": [41, 75], "785874": [41, 75], "776295": [41, 75], "131481": [41, 75], "617496": [41, 75], "137252": [41, 75], "808384": [41, 75], "600000": [41, 75], "801076": [41, 75], "486411": [41, 75], "607753": [41, 75], "023439": [41, 75], "614774": [41, 75], "124729": [41, 75], "103966": [41, 75], "458051": [41, 75], "096165": 41, "800000": [41, 75], "365638": [41, 75], "483966": [41, 75], "524609": [41, 75], "663454": [41, 75], "383852": [41, 75], "339333": [41, 75], "983872": [41, 75], "191512": [41, 75], "585469": 41, "000000": [41, 73, 75], "534830": [41, 75], "596027": [41, 75], "517530": [41, 75], "190370": [41, 75], "214994": [41, 75], "255331": [41, 75], "699613": [41, 75], "393889": [41, 75], "215580": 41, "495": [41, 73, 75], "99": [41, 54, 55, 56, 73, 75], "199997": [41, 75], "665994": [41, 75], "42": [41, 50, 54, 55, 56, 58, 63, 73, 75, 77], "866319": [41, 75], "339087": [41, 75], "172684": [41, 75], "875872": [41, 75], "356887": [41, 75], "584092": [41, 75], "220005": [41, 75], "472747": 41, "496": [41, 73, 75], "400002": [41, 75], "062467": [41, 75], "852774": [41, 75], "268408": [41, 75], "878366": [41, 75], "548897": [41, 75], "327064": [41, 75], "814718": [41, 75], "419100": [41, 75], "704158": 41, "497": [41, 73, 75], "599998": [41, 75], "530233": [41, 75], "908117": [41, 75], "487378": [41, 75], "454670": [41, 75], "223964": [41, 75], "006034": [41, 75], "692972": [41, 75], "902056": [41, 75], "015369": 41, "498": [41, 73, 75], "800003": [41, 75], "511116": [41, 75], "976288": [41, 75], "017446": [41, 75], "809064": [41, 75], "841436": [41, 75], "518190": [41, 75], "862433": [41, 75], "205034": [41, 75], "606073": 41, "499": [41, 73, 75], "768998": [41, 75], "41": [41, 46, 54, 55, 56, 58, 61, 63, 65, 67, 70, 73, 74, 75, 77], "625135": [41, 75], "629923": [41, 75], "089916": [41, 75], "889372": [41, 75], "846805": [41, 75], "897328": [41, 75], "306437": [41, 75], "646384": 41, "resourc": 42, "similar": [42, 49, 50, 54, 55, 63, 75, 76, 77], "upvot": 42, "hopefulli": 42, "newest": 42, "mention": 42, "confirm": 42, "aspect": 43, "analys": [43, 73, 77], "customis": 43, "higher": 44, "older": 44, "upgrad": 44, "amongst": 45, "7sa1": [45, 58, 66], "rcsb": [45, 49], "gz": [45, 49], "11728": [45, 54, 58], "1518": [45, 58], "unpack": 45, "arrang": [45, 71], "4532": [46, 64, 67, 68, 69, 70, 76], "49423": [46, 64, 67, 68, 69, 70, 76], "4365": [46, 64, 67, 68, 69, 70, 76], "9818": [46, 64, 67, 68, 69, 70, 71, 76], "44823": [46, 64, 67, 68, 69, 70, 71, 76], "3886": [46, 64, 67, 68, 69, 70, 71, 76], "0513": [46, 64, 67, 76], "63293": [46, 64, 67, 76], "2874": [46, 64, 67, 76], "798": [46, 64, 67, 76], "43076": [46, 64, 67, 76], "7337": [46, 64, 67, 76], "4805": [46, 64, 67, 69, 70, 71, 76], "54971": [46, 64, 67, 69, 70, 71, 76], "3514": [46, 64, 67, 69, 70, 71, 76], "3407": [46, 64, 67, 74, 76], "44815": [46, 64, 67, 76], "9626": [46, 64, 67, 76], "8341": [46, 64, 67, 76], "93668": [46, 64, 67, 76], "3509": [46, 64, 67, 76], "3525": [46, 64, 67, 76], "40994": [46, 64, 67, 76], "1521": [46, 64, 67, 76], "1933": [46, 64, 67, 76], "59022": [46, 64, 67, 76], "9428": [46, 64, 67, 76], "2149": [46, 64, 67, 76], "33301": [46, 64, 67, 76], "6874": [46, 64, 67, 76], "atomcharg": 46, "1123": [46, 64], "3662": [46, 64], "5972": [46, 64], "2719": [46, 64], "149": [46, 64], "0976": [46, 64], "ambertyp": [46, 65, 67], "gb_radius_set": [46, 65, 67], "treechain": [46, 65, 67], "gb_radii": [46, 65, 67], "gb_screen": [46, 65, 67], "atomstringproperti": [46, 65], "twoatomfunct": [46, 67], "340": [46, 67], "r": [46, 67], "317": [46, 67, 76], "522": [46, 67], "570": [46, 67], "229": [46, 67], "434": [46, 67], "01": [46, 50, 54, 55, 56, 63, 64, 65, 67, 68], "337": [46, 67], "449": [46, 67, 73], "fouratomfunct": [46, 67], "08": [46, 55, 56, 58, 63, 64, 67], "14159": [46, 67], "88": [46, 54, 55, 58, 63, 65, 67, 73], "36": [46, 54, 55, 56, 59, 60, 61, 67, 69, 70, 73, 75, 77], "38": [46, 54, 55, 56, 57, 61, 63, 67, 70, 73, 75, 77], "40": [46, 54, 55, 56, 58, 61, 63, 66, 67, 70, 73, 75, 77], "amberparam": 46, "nbond": 46, "nangl": 46, "ndihedr": 46, "nimprop": 46, "n14": 46, "hc": 46, "ct": 46, "atomlj": 46, "sigma": [46, 64, 65], "64953": [46, 64], "0157": [46, 64], "39967": [46, 64, 65], "1094": [46, 64, 65], "086": [46, 64], "06908": 46, "47135": 46, "bondi": 46, "radii": 46, "mbondi": 46, "atomveloc": 46, "0284179": 46, "0279068": 46, "0229222": 46, "00815709": 46, "00301807": 46, "0138062": 46, "0117127": 46, "0275995": 46, "018425": 46, "0505938": 46, "00951136": 46, "0125766": 46, "0185456": 46, "00277097": 46, "005927": 46, "0203835": 46, "0236023": 46, "0269803": 46, "0229536": 46, "00122144": 46, "0168112": 46, "0225591": 46, "0584583": 46, "0468198": 46, "0119421": 46, "0177259": 46, "0108097": 46, "109793": 46, "0791381": 46, "0183852": 46, "threeatomfunct": [46, 67], "91114": [46, 67], "80": [46, 54, 56, 58, 63, 65, 67, 73, 77], "10138": [46, 67], "70": [46, 54, 55, 56, 63, 67, 73], "03505": [46, 67], "31": [46, 54, 55, 56, 60, 63, 66, 67, 69, 73, 77], "32": [46, 54, 55, 56, 59, 60, 63, 64, 67, 69, 73, 74, 77], "06019": [46, 67], "33": [46, 54, 55, 56, 58, 59, 60, 63, 65, 67, 69, 73, 75, 77], "34": [46, 54, 55, 56, 58, 60, 63, 65, 67, 69, 73, 75, 77], "atomel": 46, "atomfloatproperti": [46, 65], "85": [46, 54, 55, 56, 63, 73, 77], "72": [46, 51, 54, 55, 56, 63, 65, 73], "atomradii": 46, "ff": [46, 67], "combining_rul": [46, 67], "833333": [46, 67], "nonbond": [46, 67], "coulomb": [46, 67, 75], "harmon": [46, 67], "cosin": [46, 67], "cljnbpair": [46, 67], "ngroup": [46, 67], "atommass": 46, "008": [46, 63, 64], "nconnect": [46, 67], "nme": [46, 67, 75], "extrem": 46, "chapter": [46, 47, 54, 65, 68, 69, 70], "stretch": [47, 77], "scan": [47, 65], "visualis": [47, 77], "alia": 48, "databas": 49, "3nss": 49, "1679": 49, "6984": 49, "a0a538r8y3": 49, "ebi": 49, "uk": 49, "af": 49, "f1": 49, "model_v3": 49, "1190": 49, "9417": 49, "cours": [49, 73], "internet": 49, "cholesterol": [49, 51, 52, 68], "74": [49, 50, 51, 54, 55, 63, 73], "One": [50, 53, 54], "02": [50, 54, 55, 56, 63], "53": [50, 54, 55, 56, 58, 63, 72, 73, 75, 77], "00": [50, 51, 54, 63], "66": [50, 54, 55, 56, 57, 63, 66, 73, 77], "52": [50, 54, 56, 58, 63, 73, 75, 77], "06": [50, 54, 55, 56, 63], "65": [50, 54, 55, 56, 57, 58, 63, 66, 73, 77], "chol": 51, "019": 51, "525": 51, "010": 51, "002": 51, "004": 51, "658": [51, 73], "518": 51, "285": [51, 54], "418": [51, 54], "055": 51, "000": 51, "164": 51, "442": 51, "173": 51, "900": 51, "359": [51, 73], "167": 51, "73": [51, 54, 55, 56, 58, 63, 65, 73], "811": 51, "766": 51, "235": 51, "762": 51, "962": 51, "208": [51, 73], "endmdl": 51, "1mol": 51, "001870": 51, "152540": 51, "001040": 51, "000210": 51, "000410": 51, "000200": 51, "065850": 51, "051780": 51, "128510": 51, "141830": 51, "205520": 51, "000040": 51, "216410": 51, "144230": 51, "117300": 51, "280940": 51, "223720": 51, "197530": 51, "389970": 51, "035920": 51, "016740": 51, "281060": 51, "176550": 51, "023460": 51, "076160": 51, "296250": 51, "120770": 51, "00000": 51, "whichev": 52, "wildcard": [52, 55, 56, 57, 58], "tmp": 52, "couldn": 52, "sybyl": 53, "bank": 53, "prm7": 53, "top7": 53, "prmtop7": 53, "netcdf": 53, "crd7": 53, "ascii": 53, "supplementari": 53, "principl": 53, "07": [54, 55, 56, 71], "93": [54, 55, 56, 58, 73], "11732": 54, "46": [54, 55, 63, 73, 74, 75, 76, 77], "82": [54, 55, 56, 63, 73, 77], "100000": 54, "traceback": [54, 55, 57], "cell": [54, 55, 57], "app": [54, 57], "python3": [54, 57], "site": [54, 57], "__init__": [54, 57], "414": 54, "__fixed__getitem__": [54, 57], "412": 54, "413": 54, "415": 54, "416": 54, "__is_chain_class": 54, "11727": 54, "get_last_error_detail": [54, 55, 57, 65, 68], "56": [54, 55, 56, 57, 58, 63, 73, 75], "95": [54, 55, 56, 63, 73], "57": [54, 55, 56, 58, 63, 73, 75], "04": [54, 55, 56, 63], "76": [54, 55, 56, 58, 63, 65, 73, 74], "cg1": [54, 55, 56], "68": [54, 55, 56, 63, 65, 73], "cg2": [54, 55, 56], "cd1": [54, 55, 56], "et": 54, "6th": 54, "10th": 54, "guarante": [54, 58], "1494": [54, 55], "61": [54, 55, 56, 57, 63, 73, 75, 77], "90": [54, 55, 63, 73], "1489": [54, 55], "11625": [54, 55], "84": [54, 55, 58, 73], "63": [54, 55, 56, 57, 58, 63, 65, 73], "1490": [54, 55], "11630": 54, "71": [54, 56, 63, 64, 73], "1491": [54, 55], "11637": 54, "1492": [54, 55], "11646": 54, "1493": [54, 55], "11654": 54, "keyerror": [54, 55, 57, 59, 60, 61, 62, 65], "duplicate_atom": 54, "419": 54, "417": 54, "428": 54, "__fixed__atoms__": 54, "426": 54, "__orig__atom": 54, "427": 54, "c4d51f89": 54, "f4f7": 54, "4e0c": 54, "854d": 54, "da27affe1baf": 54, "third": [54, 77], "91": [54, 56, 63, 73], "cg": 54, "ce": [54, 63], "69": [54, 55, 58, 63, 65, 73], "od1": 54, "51": [54, 56, 63, 73, 75, 77], "78": [54, 56, 63, 73], "mix": [54, 59, 60, 61, 62, 68, 69, 70, 71], "97": [54, 56, 63, 73], "11624": [54, 55], "11629": 54, "89": [54, 63, 73, 74], "11636": 54, "59": [54, 56, 58, 63, 65, 73, 75], "11645": 54, "11653": 54, "4482": 54, "4477": 54, "4478": 54, "4479": [54, 73], "11652": 54, "4480": 54, "4481": 54, "mixtur": 54, "1000": [54, 56], "1369": 54, "1005": 54, "1014": 54, "1023": 54, "1027": 54, "1038": 54, "1364": 54, "11623": [54, 55], "1365": 54, "11628": 54, "1366": 54, "11635": 54, "1367": 54, "11644": 54, "1368": 54, "7440": 54, "7435": 54, "c2": [54, 77], "11705": 54, "7436": 54, "c3": [54, 56], "11706": 54, "77": [54, 55, 73, 75], "7437": 54, "c4": [54, 56], "11708": 54, "7438": 54, "c5": [54, 56], "11709": 54, "7439": 54, "c6": [54, 56], "11712": 54, "backslash": 54, "378": 54, "ne2": 54, "nd2": 54, "157": [54, 56], "nh1": 54, "277": 54, "nh2": 54, "278": 54, "nd1": 54, "373": 54, "11530": 54, "374": [54, 73], "11555": 54, "67": [54, 55, 56, 63, 73], "375": [54, 73], "11573": 54, "376": 54, "11574": 54, "377": 54, "11651": 54, "wikipedia": 54, "qregularexpress": 54, "nitrogen": [54, 61, 62, 71, 77], "nz": [54, 63], "2015": 54, "11660": 54, "11655": 54, "11656": 54, "11729": 54, "11657": 54, "11730": 54, "11658": 54, "11731": 54, "60": [54, 55, 56, 63, 72, 73], "11659": 54, "ce1": 54, "ce2": 54, "ce3": 54, "oe1": [54, 56], "oe2": [54, 56], "cz2": 54, "cz3": 54, "ne": 54, "o1": [54, 56], "o2": [54, 56], "o4": [54, 56], "o3": 54, "o5": 54, "o7": 54, "o6": 54, "sd": 54, "c1": [54, 77], "sg": [54, 73], "og": 54, "og1": 54, "oh": 54, "ne1": 54, "ch2": 54, "cd2": 54, "cz": 54, "od2": 54, "128": [54, 73], "110": [54, 69, 73, 77], "139": [54, 77], "107": [54, 55, 73], "138": 54, "1512": 54, "226": [54, 55], "102": [54, 55, 63, 73], "1426": 54, "895": 54, "400": 54, "186": 54, "122": [54, 56, 73], "il": [55, 56, 58, 63], "155": 55, "150": [55, 77], "578": [55, 58], "151": 55, "584": 55, "152": 55, "593": 55, "153": 55, "646": 55, "154": 55, "691": 55, "duplicate_residu": 55, "leu": [55, 56, 58, 63], "ser": [55, 56, 58, 63], "gly": [55, 56, 58, 63], "glu": [55, 56, 58, 63], "117": [55, 56, 73], "62": [55, 56, 57, 63, 65, 73, 75], "204": [55, 73], "306": [55, 63], "352": 55, "10774": 55, "10816": 55, "10886": 55, "11247": 55, "250": [55, 73], "652": 55, "251": 55, "657": [55, 73], "252": 55, "680": 55, "253": 55, "685": 55, "254": 55, "201": [55, 63, 73], "205": [55, 73], "202": [55, 73], "203": [55, 63, 73], "peg": [55, 56], "75": [55, 63, 73, 75], "638": [55, 56], "639": 55, "662": 55, "666": 55, "668": 55, "histidin": 55, "phrase": [55, 56, 58], "775": [55, 72], "92": [55, 56, 73], "770": 55, "771": 55, "772": 55, "773": 55, "11626": 55, "774": 55, "11627": 55, "pro": [55, 58, 63], "692": 55, "693": 55, "asn": [55, 58, 63], "694": 55, "695": 55, "particulari": [55, 56, 58], "did": [55, 68, 73, 75, 77], "cit": [55, 56], "cy": [55, 58, 63], "gln": [55, 58, 63], "hoh": [55, 56], "phe": [55, 56, 58, 63], "thr": [55, 58, 63], "trp": [55, 56, 58, 63], "tyr": [55, 58, 63], "cofactor": 55, "bound": [55, 66], "123": [56, 69, 73, 77], "985": 56, "4881": 56, "126": [56, 70, 73], "4862": 56, "unlik": [56, 57], "96": [56, 58, 63, 65, 73, 77], "104": [56, 63, 69, 72, 73], "105": [56, 73], "158": 56, "197": [56, 73], "192": [56, 73], "977": 56, "193": 56, "978": 56, "194": 56, "11662": 56, "195": 56, "11664": 56, "196": 56, "11667": 56, "118": [56, 73], "119": [56, 73], "120": [56, 73, 77], "159": 56, "121": [56, 73], "160": [56, 63], "801": 56, "932": 56, "941": 56, "955": 56, "960": 56, "971": 56, "980": 56, "5824": 56, "5825": 56, "5826": [56, 76], "5827": 56, "5828": 56, "995": 56, "11698": 56, "996": 56, "11699": 56, "997": 56, "11700": 56, "998": 56, "11701": 56, "999": 56, "11726": 56, "981": 56, "982": 56, "983": 56, "984": 56, "4876": 56, "11721": 56, "4877": 56, "11722": 56, "4878": 56, "11723": 56, "4879": 56, "11724": 56, "4880": 56, "11725": 56, "905": 56, "906": [56, 75], "803": 56, "11688": 56, "11689": 56, "11692": 56, "contigu": 57, "alanin": [57, 66], "comma": 57, "cbx": 57, "462": 57, "458": 57, "elif": 57, "459": 57, "460": 57, "relev": 57, "461": 57, "__from_select_result": 57, "463": 57, "syntaxerror": 57, "464": [57, 76], "137": 57, "slightli": 57, "behaviour": 57, "practic": 57, "notion": 58, "580": 58, "575": 58, "576": 58, "577": 58, "579": 58, "1898": [58, 59, 60], "1901": [58, 59, 60], "79": [58, 63, 73, 77], "selectorm_atom_": 58, "cyx": [58, 63], "glh": [58, 63], "ash": [58, 63], "constitu": [59, 60, 61, 62, 74], "hb1": [59, 61, 63], "hb2": [59, 61, 69], "hb3": [59, 61, 65, 69], "1899": [59, 60], "1902": [59, 60], "1905": [59, 60], "1900": 60, "1903": 60, "middl": 61, "quad": [61, 62], "sixth": 61, "improperss": 62, "amid": [62, 71], "planar": [62, 71], "kigaki": 63, "11120": 63, "h3": 63, "11115": 63, "3622": 63, "11116": 63, "3623": 63, "11117": 63, "3624": 63, "11118": 63, "3625": 63, "11119": 63, "3626": 63, "301": 63, "296": 63, "294": 63, "hd2": 63, "297": 63, "298": 63, "299": 63, "300": 63, "302": 63, "10797": 63, "ow": 63, "303": 63, "hw1": 63, "304": 63, "hw2": 63, "305": 63, "307": 63, "10792": 63, "3604": 63, "11095": 63, "10793": 63, "11096": 63, "10794": 63, "3605": 63, "11097": 63, "10795": 63, "11098": 63, "10796": 63, "11099": 63, "3599": 63, "sol": 63, "3594": 63, "3601": 63, "3595": 63, "3602": 63, "3596": [63, 76], "3603": 63, "3597": 63, "3598": 63, "7370": 63, "7365": 63, "11093": 63, "7366": 63, "7367": 63, "7368": 63, "7369": 63, "g_per_mol": 63, "3638": 63, "3633": 63, "3634": 63, "3635": 63, "3636": 63, "3637": 63, "279": [63, 66], "280": 63, "281": [63, 70], "283": [63, 75], "7411": 63, "7406": 63, "3608": 63, "11102": 63, "7407": 63, "3609": 63, "11103": 63, "7408": 63, "3610": 63, "11104": 63, "87": [63, 73], "7409": 63, "3611": 63, "11105": 63, "7410": 63, "3612": 63, "11106": 63, "3631": 63, "3627": 63, "3628": 63, "3629": 63, "3630": 63, "3607": 63, "3614": 63, "3615": 63, "3616": 63, "3617": 63, "3618": 63, "162": 63, "259": 63, "261": 63, "268": 63, "263": 63, "264": 63, "265": 63, "266": 63, "271": 63, "1096": 63, "267": 63, "827": [63, 66], "2764": 63, "interchang": 63, "1604": 63, "1617": 63, "1624": 63, "1637": 63, "1769": 63, "1782": 63, "1781": 63, "1794": 63, "1800": 63, "1813": 63, "1809": 63, "1822": 63, "1812": 63, "1825": [63, 64], "528": 63, "529": 63, "530": 63, "183": 63, "832": 63, "833": 63, "185": 63, "837": 63, "838": 63, "839": 63, "309": 63, "312": 63, "315": 63, "11085": 63, "11088": 63, "11091": 63, "11094": 63, "reset": [63, 65, 68, 72, 73], "repeat": 63, "3606": 63, "positive_ion": 63, "unaffect": 63, "search_term": 63, "lennard": 64, "jone": 64, "144": [64, 73], "176": 64, "9264": [64, 66], "47803": [64, 66], "1498": [64, 66], "044": 64, "capit": 64, "5679": 64, "4157": 64, "0337": [64, 65], "0823": 64, "0603": 64, "5973": 64, "1866": [64, 70, 71], "5371": 65, "02707": 65, "812": 65, "00308134": 65, "0190426": 65, "00618047": 65, "cx": 65, "assig": 65, "charcoal": 65, "cover": 65, "white": 65, "boolean": 65, "criteria": 65, "del": 65, "earlier": 65, "unexpect": 65, "residue_cent": 66, "center_of_mass": 66, "respropertyproperti": 66, "0195": 66, "60992": 66, "5812": 66, "3873": 66, "27636": 66, "0041": 66, "residue_radiu": 66, "bounding_spher": 66, "chainpropertyproperti": 66, "5915": 66, "0365": 66, "132": 66, "2531": 66, "0725": 66, "387": 66, "6821": 66, "1885": 66, "5585": 66, "2047": 66, "3375": 66, "929": 66, "511": 66, "5556": 66, "exactli": 66, "seg_atom_count": 66, "segintproperti": 66, "gain": 66, "sens": [67, 68, 69, 70, 71], "perspect": 67, "parameteris": [67, 74], "store": 67, "complement": 67, "intramolecular": 67, "presenc": [68, 69, 70, 71], "109": [68, 73], "00007776856795": 68, "pm": [68, 72], "nm": [68, 72], "0563e": 68, "kj_per_mol": [68, 69, 70, 71], "603571979020907e": 68, "tri": 68, "userwarn": 68, "60357e": 68, "54643": 68, "20803": [68, 72], "65144e": 68, "2471e": 68, "997e": 68, "09482e": 68, "56699e": 68, "22857e": 68, "06535e": 68, "18497e": 68, "39824e": 68, "54821": [68, 74, 77], "60207e": 68, "kcal_per_mol": [68, 69, 70, 71, 74], "189213": 68, "250565": 68, "27779": 68, "537132": 68, "179525": 68, "125648": 68, "45641": 68, "52335": 68, "sdf_field": 68, "889": 69, "8070966851826593": 69, "378849": 69, "5851034416908067": 69, "103": [69, 73], "539": 69, "112": [69, 73], "097": 69, "786": 69, "675": 69, "114": [69, 73, 76], "402": 69, "116134": 69, "0147076": 69, "0422992": 69, "0306092": 69, "125851": 69, "00296": 69, "559201": 69, "0010697": 69, "79189": [69, 74], "794168": 69, "17723": 69, "338535": 69, "365931": 69, "27753": 69, "231417": 69, "124129": 69, "105879": 69, "630416": 69, "875671": 69, "energy_kj": [69, 70, 71], "5851": 69, "44143": [70, 71], "7584": [70, 71], "243": 70, "246059065416177": 70, "441489": 70, "8471895210066125": 70, "26777": 70, "647": [70, 73], "217581": 70, "216024": 70, "59964": 70, "327286": 70, "83498": 70, "756986": 70, "00734048": 70, "0113127": 70, "018104": 70, "04634": 70, "0619792": 70, "00115906": 70, "000509377": 70, "00189494": 70, "00521955": 70, "315842": 70, "398546": 70, "000479184": 70, "0018364": 70, "00512262": 70, "53259": [70, 74], "115083": 70, "84719": 70, "contrast": 71, "streroisom": 71, "flip": 71, "sp2": 71, "2214": 71, "31498": 71, "7128": 71, "82426": 71, "06674592039289437": 71, "0934184": 71, "39086262536239597": 71, "0353552": 71, "3041": [71, 73], "92025": 71, "3952e": 71, "0234049": 71, "235105": 71, "118281": 71, "390863": 71, "24385": 72, "491": 72, "5067": 72, "3414": 72, "0107": 72, "0118": 72, "4583": 72, "center_of_geometri": 72, "0674": 72, "24294": 72, "79671": 72, "148": 72, "946": 72, "5471": 72, "50102": 72, "6589": 72, "unspecifi": 72, "get_default": [72, 73], "2221": 72, "135": 72, "h7n9": 73, "501": 73, "hundr": 73, "atom_fram": 73, "res_fram": 73, "7759": 73, "2632": 73, "368": 73, "886": [73, 75], "7757": 73, "3506": [73, 76], "9594": 73, "4561": 73, "4458": 73, "3717": 73, "1966": 73, "1695": 73, "4568": 73, "847": 73, "778": 73, "1335": 73, "0555": 73, "4046": 73, "disulfid": 73, "177": 73, "5098": 73, "672": 73, "735": 73, "1479": 73, "1736": [73, 75], "1586": 73, "2317": 73, "2343": 73, "2407": 73, "3217": 73, "3062": 73, "3193": 73, "3641": 73, "3905": 73, "5163": 73, "5600": 73, "ten": 73, "bond_fram": 73, "97428": 73, "12148": 73, "01916": 73, "03011": 73, "92681": 73, "05971": 73, "00386": 73, "9727": 73, "06847": 73, "98437": 73, "bonds_fram": 73, "03112": 73, "07281": 73, "0191": 73, "04427": 73, "06217": 73, "06375": 73, "98086": 73, "00846": 73, "02085": 73, "01314": 73, "02394": 73, "03679": 73, "05127": 73, "13314": 73, "09479": 73, "01281": 73, "07407": 73, "13044": 73, "94306": 73, "02388": 73, "99157": 73, "0498": 73, "11982": 73, "reach": 73, "sensibli": 73, "86": 73, "101": 73, "106": 73, "108": 73, "111": 73, "113": 73, "115": [73, 77], "116": 73, "124": 73, "125": [73, 77], "127": 73, "129": 73, "popular": 73, "pd": 73, "df": 73, "072818": 73, "062594": 73, "021098": 73, "999742": 73, "974279": 73, "063749": 73, "980860": 73, "008463": 73, "121478": 73, "133144": 73, "094789": 73, "012815": 73, "019160": 73, "991572": 73, "049796": 73, "119825": 73, "030114": 73, "007170": 73, "034407": 73, "025154": 73, "007979": 73, "093643": 73, "129553": 73, "998281": 73, "090167": 73, "059819": 73, "061035": 73, "062557": 73, "002520": 73, "033194": 73, "083489": 73, "018089": 73, "982953": 73, "060742": 73, "037879": 73, "028096": 73, "031625": 73, "980140": 73, "012541": 73, "056832": 73, "set_index": 73, "to_panda": 73, "427854": 73, "111583": 73, "207": 73, "281272": 73, "206": 73, "374869": 73, "198": 73, "086011": 73, "200": 73, "846281": 73, "212": 73, "147805": 73, "084501": 73, "313832": 73, "213": 73, "314379": 73, "209": 73, "478942": 73, "281457": 73, "916013": 73, "407315": 73, "043633": 73, "199": 73, "157224": 73, "979606": 73, "211": 73, "982462": 73, "011406": 73, "894323": 73, "210": 73, "216122": 73, "717000": 73, "440735": 73, "515447": 73, "681088": 73, "214": 73, "281803": 73, "062654": 73, "174159": 73, "797178": 73, "317985": 73, "797944": 73, "558625": 73, "275560": 73, "364316": 73, "955313": 73, "828136": 73, "016654": 73, "201860": 73, "533046": 73, "981879": 73, "103546": 73, "255705": 73, "251952": 73, "760592": 73, "149639": 73, "319428": 73, "348883": 73, "808935": 73, "295320": [73, 77], "827007": 73, "950224": 73, "074165": 73, "787857": 73, "809601": 73, "162451": 73, "721804": 73, "524174": 73, "013967": 73, "254053": 73, "683203": 73, "time_unit": 73, "measure_unit": 73, "summari": 73, "249": 73, "001996": 73, "035907": 73, "038938": 73, "033885": 73, "042897": 73, "770508": 73, "767061": 73, "042161": 73, "039444": 73, "041783": 73, "043834": 73, "906496": 73, "889959": 73, "898634": 73, "898571": 73, "009903": 73, "012715": 73, "005647": 73, "014213": 73, "036705": 73, "038681": 73, "033499": 73, "044481": 73, "063463": 73, "066688": 73, "059552": 73, "074039": 73, "155093": 73, "185094": 73, "156298": 73, "172513": 73, "926811": 73, "dtype": 73, "float64": 73, "colnam": [73, 75], "036311": 73, "042506": 73, "907295": 73, "010268": 73, "038025": 73, "067480": 73, "164251": 73, "040398": 73, "039843": 73, "043430": 73, "042046": 73, "879551": 73, "900181": 73, "010126": 73, "011865": 73, "041413": 73, "042487": 73, "068816": 73, "065570": 73, "157295": 73, "171668": 73, "advantag": 73, "bit": 73, "prettier": 73, "set_xlabel": 73, "set_ylabel": 73, "legend": 73, "bbox_to_anchor": 73, "pretty_plot": [73, 75], "collaps": 73, "20th": 73, "174": 73, "5095": 73, "669": 73, "789": 73, "425": 73, "161": 73, "456": [73, 76], "716": 73, "244": 73, "909": 73, "027": 73, "141": 73, "331": 73, "493": 73, "807": 73, "646778": 73, "789097": 73, "658280": 73, "123591": 73, "032015": 73, "878155": 73, "469532": 73, "718841": 73, "618866": 73, "850748": 73, "560527": 73, "500329": 73, "521915": 73, "566346": 73, "349405": 73, "866246": 73, "751753": 73, "915247": 73, "664555": 73, "813593": 73, "434050": 73, "855355": 73, "378153": 73, "463535": 73, "433986": 73, "148629": 73, "430144": 73, "493204": 73, "807238": 73, "656993": 73, "simplest": [73, 75], "6897": 73, "1249": 73, "5617": 73, "1862": 73, "0401": 73, "8125": 73, "216253": 73, "734178": 73, "378243": 73, "019010": 73, "861715": 73, "214334": 73, "257463": 73, "065931": 73, "582622": 73, "812486": 73, "first_to_cent": 73, "last_to_cent": 73, "547407": 73, "515619": 73, "095689": 73, "580996": 73, "544252": 73, "655505": 73, "016608": 73, "752940": 73, "535940": 73, "151461": 73, "030188": 73, "460664": 73, "851858": 73, "806361": 73, "685484": 73, "324784": 73, "512745": 73, "317341": 73, "131392": 73, "847973": 73, "4855": 74, "joul": 74, "89895": 74, "8953": 74, "nrg": 74, "10296": 74, "285078": [74, 77], "3702": 74, "8805": 74, "92034": 74, "5907": 74, "5485": 74, "186179": 74, "0143363": 74, "6869": 74, "905869": 74, "5136": [74, 76], "012299": 74, "4064": 74, "59062": 74, "106471": 74, "12332": 74, "90428": 74, "00857782": 74, "1969": 74, "877224": 74, "23544": 74, "got": 74, "alon": 74, "8435": 74, "8847": 74, "8614": 74, "709678": 74, "6333": 74, "609576": 74, "72327": 74, "0995291": 74, "863389": 74, "62748": 74, "1531": 74, "379": 74, "86089": 74, "39983": 74, "0325111": 74, "24037": 74, "112378": 74, "714725": 74, "64597": 74, "88331": 74, "7354": 74, "67356": 74, "99815": 74, "38936": 74, "477344": 74, "120511": 74, "950679": 74, "0489166": 74, "0414449": 74, "0270237": 74, "00493017": 74, "15308": 74, "805673": 74, "113608": 74, "147355": 74, "0893536": 74, "0101503": 74, "432695": 74, "0120518": 74, "click": 75, "button": 75, "5919": 75, "5974": 75, "5928": 75, "5917": 75, "5968": 75, "8993": 75, "7754": 75, "9996": 75, "2822": 75, "4076": 75, "912": 75, "765545": 75, "765132": 75, "919": 75, "494743": 75, "747050": 75, "829": 75, "127388": 75, "356098": 75, "949": 75, "652061": 75, "368579": 75, "780763": 75, "402629": 75, "890": 75, "741916": 75, "5778": 75, "616773": 75, "907": 75, "572910": 75, "5707": 75, "182338": 75, "446977": 75, "5737": 75, "309043": 75, "842": 75, "364851": 75, "5743": 75, "862524": 75, "816": 75, "979680": 75, "5716": 75, "669273": 75, "plot": 75, "691739": 75, "137251": 75, "458050": 75, "096167": 75, "191511": 75, "585470": 75, "393885": 75, "215584": 75, "220004": 75, "472748": 75, "419098": 75, "704160": 75, "902059": 75, "015366": 75, "205031": 75, "606076": 75, "306436": 75, "646386": 75, "737847": 75, "161409": 75, "899257": 75, "301014": 75, "474372": 75, "775387": 75, "171437": 75, "828126": 75, "999562": 75, "793606": 75, "488562": 75, "282168": 75, "819129": 75, "588454": 75, "407583": 75, "093081": 75, "438605": 75, "531686": 75, "898056": 75, "568473": 75, "466528": 75, "513597": 75, "824760": 75, "338358": 75, "565213": 75, "923033": 75, "488247": 75, "696405": 75, "844028": 75, "540432": 75, "424470": 75, "597537": 75, "512649": 75, "194598": 75, "844606": 75, "571905": 75, "598631": 75, "791583": 75, "969358": 75, "008645": 75, "821351": 75, "937170": 75, "901480": 75, "660062": 75, "533581": 75, "594240": 75, "531951": 75, "623215": 75, "885362": 75, "394078": 75, "743051": 75, "644253": 75, "721723": 75, "478095": 75, "614500": 75, "950609": 75, "388795": 75, "842352": 75, "609999": 75, "472406": 75, "515561": 75, "965713": 75, "010526": 75, "909819": 75, "113659": 75, "324959": 75, "009025": 75, "173632": 75, "007010": 75, "907750": 75, "684035": 75, "155600": 75, "310871": 75, "685638": 75, "855937": 75, "300661": 75, "896125": 75, "184101": 75, "948842": 75, "073824": 75, "499993": 75, "461966": 75, "345364": 75, "867677": 75, "452924": 75, "290544": 75, "357558": 75, "525535": 75, "838606": 75, "306832": 75, "940949": 75, "327720": 75, "119488": 75, "783374": 75, "771940": 75, "388107": 75, "649792": 75, "883830": 75, "271354": 75, "174206": 75, "223427": 75, "550336": 75, "964084": 75, "074595": 75, "258177": 75, "052065": 75, "624932": 75, "222260": 75, "242855": 75, "941213": 75, "116947": 75, "348710": 75, "942912": 75, "425605": 75, "289923": 75, "059858": 75, "742510": 75, "968491": 75, "460435": 75, "125554": 75, "010830": 75, "434253": 75, "094045": 75, "471265": 75, "575444": 75, "994749": 75, "223413": 75, "412484": 75, "398933": 75, "252589": 75, "407233": 75, "622346": 75, "911613": 75, "534494": 75, "373022": 75, "911765": 75, "041907": 75, "546395": 75, "446259": 75, "414929": 75, "225835": 75, "586764": 75, "280482": 75, "946776": 75, "009359": 75, "708305": 75, "533540": 75, "289841": 75, "870466": 75, "693474": 75, "334115": 75, "086695": 75, "485933": 75, "866311": 75, "780169": 75, "820047": 75, "317239": 75, "137583": 75, "058775": 75, "248816": 75, "309371": 75, "583812": 75, "386399": 75, "368146": 75, "874906": 75, "254290": 75, "436018": 75, "124897": 75, "969899": 75, "703143": 75, "379187": 75, "405917": 75, "570392": 75, "671509": 75, "454505": 75, "341576": 75, "990427": 75, "082416": 75, "013085": 75, "444933": 75, "172479": 75, "145310": 75, "734309": 75, "422320": 75, "830321": 75, "916957": 75, "068533": 75, "293878": 75, "833780": 75, "329925": 75, "680069": 75, "459349": 75, "277433": 75, "119361": 75, "105670": 75, "903695": 75, "342441": 75, "597333": 75, "218850": 75, "293046": 75, "648526": 75, "335720": 75, "774262": 75, "820661": 75, "272544": 75, "131482": 75, "613490": 75, "462497": 75, "444502": 75, "993019": 75, "084804": 75, "092928": 75, "501087": 75, "260509": 75, "692395": 75, "903780": 75, "301822": 75, "055070": 75, "860013": 75, "782723": 75, "373809": 75, "595075": 75, "287670": 75, "167273": 75, "810351": 75, "201226": 75, "855330": 75, "161720": 75, "247033": 75, "071368": 75, "636738": 75, "162127": 75, "441049": 75, "020026": 75, "762106": 75, "001875": 75, "772173": 75, "378594": 75, "675099": 75, "996188": 75, "804882": 75, "180433": 75, "623493": 75, "417398": 75, "345863": 75, "744563": 75, "887233": 75, "519219": 75, "570195": 75, "630107": 75, "486087": 75, "305274": 75, "583037": 75, "152031": 75, "744566": 75, "144469": 75, "865922": 75, "661027": 75, "736126": 75, "418229": 75, "541341": 75, "465191": 75, "631658": 75, "578779": 75, "881839": 75, "581280": 75, "339605": 75, "761385": 75, "974929": 75, "758041": 75, "272158": 75, "628546": 75, "860815": 75, "768444": 75, "550181": 75, "597360": 75, "335519": 75, "910358": 75, "396877": 75, "686331": 75, "programmat": 75, "634133": 75, "715126": 75, "349259": 75, "036615": 75, "208598": 75, "245213": 75, "882135": 75, "783208": 75, "665343": 75, "223444": 75, "152490": 75, "375934": 75, "143589": 75, "110359": 75, "253948": 75, "293104": 75, "264990": 75, "971886": 75, "536769": 75, "334118": 75, "870887": 75, "742696": 75, "797462": 75, "540158": 75, "568741": 75, "099334": 75, "668075": 75, "961059": 75, "866724": 75, "827783": 75, "clearli": 75, "trend": 75, "diffus": 75, "3493": 75, "3147": 75, "6223": 75, "8416": 75, "6555": 75, "1635": 75, "4407": 75, "367": 75, "5333": 75, "rest": 76, "6397": 76, "5028": 76, "4241": 76, "8521": 76, "6656": 76, "505": 76, "3373": 76, "9243": 76, "7322": 76, "5337": 76, "66419": 76, "0643": 76, "66444": 76, "1136": 76, "94164": 76, "9699": 76, "63481": 76, "4689": 76, "71803": 76, "2627": 76, "33939": 76, "8936": 76, "70237": 76, "22282": 76, "1983": 76, "29758": 76, "3293": 76, "04702": 76, "99007": 76, "3691": 76, "89526": 76, "3165": 76, "18119": 76, "2434": 76, "83634": 76, "557": 76, "84748": 76, "3796": 76, "10522": 76, "0348": 76, "43761": 76, "2577": 76, "88047": 76, "007": 76, "97075": 76, "9061": 76, "85177": 76, "5321": 76, "2227": 76, "3659": 76, "9098": 76, "2068": 76, "9304": 76, "9526": 76, "8585": 76, "508": 76, "3571": 76, "9852": 76, "6756": 76, "9708": 76, "6111": 76, "1035": 76, "7301": 76, "9939": 76, "3542": 76, "matric": 76, "30445": 76, "335": 76, "13672": 76, "1644": 76, "44371": 76, "9361": 76, "05975": 76, "3244": 76, "98505": 76, "3934": 76, "87955": 76, "5565": 76, "17844": 76, "8666": 76, "56761": 76, "4559": 76, "64338": 76, "6695": 76, "64857": 76, "rotmat": 76, "984808": 76, "173648": 76, "9353": 76, "3558": 76, "62609": 76, "1435": 76, "96806": 76, "972": 76, "53769": 76, "24812": 76, "5011": 76, "42131": 76, "69218": 76, "5927": 76, "98831": 76, "0669": 76, "01065": 76, "28589": 76, "8455": 76, "to_matrix": 76, "48035": 76, "7045": 76, "03905": 76, "4265": 76, "40561": 76, "9723": 76, "2085": 76, "41589": 76, "8715": 76, "89289": 76, "7475": 76, "18828": 76, "4571": 76, "41276": 76, "8019": 76, "3705": 76, "91791": 76, "6507": 76, "straightforward": 77, "set_length": 77, "change_length": 77, "gradual": 77, "bond_cursor": 77, "920343": 77, "880519": 77, "791894": 77, "548210": 77, "532594": 77, "607594": 77, "652433": 77, "645588": 77, "366888": 77, "448164": 77, "327967": 77, "182746": 77, "267230": 77, "595345": 77, "043079": 77, "109161": 77, "447723": 77, "938407": 77, "973497": 77, "885102": 77, "861278": 77, "859784": 77, "907480": 77, "805813": 77, "767577": 77, "514858": 77, "767366": 77, "696436": 77, "707237": 77, "742254": 77, "645928": 77, "484615": 77, "727556": 77, "615627": 77, "846993": 77, "102960": 77, "370186": 77, "485492": 77, "076241": 77, "394975": 77, "043966": 77, "046408": 77, "442886": 77, "263291": 77, "014466": 77, "513222": 77, "127199": 77, "981224": 77, "605298": 77, "623007": 77, "947316": 77, "718473": 77, "740783": 77, "913235": 77, "852145": 77, "472728": 77, "879364": 77, "005697": 77, "812753": 77, "845992": 77, "178556": 77, "756056": 77, "813341": 77, "370160": 77, "298863": 77, "781567": 77, "579977": 77, "438198": 77, "set_siz": 77, "change_s": 77, "725": 77, "802": 77, "900211": 77, "456752": 77, "326211": 77, "533890": 77, "891062": 77, "151760": 77, "403285": 77, "533543": 77, "953834": 77, "940301": 77, "412892": 77, "533266": 77, "847938": 77, "811189": 77, "358399": 77, "533042": 77, "364667": 77, "754576": 77, "242185": 77, "532859": 77, "834074": 77, "761769": 77, "065959": 77, "532710": 77, "875548": 77, "825062": 77, "830962": 77, "532587": 77, "268087": 77, "937622": 77, "538100": 77, "532486": 77, "881119": 77, "093390": 77, "188025": 77, "532405": 77, "636824": 77, "287022": 77, "781193": 77, "532341": 77, "489374": 77, "513861": 77, "317903": 77, "532292": 77, "317684": 77, "043125": 77, "446533": 77, "679549": 77, "308098": 77, "833982": 77, "481881": 77, "188059": 77, "300869": 77, "163214": 77, "731143": 77, "121443": 77, "804292": 77, "161684": 77, "036707": 77, "291006": 77, "901951": 77, "747455": 77, "888000": 77, "287623": 77, "470122": 77, "467360": 77, "092862": 77, "284961": 77, "130151": 77, "304294": 77, "462885": 77, "282872": 77, "446705": 77, "244352": 77, "416321": 77, "281249": 77, "594252": 77, "276305": 77, "653841": 77, "280017": 77, "658877": 77, "391193": 77, "015537": 77, "279122": 77, "684468": 77, "582148": 77, "414145": 77, "163": 77, "039": 77, "903734": 77, "413449": 77, "206761": 77, "866713": 77, "060627": 77, "253447": 77, "879910": 77, "150792": 77, "674494": 77, "215898": 77, "524346": 77, "327498": 77, "605072": 77, "294830": 77, "980599": 77, "431110": 77, "620810": 77, "843168": 77, "221010": 77, "739679": 77, "406235": 77, "778984": 77, "691981": 77, "445042": 77, "696463": 77, "463628": 77, "872254": 77, "364056": 77, "437424": 77, "982017": 77, "347161": 77, "154732": 77, "243423": 77, "054636": 77, "361446": 77, "733043": 77, "236196": 77, "037819": 77, "531954": 77, "485350": 77, "416578": 77, "428450": 77, "543340": 77, "220497": 77, "015767": 77, "321": 77, "043305": 77, "911014": 77, "363": 77, "637974": 77, "246": 77, "990282": 77, "962216": 77, "288": 77, "548335": 77, "895676": 77, "766103": 77, "121679": 77, "624047": 77, "837995": 77, "327241": 77, "768052": 77, "352134": 77, "073444": 77, "297987": 77, "297191": 77, "409475": 77, "276564": 77, "440864": 77, "206198": 77, "102964": 77, "370172": 77, "485502": 77, "li": 77, "move_al": 77, "clash": 77, "fine": 77, "grain": 77, "auto_align": 77, "deviat": 77, "opposit": 77, "whle": 77, "relative_mass": 77, "linearli": 77, "lightest": 77, "heaviest": 77, "absolute_mass": 77, "receiv": 77, "relative_numb": 77, "fewest": 77, "absolute_numb": 77, "immobil": 77}, "objects": {"": [[21, 0, 0, "-", "sire"]], "sire": [[21, 1, 1, "", "atomid"], [1, 0, 0, "-", "base"], [2, 0, 0, "-", "cas"], [21, 1, 1, "", "chainid"], [21, 1, 1, "", "disable_thumbs_up"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "get_thumbs_up_info"], [16, 0, 0, "-", "io"], [21, 1, 1, "", "load"], [21, 1, 1, "", "load_test_files"], [17, 0, 0, "-", "maths"], [21, 1, 1, "", "measure"], [18, 0, 0, "-", "mm"], [19, 0, 0, "-", "mol"], [21, 1, 1, "", "molid"], [21, 1, 1, "", "save"], [21, 1, 1, "", "save_to_string"], [20, 0, 0, "-", "search"], [21, 1, 1, "", "segid"], [23, 0, 0, "-", "stream"], [21, 1, 1, "", "supported_formats"], [24, 0, 0, "-", "system"], [21, 1, 1, "", "thumbs_up"], [21, 4, 1, "", "tutorial_url"], [25, 0, 0, "-", "units"], [21, 1, 1, "", "use_mixed_api"], [21, 1, 1, "", "use_new_api"], [21, 1, 1, "", "use_old_api"], [26, 0, 0, "-", "utils"], [27, 0, 0, "-", "vol"]], "sire.base": [[1, 2, 1, "", "PropertyMap"], [1, 1, 1, "", "create_map"], [1, 1, 1, "", "wrap"]], "sire.base.PropertyMap": [[1, 3, 1, "", "assign"], [1, 3, 1, "", "clone"], [1, 3, 1, "", "is_default"], [1, 3, 1, "", "merge"], [1, 3, 1, "", "specified"], [1, 3, 1, "", "to_dict"], [1, 3, 1, "", "to_string"], [1, 3, 1, "", "typename"], [1, 3, 1, "", "what"]], "sire.cas": [[2, 2, 1, "", "Expression"], [2, 2, 1, "", "Symbol"], [2, 4, 1, "", "lam"], [2, 4, 1, "", "x"], [2, 4, 1, "", "y"]], "sire.cas.Expression": [[2, 3, 1, "", "add"], [2, 3, 1, "", "assign"], [2, 3, 1, "", "base"], [2, 3, 1, "", "children"], [2, 3, 1, "", "clone"], [2, 3, 1, "", "conjugate"], [2, 3, 1, "", "cubed"], [2, 3, 1, "", "diff"], [2, 3, 1, "", "differentiate"], [2, 3, 1, "", "divide"], [2, 3, 1, "", "evaluate"], [2, 3, 1, "", "expand"], [2, 3, 1, "", "factor"], [2, 3, 1, "", "functions"], [2, 3, 1, "", "hash"], [2, 3, 1, "", "integ"], [2, 3, 1, "", "integrate"], [2, 3, 1, "", "invert"], [2, 3, 1, "", "is_complex"], [2, 3, 1, "", "is_compound"], [2, 3, 1, "", "is_constant"], [2, 3, 1, "", "is_function"], [2, 3, 1, "", "is_zero"], [2, 3, 1, "", "multiply"], [2, 3, 1, "", "negate"], [2, 3, 1, "", "pow"], [2, 3, 1, "", "root"], [2, 3, 1, "", "series"], [2, 3, 1, "", "simplify"], [2, 3, 1, "", "squared"], [2, 3, 1, "", "substitute"], [2, 3, 1, "", "subtract"], [2, 3, 1, "", "symbols"], [2, 3, 1, "", "to_open_m_m_string"], [2, 3, 1, "", "to_string"], [2, 3, 1, "", "typename"], [2, 3, 1, "", "what"]], "sire.cas.Symbol": [[2, 3, 1, "", "assign"], [2, 3, 1, "", "children"], [2, 3, 1, "", "clone"], [2, 3, 1, "", "differentiate"], [2, 3, 1, "", "evaluate"], [2, 3, 1, "", "expand"], [2, 3, 1, "", "functions"], [2, 3, 1, "", "hash"], [2, 3, 1, "", "id"], [2, 3, 1, "", "integrate"], [2, 3, 1, "", "is_constant"], [2, 3, 1, "", "is_function"], [2, 3, 1, "", "is_null"], [2, 3, 1, "", "substitute"], [2, 3, 1, "", "symbols"], [2, 3, 1, "", "to_string"], [2, 3, 1, "", "typename"], [2, 3, 1, "", "what"]], "sire.io": [[16, 1, 1, "", "get_coords_array"]], "sire.maths": [[17, 2, 1, "", "Matrix"], [17, 2, 1, "", "Sphere"], [17, 2, 1, "", "Torsion"], [17, 2, 1, "", "Triangle"], [17, 2, 1, "", "Vector"], [17, 1, 1, "", "create_quaternion"], [17, 4, 1, "", "pi"]], "sire.maths.Matrix": [[17, 3, 1, "", "assign"], [17, 3, 1, "", "at"], [17, 3, 1, "", "checked_offset"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "column0"], [17, 3, 1, "", "column1"], [17, 3, 1, "", "column2"], [17, 3, 1, "", "covariance"], [17, 3, 1, "", "determinant"], [17, 3, 1, "", "diagonalise"], [17, 3, 1, "", "enforce_symmetric"], [17, 3, 1, "", "get_principal_axes"], [17, 3, 1, "", "identity"], [17, 3, 1, "", "inverse"], [17, 3, 1, "", "is_identity"], [17, 3, 1, "", "is_symmetric"], [17, 3, 1, "", "offset"], [17, 3, 1, "", "row0"], [17, 3, 1, "", "row1"], [17, 3, 1, "", "row2"], [17, 3, 1, "", "set_to_identity"], [17, 3, 1, "", "single_value_decomposition"], [17, 3, 1, "", "svd"], [17, 3, 1, "", "to_string"], [17, 3, 1, "", "trace"], [17, 3, 1, "", "transpose"], [17, 3, 1, "", "typename"], [17, 3, 1, "", "what"], [17, 3, 1, "", "xx"], [17, 3, 1, "", "xy"], [17, 3, 1, "", "xz"], [17, 3, 1, "", "yx"], [17, 3, 1, "", "yy"], [17, 3, 1, "", "yz"], [17, 3, 1, "", "zero"], [17, 3, 1, "", "zx"], [17, 3, 1, "", "zy"], [17, 3, 1, "", "zz"]], "sire.maths.Torsion": [[17, 3, 1, "", "angle"], [17, 3, 1, "", "at"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "count"], [17, 3, 1, "", "improper_angle"], [17, 3, 1, "", "line03"], [17, 3, 1, "", "line12"], [17, 3, 1, "", "point"], [17, 3, 1, "", "to_string"], [17, 3, 1, "", "triangle1"], [17, 3, 1, "", "triangle2"], [17, 3, 1, "", "typename"], [17, 3, 1, "", "vector03"], [17, 3, 1, "", "vector12"], [17, 3, 1, "", "what"]], "sire.maths.Triangle": [[17, 3, 1, "", "angle"], [17, 3, 1, "", "angle0"], [17, 3, 1, "", "angle1"], [17, 3, 1, "", "angle2"], [17, 3, 1, "", "at"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "count"], [17, 3, 1, "", "line0"], [17, 3, 1, "", "line1"], [17, 3, 1, "", "line2"], [17, 3, 1, "", "point"], [17, 3, 1, "", "to_string"], [17, 3, 1, "", "typename"], [17, 3, 1, "", "vector"], [17, 3, 1, "", "vector0"], [17, 3, 1, "", "vector1"], [17, 3, 1, "", "vector2"], [17, 3, 1, "", "what"]], "sire.mm": [[18, 2, 1, "", "Angle"], [18, 2, 1, "", "Bond"], [18, 2, 1, "", "Dihedral"], [18, 2, 1, "", "Improper"], [18, 2, 1, "", "SelectorAngle"], [18, 2, 1, "", "SelectorBond"], [18, 2, 1, "", "SelectorDihedral"], [18, 2, 1, "", "SelectorImproper"], [18, 2, 1, "", "SelectorMAngle"], [18, 2, 1, "", "SelectorMBond"], [18, 2, 1, "", "SelectorMDihedral"], [18, 2, 1, "", "SelectorMImproper"]], "sire.mm.Angle": [[18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom0"], [18, 3, 1, "", "atom1"], [18, 3, 1, "", "atom2"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "id"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measure"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potential"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "selector"], [18, 3, 1, "", "size"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "what"]], "sire.mm.Bond": [[18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom0"], [18, 3, 1, "", "atom1"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "id"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "length"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measure"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potential"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "selector"], [18, 3, 1, "", "size"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "what"]], "sire.mm.Dihedral": [[18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom0"], [18, 3, 1, "", "atom1"], [18, 3, 1, "", "atom2"], [18, 3, 1, "", "atom3"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "id"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measure"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potential"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "selector"], [18, 3, 1, "", "size"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "what"]], "sire.mm.Improper": [[18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom0"], [18, 3, 1, "", "atom1"], [18, 3, 1, "", "atom2"], [18, 3, 1, "", "atom3"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "id"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measure"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "phi"], [18, 3, 1, "", "potential"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "selector"], [18, 3, 1, "", "size"], [18, 3, 1, "", "theta"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "what"]], "sire.mm.SelectorAngle": [[18, 3, 1, "", "add"], [18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "size"], [18, 3, 1, "", "sizes"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "view"], [18, 3, 1, "", "what"]], "sire.mm.SelectorBond": [[18, 3, 1, "", "add"], [18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "lengths"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "size"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "view"], [18, 3, 1, "", "what"]], "sire.mm.SelectorDihedral": [[18, 3, 1, "", "add"], [18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "size"], [18, 3, 1, "", "sizes"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "view"], [18, 3, 1, "", "what"]], "sire.mm.SelectorImproper": [[18, 3, 1, "", "add"], [18, 3, 1, "", "assert_contains"], [18, 3, 1, "", "assert_has_metadata"], [18, 3, 1, "", "assert_has_property"], [18, 3, 1, "", "assert_same_molecule"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atoms"], [18, 3, 1, "", "chains"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "const_data"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cursor"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_null"], [18, 3, 1, "", "is_same_molecule"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "metadata_type"], [18, 3, 1, "", "molecules"], [18, 3, 1, "", "move"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "num_views"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "property_type"], [18, 3, 1, "", "residues"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "segments"], [18, 3, 1, "", "select_all"], [18, 3, 1, "", "select_all_atoms"], [18, 3, 1, "", "select_all_chains"], [18, 3, 1, "", "select_all_cutgroups"], [18, 3, 1, "", "select_all_residues"], [18, 3, 1, "", "select_all_segments"], [18, 3, 1, "", "selected_all"], [18, 3, 1, "", "selection"], [18, 3, 1, "", "size"], [18, 3, 1, "", "sizes"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_selector"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "view"], [18, 3, 1, "", "what"]], "sire.mm.SelectorMAngle": [[18, 3, 1, "", "add"], [18, 3, 1, "", "apply"], [18, 3, 1, "", "apply_reduce"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom"], [18, 3, 1, "", "chain"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "molecule"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_molecules"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "residue"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "search"], [18, 3, 1, "", "segment"], [18, 3, 1, "", "size"], [18, 3, 1, "", "sizes"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecule_group"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_select_result"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "update"], [18, 3, 1, "", "view"]], "sire.mm.SelectorMBond": [[18, 3, 1, "", "add"], [18, 3, 1, "", "apply"], [18, 3, 1, "", "apply_reduce"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom"], [18, 3, 1, "", "chain"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "lengths"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "molecule"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_molecules"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "residue"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "search"], [18, 3, 1, "", "segment"], [18, 3, 1, "", "size"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecule_group"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_select_result"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "update"], [18, 3, 1, "", "view"]], "sire.mm.SelectorMDihedral": [[18, 3, 1, "", "add"], [18, 3, 1, "", "apply"], [18, 3, 1, "", "apply_reduce"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom"], [18, 3, 1, "", "chain"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "molecule"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_molecules"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "residue"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "search"], [18, 3, 1, "", "segment"], [18, 3, 1, "", "size"], [18, 3, 1, "", "sizes"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecule_group"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_select_result"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "update"], [18, 3, 1, "", "view"]], "sire.mm.SelectorMImproper": [[18, 3, 1, "", "add"], [18, 3, 1, "", "apply"], [18, 3, 1, "", "apply_reduce"], [18, 3, 1, "", "assign"], [18, 3, 1, "", "atom"], [18, 3, 1, "", "chain"], [18, 3, 1, "", "clone"], [18, 3, 1, "", "count"], [18, 3, 1, "", "cutgroup"], [18, 3, 1, "", "cutgroups"], [18, 3, 1, "", "delete_frame"], [18, 3, 1, "", "energies"], [18, 3, 1, "", "energy"], [18, 3, 1, "", "evaluate"], [18, 3, 1, "", "has_metadata"], [18, 3, 1, "", "has_property"], [18, 3, 1, "", "ids"], [18, 3, 1, "", "intersection"], [18, 3, 1, "", "invert"], [18, 3, 1, "", "is_empty"], [18, 3, 1, "", "is_selector"], [18, 3, 1, "", "load_frame"], [18, 3, 1, "", "measures"], [18, 3, 1, "", "metadata_keys"], [18, 3, 1, "", "molecule"], [18, 3, 1, "", "num_atoms"], [18, 3, 1, "", "num_chains"], [18, 3, 1, "", "num_cutgroups"], [18, 3, 1, "", "num_frames"], [18, 3, 1, "", "num_molecules"], [18, 3, 1, "", "num_residues"], [18, 3, 1, "", "num_segments"], [18, 3, 1, "", "potentials"], [18, 3, 1, "", "properties"], [18, 3, 1, "", "property_keys"], [18, 3, 1, "", "residue"], [18, 3, 1, "", "save_frame"], [18, 3, 1, "", "search"], [18, 3, 1, "", "segment"], [18, 3, 1, "", "size"], [18, 3, 1, "", "sizes"], [18, 3, 1, "", "to_list"], [18, 3, 1, "", "to_molecule_group"], [18, 3, 1, "", "to_molecules"], [18, 3, 1, "", "to_select_result"], [18, 3, 1, "", "to_string"], [18, 3, 1, "", "typename"], [18, 3, 1, "", "update"], [18, 3, 1, "", "view"]], "sire.mol": [[19, 2, 1, "", "Atom"], [19, 2, 1, "", "AtomIdx"], [19, 2, 1, "", "AtomName"], [19, 2, 1, "", "AtomNum"], [19, 2, 1, "", "BondType"], [19, 2, 1, "", "Chain"], [19, 2, 1, "", "ChainIdx"], [19, 2, 1, "", "ChainName"], [19, 2, 1, "", "Cursor"], [19, 2, 1, "", "Cursors"], [19, 2, 1, "", "CursorsM"], [19, 2, 1, "", "Element"], [19, 2, 1, "", "MolIdx"], [19, 2, 1, "", "MolName"], [19, 2, 1, "", "MolNum"], [19, 2, 1, "", "Molecule"], [19, 2, 1, "", "ResIdx"], [19, 2, 1, "", "ResName"], [19, 2, 1, "", "ResNum"], [19, 2, 1, "", "Residue"], [19, 2, 1, "", "SegIdx"], [19, 2, 1, "", "SegName"], [19, 2, 1, "", "Segment"], [19, 2, 1, "", "SelectorMol"], [19, 2, 1, "", "Stereoscopy"], [19, 2, 1, "", "TrajectoryIterator"]], "sire.mol.Atom": [[19, 3, 1, "", "assert_contains"], [19, 3, 1, "", "assert_contains_metadata"], [19, 3, 1, "", "assert_contains_property"], [19, 3, 1, "", "assert_has_metadata"], [19, 3, 1, "", "assert_has_property"], [19, 3, 1, "", "assert_same_molecule"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "cg_atom_idx"], [19, 3, 1, "", "chain"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "const_data"], [19, 3, 1, "", "count"], [19, 3, 1, "", "cursor"], [19, 3, 1, "", "cutgroup"], [19, 3, 1, "", "cutgroups"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "edit"], [19, 3, 1, "", "energy"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "has_metadata"], [19, 3, 1, "", "has_property"], [19, 3, 1, "", "index"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "is_empty"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "is_same_molecule"], [19, 3, 1, "", "is_selector"], [19, 3, 1, "", "is_within_chain"], [19, 3, 1, "", "is_within_residue"], [19, 3, 1, "", "is_within_segment"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "metadata_keys"], [19, 3, 1, "", "metadata_type"], [19, 3, 1, "", "molecule"], [19, 3, 1, "", "move"], [19, 3, 1, "", "name"], [19, 3, 1, "", "num_atoms"], [19, 3, 1, "", "num_chains"], [19, 3, 1, "", "num_cutgroups"], [19, 3, 1, "", "num_frames"], [19, 3, 1, "", "num_residues"], [19, 3, 1, "", "num_segments"], [19, 3, 1, "", "num_views"], [19, 3, 1, "", "number"], [19, 3, 1, "", "property_as_property"], [19, 3, 1, "", "property_as_variant"], [19, 3, 1, "", "property_keys"], [19, 3, 1, "", "property_type"], [19, 3, 1, "", "residue"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "segment"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "select_all"], [19, 3, 1, "", "select_all_atoms"], [19, 3, 1, "", "select_all_chains"], [19, 3, 1, "", "select_all_cutgroups"], [19, 3, 1, "", "select_all_residues"], [19, 3, 1, "", "select_all_segments"], [19, 3, 1, "", "selected_all"], [19, 3, 1, "", "selection"], [19, 3, 1, "", "selector"], [19, 3, 1, "", "size"], [19, 3, 1, "", "to_list"], [19, 3, 1, "", "to_molecules"], [19, 3, 1, "", "to_selector"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "update"]], "sire.mol.AtomIdx": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "null"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.AtomName": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.AtomNum": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.BondType": [[19, 3, 1, "", "aromatic_bond"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "double_bond"], [19, 3, 1, "", "is_defined"], [19, 3, 1, "", "is_double"], [19, 3, 1, "", "is_single"], [19, 3, 1, "", "is_triple"], [19, 3, 1, "", "isromatic"], [19, 3, 1, "", "sdf_value"], [19, 3, 1, "", "single_bond"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "triple_bond"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "undefined_bond"], [19, 3, 1, "", "value"]], "sire.mol.Chain": [[19, 3, 1, "", "assert_contains"], [19, 3, 1, "", "assert_contains_metadata"], [19, 3, 1, "", "assert_contains_property"], [19, 3, 1, "", "assert_has_metadata"], [19, 3, 1, "", "assert_has_property"], [19, 3, 1, "", "assert_same_molecule"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "atom_idxs"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "const_data"], [19, 3, 1, "", "contains"], [19, 3, 1, "", "count"], [19, 3, 1, "", "cursor"], [19, 3, 1, "", "cutgroup"], [19, 3, 1, "", "cutgroups"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "edit"], [19, 3, 1, "", "energy"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "has_metadata"], [19, 3, 1, "", "has_property"], [19, 3, 1, "", "index"], [19, 3, 1, "", "intersects"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "is_empty"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "is_same_molecule"], [19, 3, 1, "", "is_selector"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "metadata_keys"], [19, 3, 1, "", "metadata_type"], [19, 3, 1, "", "move"], [19, 3, 1, "", "name"], [19, 3, 1, "", "num_atoms"], [19, 3, 1, "", "num_chains"], [19, 3, 1, "", "num_cutgroups"], [19, 3, 1, "", "num_frames"], [19, 3, 1, "", "num_residues"], [19, 3, 1, "", "num_segments"], [19, 3, 1, "", "num_views"], [19, 3, 1, "", "number"], [19, 3, 1, "", "property_as_property"], [19, 3, 1, "", "property_as_variant"], [19, 3, 1, "", "property_keys"], [19, 3, 1, "", "property_type"], [19, 3, 1, "", "res_idxs"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "select_all"], [19, 3, 1, "", "select_all_atoms"], [19, 3, 1, "", "select_all_chains"], [19, 3, 1, "", "select_all_cutgroups"], [19, 3, 1, "", "select_all_residues"], [19, 3, 1, "", "select_all_segments"], [19, 3, 1, "", "selected_all"], [19, 3, 1, "", "selection"], [19, 3, 1, "", "selector"], [19, 3, 1, "", "size"], [19, 3, 1, "", "to_list"], [19, 3, 1, "", "to_molecules"], [19, 3, 1, "", "to_selector"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "update"]], "sire.mol.ChainIdx": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "null"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.ChainName": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.Cursor": [[19, 3, 1, "", "angle"], [19, 3, 1, "", "angles"], [19, 3, 1, "", "apply"], [19, 3, 1, "", "atom"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "bond"], [19, 3, 1, "", "bonds"], [19, 3, 1, "", "chain"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "commit"], [19, 3, 1, "", "delete"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "dihedral"], [19, 3, 1, "", "dihedrals"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "get"], [19, 3, 1, "", "get_index"], [19, 3, 1, "", "get_name"], [19, 3, 1, "", "get_number"], [19, 3, 1, "", "id"], [19, 3, 1, "", "improper"], [19, 3, 1, "", "impropers"], [19, 5, 1, "", "index"], [19, 3, 1, "", "is_angle"], [19, 3, 1, "", "is_atom"], [19, 3, 1, "", "is_bond"], [19, 3, 1, "", "is_chain"], [19, 3, 1, "", "is_dihedral"], [19, 3, 1, "", "is_improper"], [19, 3, 1, "", "is_internal"], [19, 3, 1, "", "is_molecule"], [19, 3, 1, "", "is_residue"], [19, 3, 1, "", "is_same_editor"], [19, 3, 1, "", "is_segment"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "molecule"], [19, 5, 1, "", "name"], [19, 3, 1, "", "num_frames"], [19, 5, 1, "", "number"], [19, 3, 1, "", "parent"], [19, 3, 1, "", "properties"], [19, 3, 1, "", "residue"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "rotate"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "segment"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "set"], [19, 3, 1, "", "set_name"], [19, 3, 1, "", "set_number"], [19, 3, 1, "", "translate"], [19, 3, 1, "", "type"], [19, 3, 1, "", "view"]], "sire.mol.Cursors": [[19, 3, 1, "", "angle"], [19, 3, 1, "", "angles"], [19, 3, 1, "", "apply"], [19, 3, 1, "", "atom"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "bond"], [19, 3, 1, "", "bonds"], [19, 3, 1, "", "chain"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "commit"], [19, 3, 1, "", "delete"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "dihedral"], [19, 3, 1, "", "dihedrals"], [19, 3, 1, "", "get"], [19, 3, 1, "", "improper"], [19, 3, 1, "", "impropers"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "is_same_editor"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "molecule"], [19, 3, 1, "", "num_frames"], [19, 3, 1, "", "parent"], [19, 3, 1, "", "residue"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "rotate"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "segment"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "set"], [19, 3, 1, "", "translate"], [19, 3, 1, "", "view"]], "sire.mol.CursorsM": [[19, 3, 1, "", "angle"], [19, 3, 1, "", "angles"], [19, 3, 1, "", "apply"], [19, 3, 1, "", "atom"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "bond"], [19, 3, 1, "", "bonds"], [19, 3, 1, "", "chain"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "commit"], [19, 3, 1, "", "delete"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "dihedral"], [19, 3, 1, "", "dihedrals"], [19, 3, 1, "", "get"], [19, 3, 1, "", "improper"], [19, 3, 1, "", "impropers"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "molecule"], [19, 3, 1, "", "molecules"], [19, 3, 1, "", "num_frames"], [19, 3, 1, "", "residue"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "rotate"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "segment"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "set"], [19, 3, 1, "", "translate"], [19, 3, 1, "", "view"]], "sire.mol.Element": [[19, 3, 1, "", "actinide"], [19, 3, 1, "", "alkali_earth_metal"], [19, 3, 1, "", "alkali_metal"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "biological"], [19, 3, 1, "", "biological_element"], [19, 3, 1, "", "blue"], [19, 3, 1, "", "bond_order_radius"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "color"], [19, 3, 1, "", "color_name"], [19, 3, 1, "", "covalent_radius"], [19, 3, 1, "", "element_with_mass"], [19, 3, 1, "", "green"], [19, 3, 1, "", "group"], [19, 3, 1, "", "halogen"], [19, 3, 1, "", "hex_color"], [19, 3, 1, "", "lanthanide"], [19, 3, 1, "", "mass"], [19, 3, 1, "", "max_bonds"], [19, 3, 1, "", "name"], [19, 3, 1, "", "noble_gas"], [19, 3, 1, "", "num_protons"], [19, 3, 1, "", "period"], [19, 3, 1, "", "rare_earth"], [19, 3, 1, "", "red"], [19, 3, 1, "", "symbol"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "transition_metal"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "vdw_radius"], [19, 3, 1, "", "what"]], "sire.mol.MolIdx": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "null"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.MolName": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.MolNum": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "get_unique_number"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.Molecule": [[19, 3, 1, "", "assert_contains"], [19, 3, 1, "", "assert_contains_metadata"], [19, 3, 1, "", "assert_contains_property"], [19, 3, 1, "", "assert_has_metadata"], [19, 3, 1, "", "assert_has_property"], [19, 3, 1, "", "assert_same_molecule"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "const_data"], [19, 3, 1, "", "count"], [19, 3, 1, "", "cursor"], [19, 3, 1, "", "cutgroup"], [19, 3, 1, "", "cutgroups"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "edit"], [19, 3, 1, "", "energy"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "has_metadata"], [19, 3, 1, "", "has_property"], [19, 3, 1, "", "info"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "is_empty"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "is_same_molecule"], [19, 3, 1, "", "is_selector"], [19, 3, 1, "", "join"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "metadata"], [19, 3, 1, "", "metadata_keys"], [19, 3, 1, "", "metadata_type"], [19, 3, 1, "", "move"], [19, 3, 1, "", "name"], [19, 3, 1, "", "num_atoms"], [19, 3, 1, "", "num_chains"], [19, 3, 1, "", "num_cutgroups"], [19, 3, 1, "", "num_frames"], [19, 3, 1, "", "num_residues"], [19, 3, 1, "", "num_segments"], [19, 3, 1, "", "num_views"], [19, 3, 1, "", "number"], [19, 3, 1, "", "properties"], [19, 3, 1, "", "property"], [19, 3, 1, "", "property_keys"], [19, 3, 1, "", "property_type"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "select_all"], [19, 3, 1, "", "select_all_atoms"], [19, 3, 1, "", "select_all_chains"], [19, 3, 1, "", "select_all_cutgroups"], [19, 3, 1, "", "select_all_residues"], [19, 3, 1, "", "select_all_segments"], [19, 3, 1, "", "selected_all"], [19, 3, 1, "", "selection"], [19, 3, 1, "", "selector"], [19, 3, 1, "", "size"], [19, 3, 1, "", "to_list"], [19, 3, 1, "", "to_molecules"], [19, 3, 1, "", "to_selector"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "update"], [19, 3, 1, "", "version"]], "sire.mol.ResIdx": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "null"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.ResName": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.ResNum": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.Residue": [[19, 3, 1, "", "assert_contains_metadata"], [19, 3, 1, "", "assert_contains_property"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "atom_idxs"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "contains"], [19, 3, 1, "", "count"], [19, 3, 1, "", "cursor"], [19, 3, 1, "", "edit"], [19, 3, 1, "", "energy"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "has_metadata"], [19, 3, 1, "", "has_property"], [19, 3, 1, "", "index"], [19, 3, 1, "", "intersects"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "is_empty"], [19, 3, 1, "", "is_within_chain"], [19, 3, 1, "", "metadata_keys"], [19, 3, 1, "", "move"], [19, 3, 1, "", "name"], [19, 3, 1, "", "num_atoms"], [19, 3, 1, "", "number"], [19, 3, 1, "", "property_as_property"], [19, 3, 1, "", "property_as_variant"], [19, 3, 1, "", "property_keys"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "selected_all"], [19, 3, 1, "", "selection"], [19, 3, 1, "", "selector"], [19, 3, 1, "", "size"], [19, 3, 1, "", "to_selector"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "update"]], "sire.mol.SegIdx": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "null"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.SegName": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "hash"], [19, 3, 1, "", "is_null"], [19, 3, 1, "", "map"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "what"]], "sire.mol.Segment": [[19, 3, 1, "", "assert_contains_metadata"], [19, 3, 1, "", "assert_contains_property"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "atom_idxs"], [19, 3, 1, "", "atoms"], [19, 3, 1, "", "chains"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "contains"], [19, 3, 1, "", "count"], [19, 3, 1, "", "cursor"], [19, 3, 1, "", "edit"], [19, 3, 1, "", "energy"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "has_metadata"], [19, 3, 1, "", "has_property"], [19, 3, 1, "", "index"], [19, 3, 1, "", "intersects"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "is_empty"], [19, 3, 1, "", "metadata_keys"], [19, 3, 1, "", "move"], [19, 3, 1, "", "name"], [19, 3, 1, "", "num_atoms"], [19, 3, 1, "", "number"], [19, 3, 1, "", "property_as_property"], [19, 3, 1, "", "property_as_variant"], [19, 3, 1, "", "property_keys"], [19, 3, 1, "", "residues"], [19, 3, 1, "", "segments"], [19, 3, 1, "", "selected_all"], [19, 3, 1, "", "selection"], [19, 3, 1, "", "selector"], [19, 3, 1, "", "size"], [19, 3, 1, "", "to_selector"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "update"]], "sire.mol.SelectorMol": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "apply_reduce"], [19, 3, 1, "", "assign"], [19, 3, 1, "", "atom"], [19, 3, 1, "", "chain"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "contains"], [19, 3, 1, "", "count"], [19, 3, 1, "", "cutgroup"], [19, 3, 1, "", "cutgroups"], [19, 3, 1, "", "delete_frame"], [19, 3, 1, "", "energies"], [19, 3, 1, "", "energy"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "ids"], [19, 3, 1, "", "indexes"], [19, 3, 1, "", "is_empty"], [19, 3, 1, "", "is_selector"], [19, 3, 1, "", "load_frame"], [19, 3, 1, "", "mol_nums"], [19, 3, 1, "", "molecule"], [19, 3, 1, "", "names"], [19, 3, 1, "", "num_atoms"], [19, 3, 1, "", "num_chains"], [19, 3, 1, "", "num_cutgroups"], [19, 3, 1, "", "num_frames"], [19, 3, 1, "", "num_molecules"], [19, 3, 1, "", "num_residues"], [19, 3, 1, "", "num_segments"], [19, 3, 1, "", "numbers"], [19, 3, 1, "", "residue"], [19, 3, 1, "", "save_frame"], [19, 3, 1, "", "search"], [19, 3, 1, "", "segment"], [19, 3, 1, "", "size"], [19, 3, 1, "", "to_list"], [19, 3, 1, "", "to_molecule_group"], [19, 3, 1, "", "to_molecules"], [19, 3, 1, "", "to_select_result"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "update"], [19, 3, 1, "", "view"], [19, 3, 1, "", "what"]], "sire.mol.Stereoscopy": [[19, 3, 1, "", "assign"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "down"], [19, 3, 1, "", "is_defined"], [19, 3, 1, "", "is_down"], [19, 3, 1, "", "is_not_stereo"], [19, 3, 1, "", "is_up"], [19, 3, 1, "", "not_stereo"], [19, 3, 1, "", "sdf_value"], [19, 3, 1, "", "to_string"], [19, 3, 1, "", "typename"], [19, 3, 1, "", "undefined"], [19, 3, 1, "", "up"], [19, 3, 1, "", "value"]], "sire.mol.TrajectoryIterator": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "current"], [19, 3, 1, "", "first"]], "sire.search": [[20, 1, 1, "", "approx_equal"], [20, 1, 1, "", "delete_all_tokens"], [20, 1, 1, "", "delete_token"], [20, 1, 1, "", "get_approx_epsilon"], [20, 1, 1, "", "get_min_protein_residues"], [20, 1, 1, "", "get_protein_residue_names"], [20, 1, 1, "", "get_token"], [20, 1, 1, "", "has_token"], [20, 1, 1, "", "set_approx_epsilon"], [20, 1, 1, "", "set_min_protein_residues"], [20, 1, 1, "", "set_protein_residue_names"], [20, 1, 1, "", "set_token"]], "sire.system": [[24, 2, 1, "", "System"]], "sire.system.System": [[24, 3, 1, "", "angle"], [24, 3, 1, "", "angles"], [24, 3, 1, "", "apply"], [24, 3, 1, "", "apply_reduce"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "bond"], [24, 3, 1, "", "bonds"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "charge"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "coordinates"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cursor"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "dihedral"], [24, 3, 1, "", "dihedrals"], [24, 3, 1, "", "energies"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "improper"], [24, 3, 1, "", "impropers"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "mass"], [24, 3, 1, "", "molecule"], [24, 3, 1, "", "molecules"], [24, 3, 1, "", "names"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_molecules"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "numbers"], [24, 3, 1, "", "properties"], [24, 3, 1, "", "property"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "set_property"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_molecule_group"], [24, 3, 1, "", "trajectory"], [24, 3, 1, "", "update"], [24, 3, 1, "", "view"]], "sire.units": [[25, 1, 1, "", "angle"], [25, 4, 1, "", "angstrom"], [25, 1, 1, "", "convert"], [25, 1, 1, "", "length"], [25, 4, 1, "", "picometer"], [25, 1, 1, "", "set_energy_unit"], [25, 1, 1, "", "set_internal_units"], [25, 1, 1, "", "set_length_unit"], [25, 1, 1, "", "set_mass_unit"], [25, 1, 1, "", "set_quantity_unit"], [25, 1, 1, "", "set_si_units"], [25, 1, 1, "", "set_time_unit"]], "sire.utils": [[26, 2, 1, "", "Console"], [26, 2, 1, "", "NullProfiler"], [26, 2, 1, "", "Profiler"], [26, 2, 1, "", "Table"], [26, 1, 1, "", "try_import"], [26, 1, 1, "", "try_import_from"]], "sire.utils.Console": [[26, 3, 1, "", "debug"], [26, 3, 1, "", "debugging_enabled"], [26, 3, 1, "", "error"], [26, 3, 1, "", "info"], [26, 3, 1, "", "panel"], [26, 3, 1, "", "print"], [26, 3, 1, "", "print_exception"], [26, 3, 1, "", "redirect_output"], [26, 3, 1, "", "rule"], [26, 3, 1, "", "save"], [26, 3, 1, "", "set_debugging_enabled"], [26, 3, 1, "", "set_theme"], [26, 3, 1, "", "supports_emojis"], [26, 3, 1, "", "warning"]], "sire.utils.Profiler": [[26, 3, 1, "", "child_total"], [26, 3, 1, "", "is_null"], [26, 3, 1, "", "name"], [26, 3, 1, "", "start"], [26, 3, 1, "", "stop"], [26, 3, 1, "", "total"]], "sire.utils.Table": [[26, 3, 1, "", "add_column"], [26, 3, 1, "", "add_row"], [26, 3, 1, "", "to_string"]], "sire.vol": [[27, 2, 1, "", "Cartesian"], [27, 2, 1, "", "PeriodicBox"]], "sire.vol.Cartesian": [[27, 3, 1, "", "assign"], [27, 3, 1, "", "beyond"], [27, 3, 1, "", "calc_angle"], [27, 3, 1, "", "calc_dihedral"], [27, 3, 1, "", "calc_dist"], [27, 3, 1, "", "calc_dist2"], [27, 3, 1, "", "calc_dist_vector"], [27, 3, 1, "", "calc_dist_vectors"], [27, 3, 1, "", "calc_inv_dist"], [27, 3, 1, "", "calc_inv_dist2"], [27, 3, 1, "", "change_volume"], [27, 3, 1, "", "clone"], [27, 3, 1, "", "get_box_center"], [27, 3, 1, "", "get_copies_within"], [27, 3, 1, "", "get_images_within"], [27, 3, 1, "", "get_minimum_image"], [27, 3, 1, "", "get_random_point"], [27, 3, 1, "", "is_cartesian"], [27, 3, 1, "", "is_periodic"], [27, 3, 1, "", "maximum_cutoff"], [27, 3, 1, "", "minimum_distance"], [27, 3, 1, "", "set_volume"], [27, 3, 1, "", "to_string"], [27, 3, 1, "", "typename"], [27, 3, 1, "", "volume"]], "sire.vol.PeriodicBox": [[27, 3, 1, "", "assign"], [27, 3, 1, "", "beyond"], [27, 3, 1, "", "calc_angle"], [27, 3, 1, "", "calc_dihedral"], [27, 3, 1, "", "calc_dist"], [27, 3, 1, "", "calc_dist2"], [27, 3, 1, "", "calc_dist_vector"], [27, 3, 1, "", "calc_dist_vectors"], [27, 3, 1, "", "calc_inv_dist"], [27, 3, 1, "", "calc_inv_dist2"], [27, 3, 1, "", "change_volume"], [27, 3, 1, "", "clone"], [27, 3, 1, "", "dimensions"], [27, 3, 1, "", "get_box_center"], [27, 3, 1, "", "get_copies_within"], [27, 3, 1, "", "get_images_within"], [27, 3, 1, "", "get_minimum_image"], [27, 3, 1, "", "get_random_point"], [27, 3, 1, "", "is_cartesian"], [27, 3, 1, "", "is_periodic"], [27, 3, 1, "", "max_coords"], [27, 3, 1, "", "maximum_cutoff"], [27, 3, 1, "", "min_coords"], [27, 3, 1, "", "minimum_distance"], [27, 3, 1, "", "set_dimensions"], [27, 3, 1, "", "set_volume"], [27, 3, 1, "", "to_string"], [27, 3, 1, "", "typename"], [27, 3, 1, "", "volume"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"acknowledg": [0, 39], "websit": 0, "host": 0, "third": 0, "parti": 0, "softwar": 0, "c": [0, 32, 33], "depend": 0, "qt": 0, "5": 0, "python": [0, 32, 33], "boost": 0, "py": 0, "cmake": 0, "anaconda": [0, 40], "thread": 0, "build": 0, "block": [0, 32], "tbb": 0, "gnu": 0, "scientif": 0, "librari": 0, "gsl": 0, "netcdf": 0, "openmm": 0, "regress": 0, "eig3": 0, "mersenn": 0, "twister": 0, "sse_mathfun": 0, "avx_mathfun": 0, "sse2neon": 0, "lap": 0, "linear": 0, "assign": 0, "problem": 0, "solver": 0, "md5": 0, "kabasch": 0, "fit": 0, "ap": 0, "ascii": 0, "plot": [0, 73], "lazy_import": 0, "rich": 0, "panda": [0, 73], "public": [1, 2, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27], "api": [1, 2, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 39], "document": [3, 33], "top": 3, "level": 3, "sub": [3, 22], "modul": [3, 21, 22], "sire": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 32, 39, 40, 48], "base": 4, "ca": 5, "io": 6, "math": 7, "mm": 8, "mol": 9, "search": [10, 30, 45, 54, 55, 56, 57, 58, 59, 63, 65], "stream": 11, "system": 12, "unit": [13, 73], "util": 14, "vol": 15, "changelog": [28, 39], "github": 28, "openbiosim": [28, 39], "januari": 28, "2023": 28, "current": 28, "1": [28, 40, 44], "0": [28, 32], "michellab": 28, "june": 28, "22nd": 28, "2015": 28, "googl": 28, "code": [28, 31, 32, 33, 49], "august": 28, "7th": 28, "2006": 28, "april": 28, "1st": 28, "local": 28, "subvers": 28, "februari": 28, "5th": 28, "2005": 28, "juli": 28, "25th": 28, "detail": [29, 39], "guid": [29, 33, 39, 41], "view": [30, 64, 68, 69, 70, 71, 72, 75], "identifi": [30, 54, 55, 56, 57, 58, 59, 60, 61, 62], "number": [30, 32, 54], "string": [30, 51], "comparison": [30, 33], "logic": 30, "oper": 30, "return": 30, "type": [30, 54, 55, 56, 57, 58, 63], "expans": 30, "contract": 30, "match": [30, 54], "all": [30, 32, 56, 57], "atom": [30, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 72, 76], "residu": [30, 55, 56, 57, 58, 59, 60, 61, 62, 66], "chain": [30, 56, 57, 58, 66], "etc": 30, "advanc": 30, "bond": [30, 59, 60, 61, 62, 68, 73, 77], "us": [30, 32, 40, 49, 64, 73, 76], "from": [30, 40, 49, 52], "chemic": 30, "element": [30, 54], "count": [30, 54, 55, 63], "i": 30, "e": 30, "charg": [30, 63], "mass": [30, 63], "approxim": 30, "properti": [30, 46, 63, 64, 65, 66, 67, 68, 69, 70, 71], "find": [30, 55, 56, 57, 58], "nth": 30, "distanc": [30, 72], "water": 30, "protein": 30, "molecul": [30, 49, 51, 58, 63, 67, 76], "creat": [30, 35, 73], "custom": [30, 33, 63], "token": [30, 63], "conduct": 31, "our": 31, "pledg": 31, "standard": 31, "respons": 31, "scope": 31, "enforc": 31, "attribut": [31, 33], "style": [32, 33], "indent": 32, "should": 32, "multipl": [32, 52], "4": [32, 47], "space": [32, 72], "tab": 32, "replac": 32, "curli": 32, "bracket": 32, "new": [32, 40], "line": 32, "class": 32, "name": [32, 54, 56, 57], "capit": 32, "letter": 32, "onli": 32, "A": 32, "za": 32, "z": 32, "9": 32, "function": [32, 64], "method": 32, "same": 32, "wai": 32, "except": [32, 33], "first": 32, "capitalis": 32, "variabl": 32, "member": 32, "data": [32, 73], "small": 32, "case": 32, "ar": 32, "No": [32, 40], "over": [32, 54, 55, 56, 57, 58, 73], "90": 32, "charact": 32, "long": 32, "alwai": 32, "fix": 32, "width": 32, "font": 32, "whitespac": 32, "make": [32, 72], "clean": 32, "speak": 32, "brace": 32, "pleas": 32, "abov": 32, "doxygen": 32, "comment": 32, "final": 32, "keep": 32, "an": [32, 40, 60, 62], "ey": 32, "here": 32, "more": 32, "rule": 32, "written": 32, "develop": 33, "": 33, "set": 33, "up": 33, "your": 33, "comput": 33, "virtual": 33, "environ": [33, 40], "guidelin": 33, "workflow": 33, "featur": [33, 38], "branch": 33, "test": 33, "run": [33, 40], "write": 33, "basic": 33, "float": 33, "point": [33, 72], "skip": 33, "parametr": 33, "continu": 33, "integr": 33, "deliveri": 33, "commit": 33, "thank": 33, "contribut": [34, 39], "packag": 35, "releas": 35, "defin": 35, "roadmap": 36, "contributor": 37, "quick": [39, 41], "start": [39, 41], "tutori": [39, 43], "support": [39, 53], "indic": 39, "tabl": [39, 73], "instal": 40, "web": 40, "browser": 40, "easi": 40, "conda": 40, "option": 40, "copi": 40, "mambaforg": 40, "2": [40, 45], "exist": 40, "miniconda": 40, "also": 40, "contain": [40, 64], "harder": 40, "compil": 40, "sourc": 40, "how": 42, "ask": 42, "help": 42, "part": [44, 45, 46, 47], "load": [44, 49, 52], "save": [44, 51, 76], "index": [45, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "3": 46, "molecular": 46, "measur": [47, 72, 73, 74, 75], "trajectori": [47, 73, 75, 76, 77], "movement": [47, 76, 77], "import": 48, "pdb": 49, "alphafold": 49, "uniprot": 49, "file": [49, 52, 53], "access": [49, 54, 59, 60, 61, 62, 64, 73], "simpl": 50, "format": 53, "symmetr": 53, "input": 53, "output": 53, "wildcard": 54, "glob": 54, "uniqu": [54, 55, 56, 57, 58, 59, 60, 61, 62], "iter": [54, 55, 56, 57, 58, 73], "segment": [57, 58, 66], "smart": 58, "term": 58, "angl": [60, 61, 62, 69, 72, 73, 77], "dihedr": [61, 70, 73, 77], "improp": [62, 71, 73], "coordin": 63, "within": 63, "conveni": 64, "via": 64, "appli": 64, "get": [64, 74], "cursor": [65, 76], "edit": 65, "delet": 65, "between": [72, 74], "arbitrai": 72, "against": 72, "length": 73, "chang": [73, 75], "column": 73, "perform": 73, "arbitrari": 73, "energi": [74, 75], "compon": 74, "calcul": [74, 75], "select": [74, 75], "interact": 74, "decompos": 74, "individu": [74, 77], "across": 75, "each": 75, "where": 75, "per": 75, "frame": [75, 76], "move": [76, 77], "translat": 76, "rotat": 76, "visualis": 76, "track": 77, "align": 77, "anchor": 77, "weight": 77}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Acknowledgements": [[0, "acknowledgements"], [39, "acknowledgements"]], "Website": [[0, "website"]], "Hosting": [[0, "hosting"]], "Third Party Software": [[0, "third-party-software"]], "C++ Dependencies": [[0, "c-dependencies"]], "Qt 5": [[0, "qt-5"]], "Python": [[0, "python"], [32, "python"]], "boost": [[0, "boost"]], "Py++": [[0, "py"]], "cmake": [[0, "cmake"]], "Anaconda": [[0, "anaconda"]], "Threading Building Blocks (tbb)": [[0, "threading-building-blocks-tbb"]], "Gnu Scientific Library (GSL)": [[0, "gnu-scientific-library-gsl"]], "NetCDF": [[0, "netcdf"]], "OpenMM": [[0, "openmm"]], "Regress": [[0, "regress"]], "eig3": [[0, "eig3"]], "Mersenne Twister": [[0, "mersenne-twister"]], "sse_mathfun": [[0, "sse-mathfun"]], "avx_mathfun": [[0, "avx-mathfun"]], "sse2neon": [[0, "sse2neon"]], "LAP (Linear Assignment Problem Solver)": [[0, "lap-linear-assignment-problem-solver"]], "MD5": [[0, "md5"]], "kabasch fitting": [[0, "kabasch-fitting"]], "Python Dependencies": [[0, "python-dependencies"]], "ap (ascii plot)": [[0, "ap-ascii-plot"]], "lazy_import": [[0, "lazy-import"]], "rich": [[0, "rich"]], "pandas": [[0, "pandas"]], "Public API": [[1, "module-sire.base"], [2, "module-sire.cas"], [16, "module-sire.io"], [17, "module-sire.maths"], [18, "module-sire.mm"], [19, "module-sire.mol"], [20, "module-sire.search"], [21, "module-sire"], [23, "module-sire.stream"], [24, "module-sire.system"], [25, "module-sire.units"], [26, "module-sire.utils"], [27, "module-sire.vol"]], "Documentation": [[3, "documentation"], [33, "documentation"]], "Top-level documentation": [[3, "top-level-documentation"]], "Sub-module documentation": [[3, "sub-module-documentation"]], "sire.base": [[4, "sire-base"]], "sire.cas": [[5, "sire-cas"]], "sire.io": [[6, "sire-io"]], "sire.maths": [[7, "sire-maths"]], "sire.mm": [[8, "sire-mm"]], "sire.mol": [[9, "sire-mol"]], "sire.search": [[10, "sire-search"]], "sire.stream": [[11, "sire-stream"]], "sire.system": [[12, "sire-system"]], "sire.units": [[13, "sire-units"]], "sire.utils": [[14, "sire-utils"]], "sire.vol": [[15, "sire-vol"]], "sire module": [[21, "sire-module"]], "Sub-modules": [[22, "sub-modules"]], "Changelog": [[28, "changelog"], [39, "changelog"]], "GitHub (OpenBioSim): January 2023 - current": [[28, "github-openbiosim-january-2023-current"]], "2023.1.0 - January 2023": [[28, "january-2023"]], "GitHub (michellab): June 22nd 2015 - January 2023": [[28, "github-michellab-june-22nd-2015-january-2023"]], "Google Code: August 7th 2006 - April 1st 2015": [[28, "google-code-august-7th-2006-april-1st-2015"]], "Local Subversion: February 5th 2005 - July 25th 2006": [[28, "local-subversion-february-5th-2005-july-25th-2006"]], "Detailed Guides": [[29, "detailed-guides"], [39, "detailed-guides"]], "Searching": [[30, "searching"], [63, "searching"]], "Views": [[30, "views"]], "Identifiers": [[30, "identifiers"]], "Numbers": [[30, "numbers"]], "Strings": [[30, "strings"]], "Comparisons": [[30, "comparisons"]], "Logical operators": [[30, "logical-operators"]], "Returned View Types": [[30, "returned-view-types"]], "Expansive (with) and Contractive (in) Searches": [[30, "expansive-with-and-contractive-in-searches"]], "Match All Atoms, Residues, Chains etc.": [[30, "match-all-atoms-residues-chains-etc"]], "Advanced with and in Searches": [[30, "advanced-with-and-in-searches"]], "Searching for Bonds using in, with, from and to": [[30, "searching-for-bonds-using-in-with-from-and-to"]], "Searching by Chemical Element": [[30, "searching-by-chemical-element"]], "Searching by Count (i.e. Number of Atoms)": [[30, "searching-by-count-i-e-number-of-atoms"]], "Searching by Charge or Mass": [[30, "searching-by-charge-or-mass"]], "Searching by Charge using Approximate Comparisons": [[30, "searching-by-charge-using-approximate-comparisons"]], "Searching by Property": [[30, "searching-by-property"]], "Finding the Nth View that Matches": [[30, "finding-the-nth-view-that-matches"]], "Searching by Distance": [[30, "searching-by-distance"]], "Searching for Water or Protein Molecules": [[30, "searching-for-water-or-protein-molecules"]], "Creating Custom Search Tokens": [[30, "creating-custom-search-tokens"]], "Code of Conduct": [[31, "code-of-conduct"]], "Our Pledge": [[31, "our-pledge"]], "Our Standards": [[31, "our-standards"]], "Our Responsibilities": [[31, "our-responsibilities"]], "Scope": [[31, "scope"]], "Enforcement": [[31, "enforcement"]], "Attribution": [[31, "attribution"]], "Coding Style": [[32, "coding-style"]], "C++": [[32, "c"]], "All indentation should be multiples of 4 spaces. All tabs should be replaced by 4 spaces": [[32, "all-indentation-should-be-multiples-of-4-spaces-all-tabs-should-be-replaced-by-4-spaces"]], "Curly brackets should be used for all blocks, with { on a new line": [[32, "curly-brackets-should-be-used-for-all-blocks-with-on-a-new-line"]], "Classes should be named using capital letters, using only the letters A-Za-z and numbers 0-9": [[32, "classes-should-be-named-using-capital-letters-using-only-the-letters-a-za-z-and-numbers-0-9"]], "Functions (methods) should be named in the same way as classes, except that the first letter should not be capitalised": [[32, "functions-methods-should-be-named-in-the-same-way-as-classes-except-that-the-first-letter-should-not-be-capitalised"]], "Variables (member data) should be named using all small case letters or numbers": [[32, "variables-member-data-should-be-named-using-all-small-case-letters-or-numbers"]], "Exceptions are named in the same way as variables": [[32, "exceptions-are-named-in-the-same-way-as-variables"]], "No line should be over 90 characters long": [[32, "no-line-should-be-over-90-characters-long"]], "Always code using a fixed-width font": [[32, "always-code-using-a-fixed-width-font"]], "Use whitespace to make the code clean": [[32, "use-whitespace-to-make-the-code-clean"]], "Speaking of braces, please use the above style": [[32, "speaking-of-braces-please-use-the-above-style"]], "Sire uses doxygen-style comments": [[32, "sire-uses-doxygen-style-comments"]], "Finally, keep an eye here as more rules will be written": [[32, "finally-keep-an-eye-here-as-more-rules-will-be-written"]], "Developer\u2019s guide": [[33, "developer-s-guide"]], "Setting up your computer": [[33, "setting-up-your-computer"]], "Virtual environments": [[33, "virtual-environments"]], "Python Coding Style": [[33, "python-coding-style"]], "C++ Coding Style": [[33, "c-coding-style"]], "Guidelines": [[33, "guidelines"]], "Workflow": [[33, "workflow"]], "Feature branches": [[33, "feature-branches"]], "Testing": [[33, "testing"]], "Running tests": [[33, "running-tests"]], "Writing tests": [[33, "writing-tests"]], "Basics": [[33, "basics"]], "Floating point comparisons": [[33, "floating-point-comparisons"]], "Skipping tests": [[33, "skipping-tests"]], "Parametrizing tests": [[33, "parametrizing-tests"]], "Testing exceptions": [[33, "testing-exceptions"]], "Custom attributes": [[33, "custom-attributes"]], "Continuous integration and delivery": [[33, "continuous-integration-and-delivery"]], "Committing": [[33, "committing"]], "Thanks": [[33, "thanks"]], "Contributing": [[34, "contributing"], [39, "contributing"]], "Packaging releases": [[35, "packaging-releases"]], "Defining a release": [[35, "defining-a-release"]], "Creating a release": [[35, "creating-a-release"]], "Roadmap": [[36, "roadmap"]], "Contributors": [[37, "contributors"]], "Features": [[38, "features"]], "OpenBioSim | Sire": [[39, "openbiosim-sire"]], "Quick Start": [[39, "quick-start"]], "Tutorial": [[39, "tutorial"], [43, "tutorial"]], "API": [[39, "api"]], "Support": [[39, "support"]], "Indices and tables": [[39, "indices-and-tables"]], "Installation": [[40, "installation"]], "No-installation - Run in a Web Browser": [[40, "no-installation-run-in-a-web-browser"]], "Easy installation - Run in a conda environment": [[40, "easy-installation-run-in-a-conda-environment"]], "Option 1. Installing a new copy of mambaforge": [[40, "option-1-installing-a-new-copy-of-mambaforge"]], "Option 2. Using an existing anaconda/miniconda install": [[40, "option-2-using-an-existing-anaconda-miniconda-install"]], "Installing sire into a new environment": [[40, "installing-sire-into-a-new-environment"]], "Also easy installation - Run in a container": [[40, "also-easy-installation-run-in-a-container"]], "Harder installation - Compile from source": [[40, "harder-installation-compile-from-source"]], "Quick Start Guide": [[41, "quick-start-guide"]], "How to ask for help": [[42, "how-to-ask-for-help"]], "Part 1 - Loading and Saving": [[44, "part-1-loading-and-saving"]], "Part 2 - Indexing and Searching": [[45, "part-2-indexing-and-searching"]], "Part 3 - Molecular Properties": [[46, "part-3-molecular-properties"]], "Part 4 - Measurement, Trajectories and Movement": [[47, "part-4-measurement-trajectories-and-movement"]], "Importing sire": [[48, "importing-sire"]], "Loading a molecule": [[49, "loading-a-molecule"]], "Loading using a PDB code": [[49, "loading-using-a-pdb-code"]], "Loading from Alphafold using a Uniprot code": [[49, "loading-from-alphafold-using-a-uniprot-code"]], "Loading from files": [[49, "loading-from-files"]], "Accessing the molecules": [[49, "accessing-the-molecules"]], "Simple indexing": [[50, "simple-indexing"]], "Saving a molecule": [[51, "saving-a-molecule"]], "Saving to strings": [[51, "saving-to-strings"]], "Loading from multiple files": [[52, "loading-from-multiple-files"]], "Supported file formats": [[53, "supported-file-formats"]], "Symmetric Input / Output": [[53, "symmetric-input-output"]], "Indexing Atoms": [[54, "indexing-atoms"]], "Accessing by name": [[54, "accessing-by-name"]], "Searching by number": [[54, "searching-by-number"]], "Searching by name": [[54, "searching-by-name"]], "Searching by wildcards (glob matching)": [[54, "searching-by-wildcards-glob-matching"]], "Searching by element": [[54, "searching-by-element"]], "Uniquely identifying atoms": [[54, "uniquely-identifying-atoms"]], "Atom identifying types": [[54, "atom-identifying-types"]], "Iterating over atoms": [[54, "iterating-over-atoms"]], "Counting atoms": [[54, "counting-atoms"]], "Indexing Residues": [[55, "indexing-residues"]], "Searching for residues": [[55, "searching-for-residues"]], "Finding the atoms in a residue": [[55, "finding-the-atoms-in-a-residue"]], "Uniquely identifying a residue": [[55, "uniquely-identifying-a-residue"]], "Residue identifying types": [[55, "residue-identifying-types"]], "Iterating over residues": [[55, "iterating-over-residues"]], "Counting residues": [[55, "counting-residues"]], "Indexing Chains": [[56, "indexing-chains"]], "Search for chains": [[56, "search-for-chains"]], "Finding the residues in a chain": [[56, "finding-the-residues-in-a-chain"]], "Finding the atoms in a chain": [[56, "finding-the-atoms-in-a-chain"]], "Uniquely identifying a chain": [[56, "uniquely-identifying-a-chain"]], "Chain identifying types": [[56, "chain-identifying-types"]], "Iterating over chains": [[56, "iterating-over-chains"]], "Finding all chain names": [[56, "finding-all-chain-names"]], "Indexing Segments": [[57, "indexing-segments"]], "Search for segments": [[57, "search-for-segments"]], "Finding the atoms in a segment": [[57, "finding-the-atoms-in-a-segment"]], "Finding the atoms, residues or chains in a segment": [[57, "finding-the-atoms-residues-or-chains-in-a-segment"]], "Uniquely identifying a segment": [[57, "uniquely-identifying-a-segment"]], "Segment identifying types": [[57, "segment-identifying-types"]], "Iterating over segments": [[57, "iterating-over-segments"]], "Finding all segment names": [[57, "finding-all-segment-names"]], "Indexing Molecules": [[58, "indexing-molecules"]], "Search for molecules": [[58, "search-for-molecules"]], "Finding atoms, residues, chains and segments in a molecule": [[58, "finding-atoms-residues-chains-and-segments-in-a-molecule"]], "Uniquely identifying a molecule": [[58, "uniquely-identifying-a-molecule"]], "Molecule identifying types": [[58, "molecule-identifying-types"]], "Iterating over molecules": [[58, "iterating-over-molecules"]], "Smart search terms": [[58, "smart-search-terms"]], "Indexing Bonds": [[59, "indexing-bonds"]], "Accessing bonds by atom": [[59, "accessing-bonds-by-atom"]], "Accessing bonds by residue": [[59, "accessing-bonds-by-residue"]], "Searching for bonds": [[59, "searching-for-bonds"]], "Uniquely identifying a bond": [[59, "uniquely-identifying-a-bond"]], "Indexing Angles": [[60, "indexing-angles"]], "Accessing angles by atom or bond": [[60, "accessing-angles-by-atom-or-bond"]], "Accessing angles by residue": [[60, "accessing-angles-by-residue"]], "Uniquely identifying an angle": [[60, "uniquely-identifying-an-angle"]], "Indexing Dihedrals": [[61, "indexing-dihedrals"]], "Accessing dihedrals by atom, bond or angle": [[61, "accessing-dihedrals-by-atom-bond-or-angle"]], "Accessing dihedrals by residue": [[61, "accessing-dihedrals-by-residue"]], "Uniquely identifying a dihedral": [[61, "uniquely-identifying-a-dihedral"]], "Indexing Impropers": [[62, "indexing-impropers"]], "Accessing impropers by atom, bond or angle": [[62, "accessing-impropers-by-atom-bond-or-angle"]], "Accessing impropers by residue": [[62, "accessing-impropers-by-residue"]], "Uniquely identifying an improper": [[62, "uniquely-identifying-an-improper"]], "Searching by count": [[63, "searching-by-count"]], "Searching by property": [[63, "searching-by-property"], [65, "searching-by-property"]], "Searching by mass": [[63, "searching-by-mass"]], "Searching by charge": [[63, "searching-by-charge"]], "Searching by coordinates": [[63, "searching-by-coordinates"]], "Searching by molecule type": [[63, "searching-by-molecule-type"]], "Searching by custom tokens": [[63, "searching-by-custom-tokens"]], "Indexing within searches": [[63, "indexing-within-searches"]], "Atom Properties": [[64, "atom-properties"]], "Convenience functions": [[64, "convenience-functions"]], "Accessing atom properties via views": [[64, "accessing-atom-properties-via-views"]], "Using apply to get the properties of views in a container": [[64, "using-apply-to-get-the-properties-of-views-in-a-container"]], "Cursors and Editing Properties": [[65, "cursors-and-editing-properties"]], "Deleting properties": [[65, "deleting-properties"]], "Residue, Chain and Segment Properties": [[66, "residue-chain-and-segment-properties"]], "Residue properties": [[66, "residue-properties"]], "Chain properties": [[66, "chain-properties"]], "Segment properties": [[66, "segment-properties"]], "Molecule Properties": [[67, "molecule-properties"]], "Bond Views and Properties": [[68, "bond-views-and-properties"]], "Bond views": [[68, "bond-views"]], "Bond properties": [[68, "bond-properties"]], "Angle Views and Properties": [[69, "angle-views-and-properties"]], "Angle views": [[69, "angle-views"]], "Angle properties": [[69, "angle-properties"]], "Dihedral Views and Properties": [[70, "dihedral-views-and-properties"]], "Dihedral views": [[70, "dihedral-views"]], "Dihedral properties": [[70, "dihedral-properties"]], "Improper Views and Properties": [[71, "improper-views-and-properties"]], "Improper views": [[71, "improper-views"]], "Improper properties": [[71, "improper-properties"]], "Measuring Distances and Angles": [[72, "measuring-distances-and-angles"]], "Making measurements between atoms": [[72, "making-measurements-between-atoms"]], "Making measurements between arbitray views": [[72, "making-measurements-between-arbitray-views"]], "Measuring against points in space": [[72, "measuring-against-points-in-space"]], "Measuring Trajectories": [[73, "measuring-trajectories"]], "Iterating over trajectories": [[73, "iterating-over-trajectories"]], "Measuring bond lengths over a trajectory": [[73, "measuring-bond-lengths-over-a-trajectory"]], "Creating tables of measurements using pandas": [[73, "creating-tables-of-measurements-using-pandas"]], "Changing the units of measurement": [[73, "changing-the-units-of-measurement"]], "Accessing measurement data by column": [[73, "accessing-measurement-data-by-column"]], "Plotting measurements": [[73, "plotting-measurements"]], "Measuring angles, dihedrals and impropers": [[73, "measuring-angles-dihedrals-and-impropers"]], "Performing arbitrary measurements": [[73, "performing-arbitrary-measurements"]], "Measuring Energies": [[74, "measuring-energies"]], "Getting energy components": [[74, "getting-energy-components"]], "Calculating energies of selections": [[74, "calculating-energies-of-selections"], [75, "calculating-energies-of-selections"]], "Calculating interaction energies between selections": [[74, "calculating-interaction-energies-between-selections"]], "Decomposing into individual energies": [[74, "decomposing-into-individual-energies"]], "Decomposing into interaction energies": [[74, "decomposing-into-interaction-energies"]], "Measuring Energies Across Trajectories": [[75, "measuring-energies-across-trajectories"]], "Calculating energies for each view in a selection": [[75, "calculating-energies-for-each-view-in-a-selection"]], "Calculating energies where the selection changes per frame": [[75, "calculating-energies-where-the-selection-changes-per-frame"]], "Moving Atoms and Molecules": [[76, "moving-atoms-and-molecules"]], "Translation using a Cursor": [[76, "translation-using-a-cursor"]], "Rotation using a Cursor": [[76, "rotation-using-a-cursor"]], "Visualising movement by saving trajectory frames": [[76, "visualising-movement-by-saving-trajectory-frames"]], "Moving Bonds, Angles and Dihedrals": [[77, "moving-bonds-angles-and-dihedrals"]], "Moving Bonds": [[77, "moving-bonds"]], "Tracking movement with trajectories": [[77, "tracking-movement-with-trajectories"]], "Moving Angles": [[77, "moving-angles"]], "Moving Dihedrals": [[77, "moving-dihedrals"]], "Moving individual dihedrals": [[77, "moving-individual-dihedrals"]], "Aligning, Anchoring and Weighting": [[77, "aligning-anchoring-and-weighting"]]}, "indexentries": {"propertymap (class in sire.base)": [[1, "sire.base.PropertyMap"]], "assign() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.assign"]], "clone() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.clone"]], "create_map() (in module sire.base)": [[1, "sire.base.create_map"]], "is_default() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.is_default"]], "merge() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.merge"]], "module": [[1, "module-sire.base"], [2, "module-sire.cas"], [16, "module-sire.io"], [17, "module-sire.maths"], [18, "module-sire.mm"], [19, "module-sire.mol"], [20, "module-sire.search"], [21, "module-sire"], [23, "module-sire.stream"], [24, "module-sire.system"], [25, "module-sire.units"], [26, "module-sire.utils"], [27, "module-sire.vol"]], "sire.base": [[1, "module-sire.base"]], "specified() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.specified"]], "to_dict() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.to_dict"]], "to_string() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.to_string"]], "typename() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.typename"]], "what() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.what"]], "wrap() (in module sire.base)": [[1, "sire.base.wrap"]], "expression (class in sire.cas)": [[2, "sire.cas.Expression"]], "symbol (class in sire.cas)": [[2, "sire.cas.Symbol"]], "add() (sire.cas.expression method)": [[2, "sire.cas.Expression.add"]], "assign() (sire.cas.expression method)": [[2, "sire.cas.Expression.assign"]], "assign() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.assign"]], "base() (sire.cas.expression method)": [[2, "sire.cas.Expression.base"]], "children() (sire.cas.expression method)": [[2, "sire.cas.Expression.children"]], "children() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.children"]], "clone() (sire.cas.expression method)": [[2, "sire.cas.Expression.clone"]], "clone() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.clone"]], "conjugate() (sire.cas.expression method)": [[2, "sire.cas.Expression.conjugate"]], "cubed() (sire.cas.expression method)": [[2, "sire.cas.Expression.cubed"]], "diff() (sire.cas.expression method)": [[2, "sire.cas.Expression.diff"]], "differentiate() (sire.cas.expression method)": [[2, "sire.cas.Expression.differentiate"]], "differentiate() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.differentiate"]], "divide() (sire.cas.expression method)": [[2, "sire.cas.Expression.divide"]], "evaluate() (sire.cas.expression method)": [[2, "sire.cas.Expression.evaluate"]], "evaluate() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.evaluate"]], "expand() (sire.cas.expression method)": [[2, "sire.cas.Expression.expand"]], "expand() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.expand"]], "factor() (sire.cas.expression method)": [[2, "sire.cas.Expression.factor"]], "functions() (sire.cas.expression method)": [[2, "sire.cas.Expression.functions"]], "functions() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.functions"]], "hash() (sire.cas.expression method)": [[2, "sire.cas.Expression.hash"]], "hash() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.hash"]], "id() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.id"]], "integ() (sire.cas.expression method)": [[2, "sire.cas.Expression.integ"]], "integrate() (sire.cas.expression method)": [[2, "sire.cas.Expression.integrate"]], "integrate() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.integrate"]], "invert() (sire.cas.expression method)": [[2, "sire.cas.Expression.invert"]], "is_complex() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_complex"]], "is_compound() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_compound"]], "is_constant() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_constant"]], "is_constant() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.is_constant"]], "is_function() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_function"]], "is_function() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.is_function"]], "is_null() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.is_null"]], "is_zero() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_zero"]], "lam (in module sire.cas)": [[2, "sire.cas.lam"]], "multiply() (sire.cas.expression method)": [[2, "sire.cas.Expression.multiply"]], "negate() (sire.cas.expression method)": [[2, "sire.cas.Expression.negate"]], "pow() (sire.cas.expression method)": [[2, "sire.cas.Expression.pow"]], "root() (sire.cas.expression method)": [[2, "sire.cas.Expression.root"]], "series() (sire.cas.expression method)": [[2, "sire.cas.Expression.series"]], "simplify() (sire.cas.expression method)": [[2, "sire.cas.Expression.simplify"]], "sire.cas": [[2, "module-sire.cas"]], "squared() (sire.cas.expression method)": [[2, "sire.cas.Expression.squared"]], "substitute() (sire.cas.expression method)": [[2, "sire.cas.Expression.substitute"]], "substitute() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.substitute"]], "subtract() (sire.cas.expression method)": [[2, "sire.cas.Expression.subtract"]], "symbols() (sire.cas.expression method)": [[2, "sire.cas.Expression.symbols"]], "symbols() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.symbols"]], "to_open_m_m_string() (sire.cas.expression method)": [[2, "sire.cas.Expression.to_open_m_m_string"]], "to_string() (sire.cas.expression method)": [[2, "sire.cas.Expression.to_string"]], "to_string() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.to_string"]], "typename() (sire.cas.expression method)": [[2, "sire.cas.Expression.typename"]], "typename() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.typename"]], "what() (sire.cas.expression method)": [[2, "sire.cas.Expression.what"]], "what() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.what"]], "x (in module sire.cas)": [[2, "sire.cas.x"]], "y (in module sire.cas)": [[2, "sire.cas.y"]], "get_coords_array() (in module sire.io)": [[16, "sire.io.get_coords_array"]], "sire.io": [[16, "module-sire.io"]], "matrix (class in sire.maths)": [[17, "sire.maths.Matrix"]], "sphere (class in sire.maths)": [[17, "sire.maths.Sphere"]], "torsion (class in sire.maths)": [[17, "sire.maths.Torsion"]], "triangle (class in sire.maths)": [[17, "sire.maths.Triangle"]], "vector (class in sire.maths)": [[17, "sire.maths.Vector"]], "angle() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.angle"]], "angle() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.angle"]], "angle0() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.angle0"]], "angle1() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.angle1"]], "angle2() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.angle2"]], "assign() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.assign"]], "at() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.at"]], "at() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.at"]], "at() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.at"]], "checked_offset() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.checked_offset"]], "clone() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.clone"]], "clone() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.clone"]], "clone() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.clone"]], "column0() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.column0"]], "column1() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.column1"]], "column2() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.column2"]], "count() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.count"]], "count() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.count"]], "covariance() (sire.maths.matrix static method)": [[17, "sire.maths.Matrix.covariance"]], "create_quaternion() (in module sire.maths)": [[17, "sire.maths.create_quaternion"]], "determinant() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.determinant"]], "diagonalise() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.diagonalise"]], "enforce_symmetric() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.enforce_symmetric"]], "get_principal_axes() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.get_principal_axes"]], "identity() (sire.maths.matrix static method)": [[17, "sire.maths.Matrix.identity"]], "improper_angle() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.improper_angle"]], "inverse() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.inverse"]], "is_identity() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.is_identity"]], "is_symmetric() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.is_symmetric"]], "line0() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.line0"]], "line03() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.line03"]], "line1() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.line1"]], "line12() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.line12"]], "line2() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.line2"]], "offset() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.offset"]], "pi (in module sire.maths)": [[17, "sire.maths.pi"]], "point() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.point"]], "point() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.point"]], "row0() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.row0"]], "row1() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.row1"]], "row2() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.row2"]], "set_to_identity() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.set_to_identity"]], "single_value_decomposition() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.single_value_decomposition"]], "sire.maths": [[17, "module-sire.maths"]], "svd() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.svd"]], "to_string() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.to_string"]], "to_string() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.to_string"]], "to_string() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.to_string"]], "trace() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.trace"]], "transpose() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.transpose"]], "triangle1() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.triangle1"]], "triangle2() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.triangle2"]], "typename() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.typename"]], "typename() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.typename"]], "typename() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.typename"]], "vector() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.vector"]], "vector0() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.vector0"]], "vector03() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.vector03"]], "vector1() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.vector1"]], "vector12() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.vector12"]], "vector2() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.vector2"]], "what() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.what"]], "what() (sire.maths.torsion method)": [[17, "sire.maths.Torsion.what"]], "what() (sire.maths.triangle method)": [[17, "sire.maths.Triangle.what"]], "xx() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.xx"]], "xy() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.xy"]], "xz() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.xz"]], "yx() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.yx"]], "yy() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.yy"]], "yz() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.yz"]], "zero() (sire.maths.matrix static method)": [[17, "sire.maths.Matrix.zero"]], "zx() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.zx"]], "zy() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.zy"]], "zz() (sire.maths.matrix method)": [[17, "sire.maths.Matrix.zz"]], "angle (class in sire.mm)": [[18, "sire.mm.Angle"]], "bond (class in sire.mm)": [[18, "sire.mm.Bond"]], "dihedral (class in sire.mm)": [[18, "sire.mm.Dihedral"]], "improper (class in sire.mm)": [[18, "sire.mm.Improper"]], "selectorangle (class in sire.mm)": [[18, "sire.mm.SelectorAngle"]], "selectorbond (class in sire.mm)": [[18, "sire.mm.SelectorBond"]], "selectordihedral (class in sire.mm)": [[18, "sire.mm.SelectorDihedral"]], "selectorimproper (class in sire.mm)": [[18, "sire.mm.SelectorImproper"]], "selectormangle (class in sire.mm)": [[18, "sire.mm.SelectorMAngle"]], "selectormbond (class in sire.mm)": [[18, "sire.mm.SelectorMBond"]], "selectormdihedral (class in sire.mm)": [[18, "sire.mm.SelectorMDihedral"]], "selectormimproper (class in sire.mm)": [[18, "sire.mm.SelectorMImproper"]], "add() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.add"]], "add() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.add"]], "add() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.add"]], "add() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.add"]], "add() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.add"]], "add() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.add"]], "add() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.add"]], "add() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.add"]], "apply() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.apply"]], "apply() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.apply"]], "apply() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.apply"]], "apply() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.apply"]], "apply_reduce() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.apply_reduce"]], "apply_reduce() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.apply_reduce"]], "apply_reduce() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.apply_reduce"]], "apply_reduce() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.apply_reduce"]], "assert_contains() (sire.mm.angle method)": [[18, "sire.mm.Angle.assert_contains"]], "assert_contains() (sire.mm.bond method)": [[18, "sire.mm.Bond.assert_contains"]], "assert_contains() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.assert_contains"]], "assert_contains() (sire.mm.improper method)": [[18, "sire.mm.Improper.assert_contains"]], "assert_contains() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.assert_contains"]], "assert_contains() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.assert_contains"]], "assert_contains() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.assert_contains"]], "assert_contains() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.assert_contains"]], "assert_has_metadata() (sire.mm.angle method)": [[18, "sire.mm.Angle.assert_has_metadata"]], "assert_has_metadata() (sire.mm.bond method)": [[18, "sire.mm.Bond.assert_has_metadata"]], "assert_has_metadata() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.assert_has_metadata"]], "assert_has_metadata() (sire.mm.improper method)": [[18, "sire.mm.Improper.assert_has_metadata"]], "assert_has_metadata() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.assert_has_metadata"]], "assert_has_metadata() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.assert_has_metadata"]], "assert_has_metadata() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.assert_has_metadata"]], "assert_has_metadata() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.assert_has_metadata"]], "assert_has_property() (sire.mm.angle method)": [[18, "sire.mm.Angle.assert_has_property"]], "assert_has_property() (sire.mm.bond method)": [[18, "sire.mm.Bond.assert_has_property"]], "assert_has_property() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.assert_has_property"]], "assert_has_property() (sire.mm.improper method)": [[18, "sire.mm.Improper.assert_has_property"]], "assert_has_property() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.assert_has_property"]], "assert_has_property() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.assert_has_property"]], "assert_has_property() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.assert_has_property"]], "assert_has_property() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.assert_has_property"]], "assert_same_molecule() (sire.mm.angle method)": [[18, "sire.mm.Angle.assert_same_molecule"]], "assert_same_molecule() (sire.mm.bond method)": [[18, "sire.mm.Bond.assert_same_molecule"]], "assert_same_molecule() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.assert_same_molecule"]], "assert_same_molecule() (sire.mm.improper method)": [[18, "sire.mm.Improper.assert_same_molecule"]], "assert_same_molecule() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.assert_same_molecule"]], "assert_same_molecule() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.assert_same_molecule"]], "assert_same_molecule() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.assert_same_molecule"]], "assert_same_molecule() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.assert_same_molecule"]], "assign() (sire.mm.angle method)": [[18, "sire.mm.Angle.assign"]], "assign() (sire.mm.bond method)": [[18, "sire.mm.Bond.assign"]], "assign() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.assign"]], "assign() (sire.mm.improper method)": [[18, "sire.mm.Improper.assign"]], "assign() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.assign"]], "assign() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.assign"]], "assign() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.assign"]], "assign() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.assign"]], "assign() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.assign"]], "assign() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.assign"]], "assign() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.assign"]], "assign() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.assign"]], "atom() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.atom"]], "atom() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.atom"]], "atom() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.atom"]], "atom() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.atom"]], "atom0() (sire.mm.angle method)": [[18, "sire.mm.Angle.atom0"]], "atom0() (sire.mm.bond method)": [[18, "sire.mm.Bond.atom0"]], "atom0() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.atom0"]], "atom0() (sire.mm.improper method)": [[18, "sire.mm.Improper.atom0"]], "atom1() (sire.mm.angle method)": [[18, "sire.mm.Angle.atom1"]], "atom1() (sire.mm.bond method)": [[18, "sire.mm.Bond.atom1"]], "atom1() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.atom1"]], "atom1() (sire.mm.improper method)": [[18, "sire.mm.Improper.atom1"]], "atom2() (sire.mm.angle method)": [[18, "sire.mm.Angle.atom2"]], "atom2() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.atom2"]], "atom2() (sire.mm.improper method)": [[18, "sire.mm.Improper.atom2"]], "atom3() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.atom3"]], "atom3() (sire.mm.improper method)": [[18, "sire.mm.Improper.atom3"]], "atoms() (sire.mm.angle method)": [[18, "sire.mm.Angle.atoms"]], "atoms() (sire.mm.bond method)": [[18, "sire.mm.Bond.atoms"]], "atoms() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.atoms"]], "atoms() (sire.mm.improper method)": [[18, "sire.mm.Improper.atoms"]], "atoms() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.atoms"]], "atoms() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.atoms"]], "atoms() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.atoms"]], "atoms() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.atoms"]], "chain() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.chain"]], "chain() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.chain"]], "chain() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.chain"]], "chain() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.chain"]], "chains() (sire.mm.angle method)": [[18, "sire.mm.Angle.chains"]], "chains() (sire.mm.bond method)": [[18, "sire.mm.Bond.chains"]], "chains() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.chains"]], "chains() (sire.mm.improper method)": [[18, "sire.mm.Improper.chains"]], "chains() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.chains"]], "chains() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.chains"]], "chains() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.chains"]], "chains() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.chains"]], "clone() (sire.mm.angle method)": [[18, "sire.mm.Angle.clone"]], "clone() (sire.mm.bond method)": [[18, "sire.mm.Bond.clone"]], "clone() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.clone"]], "clone() (sire.mm.improper method)": [[18, "sire.mm.Improper.clone"]], "clone() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.clone"]], "clone() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.clone"]], "clone() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.clone"]], "clone() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.clone"]], "clone() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.clone"]], "clone() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.clone"]], "clone() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.clone"]], "clone() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.clone"]], "const_data() (sire.mm.angle method)": [[18, "sire.mm.Angle.const_data"]], "const_data() (sire.mm.bond method)": [[18, "sire.mm.Bond.const_data"]], "const_data() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.const_data"]], "const_data() (sire.mm.improper method)": [[18, "sire.mm.Improper.const_data"]], "const_data() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.const_data"]], "const_data() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.const_data"]], "const_data() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.const_data"]], "const_data() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.const_data"]], "count() (sire.mm.angle method)": [[18, "sire.mm.Angle.count"]], "count() (sire.mm.bond method)": [[18, "sire.mm.Bond.count"]], "count() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.count"]], "count() (sire.mm.improper method)": [[18, "sire.mm.Improper.count"]], "count() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.count"]], "count() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.count"]], "count() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.count"]], "count() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.count"]], "count() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.count"]], "count() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.count"]], "count() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.count"]], "count() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.count"]], "cursor() (sire.mm.angle method)": [[18, "sire.mm.Angle.cursor"]], "cursor() (sire.mm.bond method)": [[18, "sire.mm.Bond.cursor"]], "cursor() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.cursor"]], "cursor() (sire.mm.improper method)": [[18, "sire.mm.Improper.cursor"]], "cursor() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.cursor"]], "cursor() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.cursor"]], "cursor() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.cursor"]], "cursor() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.cursor"]], "cutgroup() (sire.mm.angle method)": [[18, "sire.mm.Angle.cutgroup"]], "cutgroup() (sire.mm.bond method)": [[18, "sire.mm.Bond.cutgroup"]], "cutgroup() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.cutgroup"]], "cutgroup() (sire.mm.improper method)": [[18, "sire.mm.Improper.cutgroup"]], "cutgroup() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.cutgroup"]], "cutgroup() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.cutgroup"]], "cutgroup() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.cutgroup"]], "cutgroup() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.cutgroup"]], "cutgroup() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.cutgroup"]], "cutgroup() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.cutgroup"]], "cutgroup() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.cutgroup"]], "cutgroup() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.cutgroup"]], "cutgroups() (sire.mm.angle method)": [[18, "sire.mm.Angle.cutgroups"]], "cutgroups() (sire.mm.bond method)": [[18, "sire.mm.Bond.cutgroups"]], "cutgroups() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.cutgroups"]], "cutgroups() (sire.mm.improper method)": [[18, "sire.mm.Improper.cutgroups"]], "cutgroups() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.cutgroups"]], "cutgroups() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.cutgroups"]], "cutgroups() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.cutgroups"]], "cutgroups() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.cutgroups"]], "cutgroups() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.cutgroups"]], "cutgroups() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.cutgroups"]], "cutgroups() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.cutgroups"]], "cutgroups() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.cutgroups"]], "delete_frame() (sire.mm.angle method)": [[18, "sire.mm.Angle.delete_frame"]], "delete_frame() (sire.mm.bond method)": [[18, "sire.mm.Bond.delete_frame"]], "delete_frame() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.delete_frame"]], "delete_frame() (sire.mm.improper method)": [[18, "sire.mm.Improper.delete_frame"]], "delete_frame() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.delete_frame"]], "delete_frame() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.delete_frame"]], "delete_frame() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.delete_frame"]], "delete_frame() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.delete_frame"]], "delete_frame() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.delete_frame"]], "delete_frame() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.delete_frame"]], "delete_frame() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.delete_frame"]], "delete_frame() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.delete_frame"]], "energies() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.energies"]], "energies() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.energies"]], "energies() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.energies"]], "energies() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.energies"]], "energies() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.energies"]], "energies() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.energies"]], "energies() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.energies"]], "energies() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.energies"]], "energy() (sire.mm.angle method)": [[18, "sire.mm.Angle.energy"]], "energy() (sire.mm.bond method)": [[18, "sire.mm.Bond.energy"]], "energy() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.energy"]], "energy() (sire.mm.improper method)": [[18, "sire.mm.Improper.energy"]], "energy() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.energy"]], "energy() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.energy"]], "energy() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.energy"]], "energy() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.energy"]], "energy() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.energy"]], "energy() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.energy"]], "energy() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.energy"]], "energy() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.energy"]], "evaluate() (sire.mm.angle method)": [[18, "sire.mm.Angle.evaluate"]], "evaluate() (sire.mm.bond method)": [[18, "sire.mm.Bond.evaluate"]], "evaluate() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.evaluate"]], "evaluate() (sire.mm.improper method)": [[18, "sire.mm.Improper.evaluate"]], "evaluate() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.evaluate"]], "evaluate() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.evaluate"]], "evaluate() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.evaluate"]], "evaluate() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.evaluate"]], "evaluate() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.evaluate"]], "evaluate() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.evaluate"]], "evaluate() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.evaluate"]], "evaluate() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.evaluate"]], "has_metadata() (sire.mm.angle method)": [[18, "sire.mm.Angle.has_metadata"]], "has_metadata() (sire.mm.bond method)": [[18, "sire.mm.Bond.has_metadata"]], "has_metadata() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.has_metadata"]], "has_metadata() (sire.mm.improper method)": [[18, "sire.mm.Improper.has_metadata"]], "has_metadata() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.has_metadata"]], "has_metadata() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.has_metadata"]], "has_metadata() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.has_metadata"]], "has_metadata() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.has_metadata"]], "has_metadata() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.has_metadata"]], "has_metadata() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.has_metadata"]], "has_metadata() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.has_metadata"]], "has_metadata() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.has_metadata"]], "has_property() (sire.mm.angle method)": [[18, "sire.mm.Angle.has_property"]], "has_property() (sire.mm.bond method)": [[18, "sire.mm.Bond.has_property"]], "has_property() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.has_property"]], "has_property() (sire.mm.improper method)": [[18, "sire.mm.Improper.has_property"]], "has_property() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.has_property"]], "has_property() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.has_property"]], "has_property() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.has_property"]], "has_property() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.has_property"]], "has_property() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.has_property"]], "has_property() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.has_property"]], "has_property() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.has_property"]], "has_property() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.has_property"]], "id() (sire.mm.angle method)": [[18, "sire.mm.Angle.id"]], "id() (sire.mm.bond method)": [[18, "sire.mm.Bond.id"]], "id() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.id"]], "id() (sire.mm.improper method)": [[18, "sire.mm.Improper.id"]], "ids() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.ids"]], "ids() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.ids"]], "ids() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.ids"]], "ids() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.ids"]], "ids() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.ids"]], "ids() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.ids"]], "ids() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.ids"]], "ids() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.ids"]], "intersection() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.intersection"]], "intersection() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.intersection"]], "intersection() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.intersection"]], "intersection() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.intersection"]], "intersection() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.intersection"]], "intersection() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.intersection"]], "intersection() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.intersection"]], "intersection() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.intersection"]], "invert() (sire.mm.angle method)": [[18, "sire.mm.Angle.invert"]], "invert() (sire.mm.bond method)": [[18, "sire.mm.Bond.invert"]], "invert() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.invert"]], "invert() (sire.mm.improper method)": [[18, "sire.mm.Improper.invert"]], "invert() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.invert"]], "invert() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.invert"]], "invert() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.invert"]], "invert() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.invert"]], "invert() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.invert"]], "invert() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.invert"]], "invert() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.invert"]], "invert() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.invert"]], "is_empty() (sire.mm.angle method)": [[18, "sire.mm.Angle.is_empty"]], "is_empty() (sire.mm.bond method)": [[18, "sire.mm.Bond.is_empty"]], "is_empty() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.is_empty"]], "is_empty() (sire.mm.improper method)": [[18, "sire.mm.Improper.is_empty"]], "is_empty() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.is_empty"]], "is_empty() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.is_empty"]], "is_empty() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.is_empty"]], "is_empty() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.is_empty"]], "is_empty() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.is_empty"]], "is_empty() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.is_empty"]], "is_empty() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.is_empty"]], "is_empty() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.is_empty"]], "is_null() (sire.mm.angle method)": [[18, "sire.mm.Angle.is_null"]], "is_null() (sire.mm.bond method)": [[18, "sire.mm.Bond.is_null"]], "is_null() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.is_null"]], "is_null() (sire.mm.improper method)": [[18, "sire.mm.Improper.is_null"]], "is_null() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.is_null"]], "is_null() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.is_null"]], "is_null() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.is_null"]], "is_null() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.is_null"]], "is_same_molecule() (sire.mm.angle method)": [[18, "sire.mm.Angle.is_same_molecule"]], "is_same_molecule() (sire.mm.bond method)": [[18, "sire.mm.Bond.is_same_molecule"]], "is_same_molecule() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.is_same_molecule"]], "is_same_molecule() (sire.mm.improper method)": [[18, "sire.mm.Improper.is_same_molecule"]], "is_same_molecule() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.is_same_molecule"]], "is_same_molecule() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.is_same_molecule"]], "is_same_molecule() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.is_same_molecule"]], "is_same_molecule() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.is_same_molecule"]], "is_selector() (sire.mm.angle method)": [[18, "sire.mm.Angle.is_selector"]], "is_selector() (sire.mm.bond method)": [[18, "sire.mm.Bond.is_selector"]], "is_selector() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.is_selector"]], "is_selector() (sire.mm.improper method)": [[18, "sire.mm.Improper.is_selector"]], "is_selector() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.is_selector"]], "is_selector() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.is_selector"]], "is_selector() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.is_selector"]], "is_selector() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.is_selector"]], "is_selector() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.is_selector"]], "is_selector() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.is_selector"]], "is_selector() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.is_selector"]], "is_selector() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.is_selector"]], "length() (sire.mm.bond method)": [[18, "sire.mm.Bond.length"]], "lengths() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.lengths"]], "lengths() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.lengths"]], "load_frame() (sire.mm.angle method)": [[18, "sire.mm.Angle.load_frame"]], "load_frame() (sire.mm.bond method)": [[18, "sire.mm.Bond.load_frame"]], "load_frame() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.load_frame"]], "load_frame() (sire.mm.improper method)": [[18, "sire.mm.Improper.load_frame"]], "load_frame() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.load_frame"]], "load_frame() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.load_frame"]], "load_frame() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.load_frame"]], "load_frame() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.load_frame"]], "load_frame() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.load_frame"]], "load_frame() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.load_frame"]], "load_frame() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.load_frame"]], "load_frame() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.load_frame"]], "measure() (sire.mm.angle method)": [[18, "sire.mm.Angle.measure"]], "measure() (sire.mm.bond method)": [[18, "sire.mm.Bond.measure"]], "measure() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.measure"]], "measure() (sire.mm.improper method)": [[18, "sire.mm.Improper.measure"]], "measures() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.measures"]], "measures() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.measures"]], "measures() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.measures"]], "measures() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.measures"]], "measures() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.measures"]], "measures() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.measures"]], "measures() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.measures"]], "measures() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.measures"]], "metadata_keys() (sire.mm.angle method)": [[18, "sire.mm.Angle.metadata_keys"]], "metadata_keys() (sire.mm.bond method)": [[18, "sire.mm.Bond.metadata_keys"]], "metadata_keys() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.metadata_keys"]], "metadata_keys() (sire.mm.improper method)": [[18, "sire.mm.Improper.metadata_keys"]], "metadata_keys() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.metadata_keys"]], "metadata_keys() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.metadata_keys"]], "metadata_keys() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.metadata_keys"]], "metadata_keys() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.metadata_keys"]], "metadata_keys() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.metadata_keys"]], "metadata_keys() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.metadata_keys"]], "metadata_keys() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.metadata_keys"]], "metadata_keys() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.metadata_keys"]], "metadata_type() (sire.mm.angle method)": [[18, "sire.mm.Angle.metadata_type"]], "metadata_type() (sire.mm.bond method)": [[18, "sire.mm.Bond.metadata_type"]], "metadata_type() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.metadata_type"]], "metadata_type() (sire.mm.improper method)": [[18, "sire.mm.Improper.metadata_type"]], "metadata_type() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.metadata_type"]], "metadata_type() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.metadata_type"]], "metadata_type() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.metadata_type"]], "metadata_type() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.metadata_type"]], "molecule() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.molecule"]], "molecule() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.molecule"]], "molecule() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.molecule"]], "molecule() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.molecule"]], "molecules() (sire.mm.angle method)": [[18, "sire.mm.Angle.molecules"]], "molecules() (sire.mm.bond method)": [[18, "sire.mm.Bond.molecules"]], "molecules() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.molecules"]], "molecules() (sire.mm.improper method)": [[18, "sire.mm.Improper.molecules"]], "molecules() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.molecules"]], "molecules() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.molecules"]], "molecules() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.molecules"]], "molecules() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.molecules"]], "move() (sire.mm.angle method)": [[18, "sire.mm.Angle.move"]], "move() (sire.mm.bond method)": [[18, "sire.mm.Bond.move"]], "move() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.move"]], "move() (sire.mm.improper method)": [[18, "sire.mm.Improper.move"]], "move() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.move"]], "move() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.move"]], "move() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.move"]], "move() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.move"]], "num_atoms() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_atoms"]], "num_atoms() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_atoms"]], "num_atoms() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_atoms"]], "num_atoms() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_atoms"]], "num_atoms() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_atoms"]], "num_atoms() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_atoms"]], "num_atoms() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_atoms"]], "num_atoms() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_atoms"]], "num_atoms() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_atoms"]], "num_atoms() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_atoms"]], "num_atoms() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_atoms"]], "num_atoms() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_atoms"]], "num_chains() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_chains"]], "num_chains() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_chains"]], "num_chains() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_chains"]], "num_chains() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_chains"]], "num_chains() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_chains"]], "num_chains() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_chains"]], "num_chains() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_chains"]], "num_chains() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_chains"]], "num_chains() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_chains"]], "num_chains() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_chains"]], "num_chains() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_chains"]], "num_chains() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_chains"]], "num_cutgroups() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_cutgroups"]], "num_cutgroups() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_cutgroups"]], "num_cutgroups() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_cutgroups"]], "num_cutgroups() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_cutgroups"]], "num_cutgroups() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_cutgroups"]], "num_cutgroups() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_cutgroups"]], "num_cutgroups() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_cutgroups"]], "num_cutgroups() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_cutgroups"]], "num_cutgroups() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_cutgroups"]], "num_cutgroups() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_cutgroups"]], "num_cutgroups() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_cutgroups"]], "num_cutgroups() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_cutgroups"]], "num_frames() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_frames"]], "num_frames() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_frames"]], "num_frames() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_frames"]], "num_frames() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_frames"]], "num_frames() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_frames"]], "num_frames() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_frames"]], "num_frames() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_frames"]], "num_frames() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_frames"]], "num_frames() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_frames"]], "num_frames() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_frames"]], "num_frames() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_frames"]], "num_frames() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_frames"]], "num_molecules() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_molecules"]], "num_molecules() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_molecules"]], "num_molecules() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_molecules"]], "num_molecules() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_molecules"]], "num_residues() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_residues"]], "num_residues() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_residues"]], "num_residues() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_residues"]], "num_residues() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_residues"]], "num_residues() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_residues"]], "num_residues() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_residues"]], "num_residues() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_residues"]], "num_residues() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_residues"]], "num_residues() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_residues"]], "num_residues() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_residues"]], "num_residues() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_residues"]], "num_residues() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_residues"]], "num_segments() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_segments"]], "num_segments() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_segments"]], "num_segments() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_segments"]], "num_segments() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_segments"]], "num_segments() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_segments"]], "num_segments() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_segments"]], "num_segments() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_segments"]], "num_segments() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_segments"]], "num_segments() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.num_segments"]], "num_segments() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.num_segments"]], "num_segments() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.num_segments"]], "num_segments() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.num_segments"]], "num_views() (sire.mm.angle method)": [[18, "sire.mm.Angle.num_views"]], "num_views() (sire.mm.bond method)": [[18, "sire.mm.Bond.num_views"]], "num_views() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.num_views"]], "num_views() (sire.mm.improper method)": [[18, "sire.mm.Improper.num_views"]], "num_views() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.num_views"]], "num_views() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.num_views"]], "num_views() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.num_views"]], "num_views() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.num_views"]], "phi() (sire.mm.improper method)": [[18, "sire.mm.Improper.phi"]], "potential() (sire.mm.angle method)": [[18, "sire.mm.Angle.potential"]], "potential() (sire.mm.bond method)": [[18, "sire.mm.Bond.potential"]], "potential() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.potential"]], "potential() (sire.mm.improper method)": [[18, "sire.mm.Improper.potential"]], "potentials() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.potentials"]], "potentials() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.potentials"]], "potentials() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.potentials"]], "potentials() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.potentials"]], "potentials() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.potentials"]], "potentials() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.potentials"]], "potentials() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.potentials"]], "potentials() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.potentials"]], "properties() (sire.mm.angle method)": [[18, "sire.mm.Angle.properties"]], "properties() (sire.mm.bond method)": [[18, "sire.mm.Bond.properties"]], "properties() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.properties"]], "properties() (sire.mm.improper method)": [[18, "sire.mm.Improper.properties"]], "properties() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.properties"]], "properties() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.properties"]], "properties() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.properties"]], "properties() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.properties"]], "properties() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.properties"]], "properties() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.properties"]], "properties() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.properties"]], "properties() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.properties"]], "property_keys() (sire.mm.angle method)": [[18, "sire.mm.Angle.property_keys"]], "property_keys() (sire.mm.bond method)": [[18, "sire.mm.Bond.property_keys"]], "property_keys() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.property_keys"]], "property_keys() (sire.mm.improper method)": [[18, "sire.mm.Improper.property_keys"]], "property_keys() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.property_keys"]], "property_keys() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.property_keys"]], "property_keys() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.property_keys"]], "property_keys() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.property_keys"]], "property_keys() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.property_keys"]], "property_keys() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.property_keys"]], "property_keys() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.property_keys"]], "property_keys() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.property_keys"]], "property_type() (sire.mm.angle method)": [[18, "sire.mm.Angle.property_type"]], "property_type() (sire.mm.bond method)": [[18, "sire.mm.Bond.property_type"]], "property_type() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.property_type"]], "property_type() (sire.mm.improper method)": [[18, "sire.mm.Improper.property_type"]], "property_type() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.property_type"]], "property_type() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.property_type"]], "property_type() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.property_type"]], "property_type() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.property_type"]], "residue() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.residue"]], "residue() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.residue"]], "residue() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.residue"]], "residue() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.residue"]], "residues() (sire.mm.angle method)": [[18, "sire.mm.Angle.residues"]], "residues() (sire.mm.bond method)": [[18, "sire.mm.Bond.residues"]], "residues() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.residues"]], "residues() (sire.mm.improper method)": [[18, "sire.mm.Improper.residues"]], "residues() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.residues"]], "residues() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.residues"]], "residues() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.residues"]], "residues() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.residues"]], "save_frame() (sire.mm.angle method)": [[18, "sire.mm.Angle.save_frame"]], "save_frame() (sire.mm.bond method)": [[18, "sire.mm.Bond.save_frame"]], "save_frame() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.save_frame"]], "save_frame() (sire.mm.improper method)": [[18, "sire.mm.Improper.save_frame"]], "save_frame() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.save_frame"]], "save_frame() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.save_frame"]], "save_frame() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.save_frame"]], "save_frame() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.save_frame"]], "save_frame() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.save_frame"]], "save_frame() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.save_frame"]], "save_frame() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.save_frame"]], "save_frame() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.save_frame"]], "search() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.search"]], "search() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.search"]], "search() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.search"]], "search() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.search"]], "segment() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.segment"]], "segment() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.segment"]], "segment() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.segment"]], "segment() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.segment"]], "segments() (sire.mm.angle method)": [[18, "sire.mm.Angle.segments"]], "segments() (sire.mm.bond method)": [[18, "sire.mm.Bond.segments"]], "segments() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.segments"]], "segments() (sire.mm.improper method)": [[18, "sire.mm.Improper.segments"]], "segments() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.segments"]], "segments() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.segments"]], "segments() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.segments"]], "segments() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.segments"]], "select_all() (sire.mm.angle method)": [[18, "sire.mm.Angle.select_all"]], "select_all() (sire.mm.bond method)": [[18, "sire.mm.Bond.select_all"]], "select_all() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.select_all"]], "select_all() (sire.mm.improper method)": [[18, "sire.mm.Improper.select_all"]], "select_all() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.select_all"]], "select_all() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.select_all"]], "select_all() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.select_all"]], "select_all() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.select_all"]], "select_all_atoms() (sire.mm.angle method)": [[18, "sire.mm.Angle.select_all_atoms"]], "select_all_atoms() (sire.mm.bond method)": [[18, "sire.mm.Bond.select_all_atoms"]], "select_all_atoms() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.select_all_atoms"]], "select_all_atoms() (sire.mm.improper method)": [[18, "sire.mm.Improper.select_all_atoms"]], "select_all_atoms() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.select_all_atoms"]], "select_all_atoms() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.select_all_atoms"]], "select_all_atoms() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.select_all_atoms"]], "select_all_atoms() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.select_all_atoms"]], "select_all_chains() (sire.mm.angle method)": [[18, "sire.mm.Angle.select_all_chains"]], "select_all_chains() (sire.mm.bond method)": [[18, "sire.mm.Bond.select_all_chains"]], "select_all_chains() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.select_all_chains"]], "select_all_chains() (sire.mm.improper method)": [[18, "sire.mm.Improper.select_all_chains"]], "select_all_chains() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.select_all_chains"]], "select_all_chains() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.select_all_chains"]], "select_all_chains() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.select_all_chains"]], "select_all_chains() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.select_all_chains"]], "select_all_cutgroups() (sire.mm.angle method)": [[18, "sire.mm.Angle.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.bond method)": [[18, "sire.mm.Bond.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.improper method)": [[18, "sire.mm.Improper.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.select_all_cutgroups"]], "select_all_cutgroups() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.select_all_cutgroups"]], "select_all_residues() (sire.mm.angle method)": [[18, "sire.mm.Angle.select_all_residues"]], "select_all_residues() (sire.mm.bond method)": [[18, "sire.mm.Bond.select_all_residues"]], "select_all_residues() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.select_all_residues"]], "select_all_residues() (sire.mm.improper method)": [[18, "sire.mm.Improper.select_all_residues"]], "select_all_residues() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.select_all_residues"]], "select_all_residues() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.select_all_residues"]], "select_all_residues() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.select_all_residues"]], "select_all_residues() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.select_all_residues"]], "select_all_segments() (sire.mm.angle method)": [[18, "sire.mm.Angle.select_all_segments"]], "select_all_segments() (sire.mm.bond method)": [[18, "sire.mm.Bond.select_all_segments"]], "select_all_segments() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.select_all_segments"]], "select_all_segments() (sire.mm.improper method)": [[18, "sire.mm.Improper.select_all_segments"]], "select_all_segments() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.select_all_segments"]], "select_all_segments() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.select_all_segments"]], "select_all_segments() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.select_all_segments"]], "select_all_segments() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.select_all_segments"]], "selected_all() (sire.mm.angle method)": [[18, "sire.mm.Angle.selected_all"]], "selected_all() (sire.mm.bond method)": [[18, "sire.mm.Bond.selected_all"]], "selected_all() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.selected_all"]], "selected_all() (sire.mm.improper method)": [[18, "sire.mm.Improper.selected_all"]], "selected_all() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.selected_all"]], "selected_all() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.selected_all"]], "selected_all() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.selected_all"]], "selected_all() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.selected_all"]], "selection() (sire.mm.angle method)": [[18, "sire.mm.Angle.selection"]], "selection() (sire.mm.bond method)": [[18, "sire.mm.Bond.selection"]], "selection() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.selection"]], "selection() (sire.mm.improper method)": [[18, "sire.mm.Improper.selection"]], "selection() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.selection"]], "selection() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.selection"]], "selection() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.selection"]], "selection() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.selection"]], "selector() (sire.mm.angle method)": [[18, "sire.mm.Angle.selector"]], "selector() (sire.mm.bond method)": [[18, "sire.mm.Bond.selector"]], "selector() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.selector"]], "selector() (sire.mm.improper method)": [[18, "sire.mm.Improper.selector"]], "sire.mm": [[18, "module-sire.mm"]], "size() (sire.mm.angle method)": [[18, "sire.mm.Angle.size"]], "size() (sire.mm.bond method)": [[18, "sire.mm.Bond.size"]], "size() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.size"]], "size() (sire.mm.improper method)": [[18, "sire.mm.Improper.size"]], "size() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.size"]], "size() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.size"]], "size() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.size"]], "size() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.size"]], "size() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.size"]], "size() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.size"]], "size() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.size"]], "size() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.size"]], "sizes() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.sizes"]], "sizes() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.sizes"]], "sizes() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.sizes"]], "sizes() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.sizes"]], "sizes() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.sizes"]], "sizes() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.sizes"]], "theta() (sire.mm.improper method)": [[18, "sire.mm.Improper.theta"]], "to_list() (sire.mm.angle method)": [[18, "sire.mm.Angle.to_list"]], "to_list() (sire.mm.bond method)": [[18, "sire.mm.Bond.to_list"]], "to_list() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.to_list"]], "to_list() (sire.mm.improper method)": [[18, "sire.mm.Improper.to_list"]], "to_list() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.to_list"]], "to_list() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.to_list"]], "to_list() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.to_list"]], "to_list() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.to_list"]], "to_list() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.to_list"]], "to_list() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.to_list"]], "to_list() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.to_list"]], "to_list() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.to_list"]], "to_molecule_group() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.to_molecule_group"]], "to_molecule_group() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.to_molecule_group"]], "to_molecule_group() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.to_molecule_group"]], "to_molecule_group() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.to_molecule_group"]], "to_molecules() (sire.mm.angle method)": [[18, "sire.mm.Angle.to_molecules"]], "to_molecules() (sire.mm.bond method)": [[18, "sire.mm.Bond.to_molecules"]], "to_molecules() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.to_molecules"]], "to_molecules() (sire.mm.improper method)": [[18, "sire.mm.Improper.to_molecules"]], "to_molecules() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.to_molecules"]], "to_molecules() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.to_molecules"]], "to_molecules() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.to_molecules"]], "to_molecules() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.to_molecules"]], "to_molecules() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.to_molecules"]], "to_molecules() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.to_molecules"]], "to_molecules() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.to_molecules"]], "to_molecules() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.to_molecules"]], "to_select_result() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.to_select_result"]], "to_select_result() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.to_select_result"]], "to_select_result() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.to_select_result"]], "to_select_result() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.to_select_result"]], "to_selector() (sire.mm.angle method)": [[18, "sire.mm.Angle.to_selector"]], "to_selector() (sire.mm.bond method)": [[18, "sire.mm.Bond.to_selector"]], "to_selector() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.to_selector"]], "to_selector() (sire.mm.improper method)": [[18, "sire.mm.Improper.to_selector"]], "to_selector() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.to_selector"]], "to_selector() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.to_selector"]], "to_selector() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.to_selector"]], "to_selector() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.to_selector"]], "to_string() (sire.mm.angle method)": [[18, "sire.mm.Angle.to_string"]], "to_string() (sire.mm.bond method)": [[18, "sire.mm.Bond.to_string"]], "to_string() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.to_string"]], "to_string() (sire.mm.improper method)": [[18, "sire.mm.Improper.to_string"]], "to_string() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.to_string"]], "to_string() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.to_string"]], "to_string() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.to_string"]], "to_string() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.to_string"]], "to_string() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.to_string"]], "to_string() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.to_string"]], "to_string() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.to_string"]], "to_string() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.to_string"]], "typename() (sire.mm.angle method)": [[18, "sire.mm.Angle.typename"]], "typename() (sire.mm.bond method)": [[18, "sire.mm.Bond.typename"]], "typename() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.typename"]], "typename() (sire.mm.improper method)": [[18, "sire.mm.Improper.typename"]], "typename() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.typename"]], "typename() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.typename"]], "typename() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.typename"]], "typename() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.typename"]], "typename() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.typename"]], "typename() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.typename"]], "typename() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.typename"]], "typename() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.typename"]], "update() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.update"]], "update() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.update"]], "update() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.update"]], "update() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.update"]], "view() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.view"]], "view() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.view"]], "view() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.view"]], "view() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.view"]], "view() (sire.mm.selectormangle method)": [[18, "sire.mm.SelectorMAngle.view"]], "view() (sire.mm.selectormbond method)": [[18, "sire.mm.SelectorMBond.view"]], "view() (sire.mm.selectormdihedral method)": [[18, "sire.mm.SelectorMDihedral.view"]], "view() (sire.mm.selectormimproper method)": [[18, "sire.mm.SelectorMImproper.view"]], "what() (sire.mm.angle method)": [[18, "sire.mm.Angle.what"]], "what() (sire.mm.bond method)": [[18, "sire.mm.Bond.what"]], "what() (sire.mm.dihedral method)": [[18, "sire.mm.Dihedral.what"]], "what() (sire.mm.improper method)": [[18, "sire.mm.Improper.what"]], "what() (sire.mm.selectorangle method)": [[18, "sire.mm.SelectorAngle.what"]], "what() (sire.mm.selectorbond method)": [[18, "sire.mm.SelectorBond.what"]], "what() (sire.mm.selectordihedral method)": [[18, "sire.mm.SelectorDihedral.what"]], "what() (sire.mm.selectorimproper method)": [[18, "sire.mm.SelectorImproper.what"]], "atom (class in sire.mol)": [[19, "sire.mol.Atom"]], "atomidx (class in sire.mol)": [[19, "sire.mol.AtomIdx"]], "atomname (class in sire.mol)": [[19, "sire.mol.AtomName"]], "atomnum (class in sire.mol)": [[19, "sire.mol.AtomNum"]], "bondtype (class in sire.mol)": [[19, "sire.mol.BondType"]], "chain (class in sire.mol)": [[19, "sire.mol.Chain"]], "chainidx (class in sire.mol)": [[19, "sire.mol.ChainIdx"]], "chainname (class in sire.mol)": [[19, "sire.mol.ChainName"]], "cursor (class in sire.mol)": [[19, "sire.mol.Cursor"]], "cursors (class in sire.mol)": [[19, "sire.mol.Cursors"]], "cursorsm (class in sire.mol)": [[19, "sire.mol.CursorsM"]], "element (class in sire.mol)": [[19, "sire.mol.Element"]], "molidx (class in sire.mol)": [[19, "sire.mol.MolIdx"]], "molname (class in sire.mol)": [[19, "sire.mol.MolName"]], "molnum (class in sire.mol)": [[19, "sire.mol.MolNum"]], "molecule (class in sire.mol)": [[19, "sire.mol.Molecule"]], "residx (class in sire.mol)": [[19, "sire.mol.ResIdx"]], "resname (class in sire.mol)": [[19, "sire.mol.ResName"]], "resnum (class in sire.mol)": [[19, "sire.mol.ResNum"]], "residue (class in sire.mol)": [[19, "sire.mol.Residue"]], "segidx (class in sire.mol)": [[19, "sire.mol.SegIdx"]], "segname (class in sire.mol)": [[19, "sire.mol.SegName"]], "segment (class in sire.mol)": [[19, "sire.mol.Segment"]], "selectormol (class in sire.mol)": [[19, "sire.mol.SelectorMol"]], "stereoscopy (class in sire.mol)": [[19, "sire.mol.Stereoscopy"]], "trajectoryiterator (class in sire.mol)": [[19, "sire.mol.TrajectoryIterator"]], "actinide() (sire.mol.element method)": [[19, "sire.mol.Element.actinide"]], "alkali_earth_metal() (sire.mol.element method)": [[19, "sire.mol.Element.alkali_earth_metal"]], "alkali_metal() (sire.mol.element method)": [[19, "sire.mol.Element.alkali_metal"]], "angle() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.angle"]], "angle() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.angle"]], "angle() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.angle"]], "angles() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.angles"]], "angles() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.angles"]], "angles() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.angles"]], "apply() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.apply"]], "apply() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.apply"]], "apply() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.apply"]], "apply() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.apply"]], "apply() (sire.mol.trajectoryiterator method)": [[19, "sire.mol.TrajectoryIterator.apply"]], "apply_reduce() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.apply_reduce"]], "aromatic_bond() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.aromatic_bond"]], "assert_contains() (sire.mol.atom method)": [[19, "sire.mol.Atom.assert_contains"]], "assert_contains() (sire.mol.chain method)": [[19, "sire.mol.Chain.assert_contains"]], "assert_contains() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assert_contains"]], "assert_contains_metadata() (sire.mol.atom method)": [[19, "sire.mol.Atom.assert_contains_metadata"]], "assert_contains_metadata() (sire.mol.chain method)": [[19, "sire.mol.Chain.assert_contains_metadata"]], "assert_contains_metadata() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assert_contains_metadata"]], "assert_contains_metadata() (sire.mol.residue method)": [[19, "sire.mol.Residue.assert_contains_metadata"]], "assert_contains_metadata() (sire.mol.segment method)": [[19, "sire.mol.Segment.assert_contains_metadata"]], "assert_contains_property() (sire.mol.atom method)": [[19, "sire.mol.Atom.assert_contains_property"]], "assert_contains_property() (sire.mol.chain method)": [[19, "sire.mol.Chain.assert_contains_property"]], "assert_contains_property() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assert_contains_property"]], "assert_contains_property() (sire.mol.residue method)": [[19, "sire.mol.Residue.assert_contains_property"]], "assert_contains_property() (sire.mol.segment method)": [[19, "sire.mol.Segment.assert_contains_property"]], "assert_has_metadata() (sire.mol.atom method)": [[19, "sire.mol.Atom.assert_has_metadata"]], "assert_has_metadata() (sire.mol.chain method)": [[19, "sire.mol.Chain.assert_has_metadata"]], "assert_has_metadata() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assert_has_metadata"]], "assert_has_property() (sire.mol.atom method)": [[19, "sire.mol.Atom.assert_has_property"]], "assert_has_property() (sire.mol.chain method)": [[19, "sire.mol.Chain.assert_has_property"]], "assert_has_property() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assert_has_property"]], "assert_same_molecule() (sire.mol.atom method)": [[19, "sire.mol.Atom.assert_same_molecule"]], "assert_same_molecule() (sire.mol.chain method)": [[19, "sire.mol.Chain.assert_same_molecule"]], "assert_same_molecule() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assert_same_molecule"]], "assign() (sire.mol.atom method)": [[19, "sire.mol.Atom.assign"]], "assign() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.assign"]], "assign() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.assign"]], "assign() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.assign"]], "assign() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.assign"]], "assign() (sire.mol.chain method)": [[19, "sire.mol.Chain.assign"]], "assign() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.assign"]], "assign() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.assign"]], "assign() (sire.mol.element method)": [[19, "sire.mol.Element.assign"]], "assign() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.assign"]], "assign() (sire.mol.molname method)": [[19, "sire.mol.MolName.assign"]], "assign() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.assign"]], "assign() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.assign"]], "assign() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.assign"]], "assign() (sire.mol.resname method)": [[19, "sire.mol.ResName.assign"]], "assign() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.assign"]], "assign() (sire.mol.residue method)": [[19, "sire.mol.Residue.assign"]], "assign() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.assign"]], "assign() (sire.mol.segname method)": [[19, "sire.mol.SegName.assign"]], "assign() (sire.mol.segment method)": [[19, "sire.mol.Segment.assign"]], "assign() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.assign"]], "assign() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.assign"]], "atom() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.atom"]], "atom() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.atom"]], "atom() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.atom"]], "atom() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.atom"]], "atom_idxs() (sire.mol.chain method)": [[19, "sire.mol.Chain.atom_idxs"]], "atom_idxs() (sire.mol.residue method)": [[19, "sire.mol.Residue.atom_idxs"]], "atom_idxs() (sire.mol.segment method)": [[19, "sire.mol.Segment.atom_idxs"]], "atoms() (sire.mol.atom method)": [[19, "sire.mol.Atom.atoms"]], "atoms() (sire.mol.chain method)": [[19, "sire.mol.Chain.atoms"]], "atoms() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.atoms"]], "atoms() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.atoms"]], "atoms() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.atoms"]], "atoms() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.atoms"]], "atoms() (sire.mol.residue method)": [[19, "sire.mol.Residue.atoms"]], "atoms() (sire.mol.segment method)": [[19, "sire.mol.Segment.atoms"]], "biological() (sire.mol.element method)": [[19, "sire.mol.Element.biological"]], "biological_element() (sire.mol.element method)": [[19, "sire.mol.Element.biological_element"]], "blue() (sire.mol.element method)": [[19, "sire.mol.Element.blue"]], "bond() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.bond"]], "bond() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.bond"]], "bond() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.bond"]], "bond_order_radius() (sire.mol.element method)": [[19, "sire.mol.Element.bond_order_radius"]], "bonds() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.bonds"]], "bonds() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.bonds"]], "bonds() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.bonds"]], "cg_atom_idx() (sire.mol.atom method)": [[19, "sire.mol.Atom.cg_atom_idx"]], "chain() (sire.mol.atom method)": [[19, "sire.mol.Atom.chain"]], "chain() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.chain"]], "chain() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.chain"]], "chain() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.chain"]], "chain() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.chain"]], "chains() (sire.mol.atom method)": [[19, "sire.mol.Atom.chains"]], "chains() (sire.mol.chain method)": [[19, "sire.mol.Chain.chains"]], "chains() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.chains"]], "chains() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.chains"]], "chains() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.chains"]], "chains() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.chains"]], "chains() (sire.mol.residue method)": [[19, "sire.mol.Residue.chains"]], "chains() (sire.mol.segment method)": [[19, "sire.mol.Segment.chains"]], "clone() (sire.mol.atom method)": [[19, "sire.mol.Atom.clone"]], "clone() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.clone"]], "clone() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.clone"]], "clone() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.clone"]], "clone() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.clone"]], "clone() (sire.mol.chain method)": [[19, "sire.mol.Chain.clone"]], "clone() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.clone"]], "clone() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.clone"]], "clone() (sire.mol.element method)": [[19, "sire.mol.Element.clone"]], "clone() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.clone"]], "clone() (sire.mol.molname method)": [[19, "sire.mol.MolName.clone"]], "clone() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.clone"]], "clone() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.clone"]], "clone() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.clone"]], "clone() (sire.mol.resname method)": [[19, "sire.mol.ResName.clone"]], "clone() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.clone"]], "clone() (sire.mol.residue method)": [[19, "sire.mol.Residue.clone"]], "clone() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.clone"]], "clone() (sire.mol.segname method)": [[19, "sire.mol.SegName.clone"]], "clone() (sire.mol.segment method)": [[19, "sire.mol.Segment.clone"]], "clone() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.clone"]], "clone() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.clone"]], "color() (sire.mol.element method)": [[19, "sire.mol.Element.color"]], "color_name() (sire.mol.element method)": [[19, "sire.mol.Element.color_name"]], "commit() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.commit"]], "commit() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.commit"]], "commit() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.commit"]], "const_data() (sire.mol.atom method)": [[19, "sire.mol.Atom.const_data"]], "const_data() (sire.mol.chain method)": [[19, "sire.mol.Chain.const_data"]], "const_data() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.const_data"]], "contains() (sire.mol.chain method)": [[19, "sire.mol.Chain.contains"]], "contains() (sire.mol.residue method)": [[19, "sire.mol.Residue.contains"]], "contains() (sire.mol.segment method)": [[19, "sire.mol.Segment.contains"]], "contains() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.contains"]], "count() (sire.mol.atom method)": [[19, "sire.mol.Atom.count"]], "count() (sire.mol.chain method)": [[19, "sire.mol.Chain.count"]], "count() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.count"]], "count() (sire.mol.residue method)": [[19, "sire.mol.Residue.count"]], "count() (sire.mol.segment method)": [[19, "sire.mol.Segment.count"]], "count() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.count"]], "covalent_radius() (sire.mol.element method)": [[19, "sire.mol.Element.covalent_radius"]], "current() (sire.mol.trajectoryiterator method)": [[19, "sire.mol.TrajectoryIterator.current"]], "cursor() (sire.mol.atom method)": [[19, "sire.mol.Atom.cursor"]], "cursor() (sire.mol.chain method)": [[19, "sire.mol.Chain.cursor"]], "cursor() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.cursor"]], "cursor() (sire.mol.residue method)": [[19, "sire.mol.Residue.cursor"]], "cursor() (sire.mol.segment method)": [[19, "sire.mol.Segment.cursor"]], "cutgroup() (sire.mol.atom method)": [[19, "sire.mol.Atom.cutgroup"]], "cutgroup() (sire.mol.chain method)": [[19, "sire.mol.Chain.cutgroup"]], "cutgroup() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.cutgroup"]], "cutgroup() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.cutgroup"]], "cutgroups() (sire.mol.atom method)": [[19, "sire.mol.Atom.cutgroups"]], "cutgroups() (sire.mol.chain method)": [[19, "sire.mol.Chain.cutgroups"]], "cutgroups() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.cutgroups"]], "cutgroups() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.cutgroups"]], "delete() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.delete"]], "delete() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.delete"]], "delete() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.delete"]], "delete_frame() (sire.mol.atom method)": [[19, "sire.mol.Atom.delete_frame"]], "delete_frame() (sire.mol.chain method)": [[19, "sire.mol.Chain.delete_frame"]], "delete_frame() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.delete_frame"]], "delete_frame() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.delete_frame"]], "delete_frame() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.delete_frame"]], "delete_frame() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.delete_frame"]], "delete_frame() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.delete_frame"]], "dihedral() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.dihedral"]], "dihedral() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.dihedral"]], "dihedral() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.dihedral"]], "dihedrals() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.dihedrals"]], "dihedrals() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.dihedrals"]], "dihedrals() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.dihedrals"]], "double_bond() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.double_bond"]], "down() (sire.mol.stereoscopy static method)": [[19, "sire.mol.Stereoscopy.down"]], "edit() (sire.mol.atom method)": [[19, "sire.mol.Atom.edit"]], "edit() (sire.mol.chain method)": [[19, "sire.mol.Chain.edit"]], "edit() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.edit"]], "edit() (sire.mol.residue method)": [[19, "sire.mol.Residue.edit"]], "edit() (sire.mol.segment method)": [[19, "sire.mol.Segment.edit"]], "element_with_mass() (sire.mol.element method)": [[19, "sire.mol.Element.element_with_mass"]], "energies() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.energies"]], "energy() (sire.mol.atom method)": [[19, "sire.mol.Atom.energy"]], "energy() (sire.mol.chain method)": [[19, "sire.mol.Chain.energy"]], "energy() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.energy"]], "energy() (sire.mol.residue method)": [[19, "sire.mol.Residue.energy"]], "energy() (sire.mol.segment method)": [[19, "sire.mol.Segment.energy"]], "energy() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.energy"]], "evaluate() (sire.mol.atom method)": [[19, "sire.mol.Atom.evaluate"]], "evaluate() (sire.mol.chain method)": [[19, "sire.mol.Chain.evaluate"]], "evaluate() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.evaluate"]], "evaluate() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.evaluate"]], "evaluate() (sire.mol.residue method)": [[19, "sire.mol.Residue.evaluate"]], "evaluate() (sire.mol.segment method)": [[19, "sire.mol.Segment.evaluate"]], "evaluate() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.evaluate"]], "first() (sire.mol.trajectoryiterator method)": [[19, "sire.mol.TrajectoryIterator.first"]], "get() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.get"]], "get() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.get"]], "get() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.get"]], "get_index() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.get_index"]], "get_name() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.get_name"]], "get_number() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.get_number"]], "get_unique_number() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.get_unique_number"]], "green() (sire.mol.element method)": [[19, "sire.mol.Element.green"]], "group() (sire.mol.element method)": [[19, "sire.mol.Element.group"]], "halogen() (sire.mol.element method)": [[19, "sire.mol.Element.halogen"]], "has_metadata() (sire.mol.atom method)": [[19, "sire.mol.Atom.has_metadata"]], "has_metadata() (sire.mol.chain method)": [[19, "sire.mol.Chain.has_metadata"]], "has_metadata() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.has_metadata"]], "has_metadata() (sire.mol.residue method)": [[19, "sire.mol.Residue.has_metadata"]], "has_metadata() (sire.mol.segment method)": [[19, "sire.mol.Segment.has_metadata"]], "has_property() (sire.mol.atom method)": [[19, "sire.mol.Atom.has_property"]], "has_property() (sire.mol.chain method)": [[19, "sire.mol.Chain.has_property"]], "has_property() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.has_property"]], "has_property() (sire.mol.residue method)": [[19, "sire.mol.Residue.has_property"]], "has_property() (sire.mol.segment method)": [[19, "sire.mol.Segment.has_property"]], "hash() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.hash"]], "hash() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.hash"]], "hash() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.hash"]], "hash() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.hash"]], "hash() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.hash"]], "hash() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.hash"]], "hash() (sire.mol.molname method)": [[19, "sire.mol.MolName.hash"]], "hash() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.hash"]], "hash() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.hash"]], "hash() (sire.mol.resname method)": [[19, "sire.mol.ResName.hash"]], "hash() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.hash"]], "hash() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.hash"]], "hash() (sire.mol.segname method)": [[19, "sire.mol.SegName.hash"]], "hex_color() (sire.mol.element method)": [[19, "sire.mol.Element.hex_color"]], "id() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.id"]], "ids() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.ids"]], "improper() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.improper"]], "improper() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.improper"]], "improper() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.improper"]], "impropers() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.impropers"]], "impropers() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.impropers"]], "impropers() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.impropers"]], "index (sire.mol.cursor property)": [[19, "sire.mol.Cursor.index"]], "index() (sire.mol.atom method)": [[19, "sire.mol.Atom.index"]], "index() (sire.mol.chain method)": [[19, "sire.mol.Chain.index"]], "index() (sire.mol.residue method)": [[19, "sire.mol.Residue.index"]], "index() (sire.mol.segment method)": [[19, "sire.mol.Segment.index"]], "indexes() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.indexes"]], "info() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.info"]], "intersects() (sire.mol.chain method)": [[19, "sire.mol.Chain.intersects"]], "intersects() (sire.mol.residue method)": [[19, "sire.mol.Residue.intersects"]], "intersects() (sire.mol.segment method)": [[19, "sire.mol.Segment.intersects"]], "invert() (sire.mol.atom method)": [[19, "sire.mol.Atom.invert"]], "invert() (sire.mol.chain method)": [[19, "sire.mol.Chain.invert"]], "invert() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.invert"]], "invert() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.invert"]], "invert() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.invert"]], "invert() (sire.mol.residue method)": [[19, "sire.mol.Residue.invert"]], "invert() (sire.mol.segment method)": [[19, "sire.mol.Segment.invert"]], "is_angle() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_angle"]], "is_atom() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_atom"]], "is_bond() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_bond"]], "is_chain() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_chain"]], "is_defined() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.is_defined"]], "is_defined() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.is_defined"]], "is_dihedral() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_dihedral"]], "is_double() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.is_double"]], "is_down() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.is_down"]], "is_empty() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_empty"]], "is_empty() (sire.mol.chain method)": [[19, "sire.mol.Chain.is_empty"]], "is_empty() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.is_empty"]], "is_empty() (sire.mol.residue method)": [[19, "sire.mol.Residue.is_empty"]], "is_empty() (sire.mol.segment method)": [[19, "sire.mol.Segment.is_empty"]], "is_empty() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.is_empty"]], "is_improper() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_improper"]], "is_internal() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_internal"]], "is_molecule() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_molecule"]], "is_not_stereo() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.is_not_stereo"]], "is_null() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_null"]], "is_null() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.is_null"]], "is_null() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.is_null"]], "is_null() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.is_null"]], "is_null() (sire.mol.chain method)": [[19, "sire.mol.Chain.is_null"]], "is_null() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.is_null"]], "is_null() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.is_null"]], "is_null() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.is_null"]], "is_null() (sire.mol.molname method)": [[19, "sire.mol.MolName.is_null"]], "is_null() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.is_null"]], "is_null() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.is_null"]], "is_null() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.is_null"]], "is_null() (sire.mol.resname method)": [[19, "sire.mol.ResName.is_null"]], "is_null() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.is_null"]], "is_null() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.is_null"]], "is_null() (sire.mol.segname method)": [[19, "sire.mol.SegName.is_null"]], "is_residue() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_residue"]], "is_same_editor() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_same_editor"]], "is_same_editor() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.is_same_editor"]], "is_same_molecule() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_same_molecule"]], "is_same_molecule() (sire.mol.chain method)": [[19, "sire.mol.Chain.is_same_molecule"]], "is_same_molecule() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.is_same_molecule"]], "is_segment() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.is_segment"]], "is_selector() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_selector"]], "is_selector() (sire.mol.chain method)": [[19, "sire.mol.Chain.is_selector"]], "is_selector() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.is_selector"]], "is_selector() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.is_selector"]], "is_single() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.is_single"]], "is_triple() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.is_triple"]], "is_up() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.is_up"]], "is_within_chain() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_within_chain"]], "is_within_chain() (sire.mol.residue method)": [[19, "sire.mol.Residue.is_within_chain"]], "is_within_residue() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_within_residue"]], "is_within_segment() (sire.mol.atom method)": [[19, "sire.mol.Atom.is_within_segment"]], "isromatic() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.isromatic"]], "join() (sire.mol.molecule static method)": [[19, "sire.mol.Molecule.join"]], "lanthanide() (sire.mol.element method)": [[19, "sire.mol.Element.lanthanide"]], "load_frame() (sire.mol.atom method)": [[19, "sire.mol.Atom.load_frame"]], "load_frame() (sire.mol.chain method)": [[19, "sire.mol.Chain.load_frame"]], "load_frame() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.load_frame"]], "load_frame() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.load_frame"]], "load_frame() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.load_frame"]], "load_frame() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.load_frame"]], "load_frame() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.load_frame"]], "map() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.map"]], "map() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.map"]], "map() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.map"]], "map() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.map"]], "map() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.map"]], "map() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.map"]], "map() (sire.mol.molname method)": [[19, "sire.mol.MolName.map"]], "map() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.map"]], "map() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.map"]], "map() (sire.mol.resname method)": [[19, "sire.mol.ResName.map"]], "map() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.map"]], "map() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.map"]], "map() (sire.mol.segname method)": [[19, "sire.mol.SegName.map"]], "mass() (sire.mol.element method)": [[19, "sire.mol.Element.mass"]], "max_bonds() (sire.mol.element method)": [[19, "sire.mol.Element.max_bonds"]], "metadata() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.metadata"]], "metadata_keys() (sire.mol.atom method)": [[19, "sire.mol.Atom.metadata_keys"]], "metadata_keys() (sire.mol.chain method)": [[19, "sire.mol.Chain.metadata_keys"]], "metadata_keys() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.metadata_keys"]], "metadata_keys() (sire.mol.residue method)": [[19, "sire.mol.Residue.metadata_keys"]], "metadata_keys() (sire.mol.segment method)": [[19, "sire.mol.Segment.metadata_keys"]], "metadata_type() (sire.mol.atom method)": [[19, "sire.mol.Atom.metadata_type"]], "metadata_type() (sire.mol.chain method)": [[19, "sire.mol.Chain.metadata_type"]], "metadata_type() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.metadata_type"]], "mol_nums() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.mol_nums"]], "molecule() (sire.mol.atom method)": [[19, "sire.mol.Atom.molecule"]], "molecule() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.molecule"]], "molecule() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.molecule"]], "molecule() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.molecule"]], "molecule() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.molecule"]], "molecules() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.molecules"]], "move() (sire.mol.atom method)": [[19, "sire.mol.Atom.move"]], "move() (sire.mol.chain method)": [[19, "sire.mol.Chain.move"]], "move() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.move"]], "move() (sire.mol.residue method)": [[19, "sire.mol.Residue.move"]], "move() (sire.mol.segment method)": [[19, "sire.mol.Segment.move"]], "name (sire.mol.cursor property)": [[19, "sire.mol.Cursor.name"]], "name() (sire.mol.atom method)": [[19, "sire.mol.Atom.name"]], "name() (sire.mol.chain method)": [[19, "sire.mol.Chain.name"]], "name() (sire.mol.element method)": [[19, "sire.mol.Element.name"]], "name() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.name"]], "name() (sire.mol.residue method)": [[19, "sire.mol.Residue.name"]], "name() (sire.mol.segment method)": [[19, "sire.mol.Segment.name"]], "names() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.names"]], "noble_gas() (sire.mol.element method)": [[19, "sire.mol.Element.noble_gas"]], "not_stereo() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.not_stereo"]], "null() (sire.mol.atomidx static method)": [[19, "sire.mol.AtomIdx.null"]], "null() (sire.mol.chainidx static method)": [[19, "sire.mol.ChainIdx.null"]], "null() (sire.mol.molidx static method)": [[19, "sire.mol.MolIdx.null"]], "null() (sire.mol.residx static method)": [[19, "sire.mol.ResIdx.null"]], "null() (sire.mol.segidx static method)": [[19, "sire.mol.SegIdx.null"]], "num_atoms() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_atoms"]], "num_atoms() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_atoms"]], "num_atoms() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_atoms"]], "num_atoms() (sire.mol.residue method)": [[19, "sire.mol.Residue.num_atoms"]], "num_atoms() (sire.mol.segment method)": [[19, "sire.mol.Segment.num_atoms"]], "num_atoms() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_atoms"]], "num_chains() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_chains"]], "num_chains() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_chains"]], "num_chains() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_chains"]], "num_chains() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_chains"]], "num_cutgroups() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_cutgroups"]], "num_cutgroups() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_cutgroups"]], "num_cutgroups() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_cutgroups"]], "num_cutgroups() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_cutgroups"]], "num_frames() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_frames"]], "num_frames() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_frames"]], "num_frames() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.num_frames"]], "num_frames() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.num_frames"]], "num_frames() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.num_frames"]], "num_frames() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_frames"]], "num_frames() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_frames"]], "num_molecules() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_molecules"]], "num_protons() (sire.mol.element method)": [[19, "sire.mol.Element.num_protons"]], "num_residues() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_residues"]], "num_residues() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_residues"]], "num_residues() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_residues"]], "num_residues() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_residues"]], "num_segments() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_segments"]], "num_segments() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_segments"]], "num_segments() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_segments"]], "num_segments() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.num_segments"]], "num_views() (sire.mol.atom method)": [[19, "sire.mol.Atom.num_views"]], "num_views() (sire.mol.chain method)": [[19, "sire.mol.Chain.num_views"]], "num_views() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.num_views"]], "number (sire.mol.cursor property)": [[19, "sire.mol.Cursor.number"]], "number() (sire.mol.atom method)": [[19, "sire.mol.Atom.number"]], "number() (sire.mol.chain method)": [[19, "sire.mol.Chain.number"]], "number() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.number"]], "number() (sire.mol.residue method)": [[19, "sire.mol.Residue.number"]], "number() (sire.mol.segment method)": [[19, "sire.mol.Segment.number"]], "numbers() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.numbers"]], "parent() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.parent"]], "parent() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.parent"]], "period() (sire.mol.element method)": [[19, "sire.mol.Element.period"]], "properties() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.properties"]], "properties() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.properties"]], "property() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.property"]], "property_as_property() (sire.mol.atom method)": [[19, "sire.mol.Atom.property_as_property"]], "property_as_property() (sire.mol.chain method)": [[19, "sire.mol.Chain.property_as_property"]], "property_as_property() (sire.mol.residue method)": [[19, "sire.mol.Residue.property_as_property"]], "property_as_property() (sire.mol.segment method)": [[19, "sire.mol.Segment.property_as_property"]], "property_as_variant() (sire.mol.atom method)": [[19, "sire.mol.Atom.property_as_variant"]], "property_as_variant() (sire.mol.chain method)": [[19, "sire.mol.Chain.property_as_variant"]], "property_as_variant() (sire.mol.residue method)": [[19, "sire.mol.Residue.property_as_variant"]], "property_as_variant() (sire.mol.segment method)": [[19, "sire.mol.Segment.property_as_variant"]], "property_keys() (sire.mol.atom method)": [[19, "sire.mol.Atom.property_keys"]], "property_keys() (sire.mol.chain method)": [[19, "sire.mol.Chain.property_keys"]], "property_keys() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.property_keys"]], "property_keys() (sire.mol.residue method)": [[19, "sire.mol.Residue.property_keys"]], "property_keys() (sire.mol.segment method)": [[19, "sire.mol.Segment.property_keys"]], "property_type() (sire.mol.atom method)": [[19, "sire.mol.Atom.property_type"]], "property_type() (sire.mol.chain method)": [[19, "sire.mol.Chain.property_type"]], "property_type() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.property_type"]], "rare_earth() (sire.mol.element method)": [[19, "sire.mol.Element.rare_earth"]], "red() (sire.mol.element method)": [[19, "sire.mol.Element.red"]], "res_idxs() (sire.mol.chain method)": [[19, "sire.mol.Chain.res_idxs"]], "residue() (sire.mol.atom method)": [[19, "sire.mol.Atom.residue"]], "residue() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.residue"]], "residue() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.residue"]], "residue() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.residue"]], "residue() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.residue"]], "residues() (sire.mol.atom method)": [[19, "sire.mol.Atom.residues"]], "residues() (sire.mol.chain method)": [[19, "sire.mol.Chain.residues"]], "residues() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.residues"]], "residues() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.residues"]], "residues() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.residues"]], "residues() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.residues"]], "residues() (sire.mol.residue method)": [[19, "sire.mol.Residue.residues"]], "residues() (sire.mol.segment method)": [[19, "sire.mol.Segment.residues"]], "rotate() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.rotate"]], "rotate() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.rotate"]], "rotate() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.rotate"]], "save_frame() (sire.mol.atom method)": [[19, "sire.mol.Atom.save_frame"]], "save_frame() (sire.mol.chain method)": [[19, "sire.mol.Chain.save_frame"]], "save_frame() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.save_frame"]], "save_frame() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.save_frame"]], "save_frame() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.save_frame"]], "save_frame() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.save_frame"]], "save_frame() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.save_frame"]], "sdf_value() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.sdf_value"]], "sdf_value() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.sdf_value"]], "search() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.search"]], "segment() (sire.mol.atom method)": [[19, "sire.mol.Atom.segment"]], "segment() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.segment"]], "segment() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.segment"]], "segment() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.segment"]], "segment() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.segment"]], "segments() (sire.mol.atom method)": [[19, "sire.mol.Atom.segments"]], "segments() (sire.mol.chain method)": [[19, "sire.mol.Chain.segments"]], "segments() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.segments"]], "segments() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.segments"]], "segments() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.segments"]], "segments() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.segments"]], "segments() (sire.mol.residue method)": [[19, "sire.mol.Residue.segments"]], "segments() (sire.mol.segment method)": [[19, "sire.mol.Segment.segments"]], "select_all() (sire.mol.atom method)": [[19, "sire.mol.Atom.select_all"]], "select_all() (sire.mol.chain method)": [[19, "sire.mol.Chain.select_all"]], "select_all() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.select_all"]], "select_all_atoms() (sire.mol.atom method)": [[19, "sire.mol.Atom.select_all_atoms"]], "select_all_atoms() (sire.mol.chain method)": [[19, "sire.mol.Chain.select_all_atoms"]], "select_all_atoms() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.select_all_atoms"]], "select_all_chains() (sire.mol.atom method)": [[19, "sire.mol.Atom.select_all_chains"]], "select_all_chains() (sire.mol.chain method)": [[19, "sire.mol.Chain.select_all_chains"]], "select_all_chains() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.select_all_chains"]], "select_all_cutgroups() (sire.mol.atom method)": [[19, "sire.mol.Atom.select_all_cutgroups"]], "select_all_cutgroups() (sire.mol.chain method)": [[19, "sire.mol.Chain.select_all_cutgroups"]], "select_all_cutgroups() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.select_all_cutgroups"]], "select_all_residues() (sire.mol.atom method)": [[19, "sire.mol.Atom.select_all_residues"]], "select_all_residues() (sire.mol.chain method)": [[19, "sire.mol.Chain.select_all_residues"]], "select_all_residues() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.select_all_residues"]], "select_all_segments() (sire.mol.atom method)": [[19, "sire.mol.Atom.select_all_segments"]], "select_all_segments() (sire.mol.chain method)": [[19, "sire.mol.Chain.select_all_segments"]], "select_all_segments() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.select_all_segments"]], "selected_all() (sire.mol.atom method)": [[19, "sire.mol.Atom.selected_all"]], "selected_all() (sire.mol.chain method)": [[19, "sire.mol.Chain.selected_all"]], "selected_all() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.selected_all"]], "selected_all() (sire.mol.residue method)": [[19, "sire.mol.Residue.selected_all"]], "selected_all() (sire.mol.segment method)": [[19, "sire.mol.Segment.selected_all"]], "selection() (sire.mol.atom method)": [[19, "sire.mol.Atom.selection"]], "selection() (sire.mol.chain method)": [[19, "sire.mol.Chain.selection"]], "selection() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.selection"]], "selection() (sire.mol.residue method)": [[19, "sire.mol.Residue.selection"]], "selection() (sire.mol.segment method)": [[19, "sire.mol.Segment.selection"]], "selector() (sire.mol.atom method)": [[19, "sire.mol.Atom.selector"]], "selector() (sire.mol.chain method)": [[19, "sire.mol.Chain.selector"]], "selector() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.selector"]], "selector() (sire.mol.residue method)": [[19, "sire.mol.Residue.selector"]], "selector() (sire.mol.segment method)": [[19, "sire.mol.Segment.selector"]], "set() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.set"]], "set() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.set"]], "set() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.set"]], "set_name() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.set_name"]], "set_number() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.set_number"]], "single_bond() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.single_bond"]], "sire.mol": [[19, "module-sire.mol"]], "size() (sire.mol.atom method)": [[19, "sire.mol.Atom.size"]], "size() (sire.mol.chain method)": [[19, "sire.mol.Chain.size"]], "size() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.size"]], "size() (sire.mol.residue method)": [[19, "sire.mol.Residue.size"]], "size() (sire.mol.segment method)": [[19, "sire.mol.Segment.size"]], "size() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.size"]], "symbol() (sire.mol.element method)": [[19, "sire.mol.Element.symbol"]], "to_list() (sire.mol.atom method)": [[19, "sire.mol.Atom.to_list"]], "to_list() (sire.mol.chain method)": [[19, "sire.mol.Chain.to_list"]], "to_list() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.to_list"]], "to_list() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.to_list"]], "to_molecule_group() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.to_molecule_group"]], "to_molecules() (sire.mol.atom method)": [[19, "sire.mol.Atom.to_molecules"]], "to_molecules() (sire.mol.chain method)": [[19, "sire.mol.Chain.to_molecules"]], "to_molecules() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.to_molecules"]], "to_molecules() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.to_molecules"]], "to_select_result() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.to_select_result"]], "to_selector() (sire.mol.atom method)": [[19, "sire.mol.Atom.to_selector"]], "to_selector() (sire.mol.chain method)": [[19, "sire.mol.Chain.to_selector"]], "to_selector() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.to_selector"]], "to_selector() (sire.mol.residue method)": [[19, "sire.mol.Residue.to_selector"]], "to_selector() (sire.mol.segment method)": [[19, "sire.mol.Segment.to_selector"]], "to_string() (sire.mol.atom method)": [[19, "sire.mol.Atom.to_string"]], "to_string() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.to_string"]], "to_string() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.to_string"]], "to_string() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.to_string"]], "to_string() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.to_string"]], "to_string() (sire.mol.chain method)": [[19, "sire.mol.Chain.to_string"]], "to_string() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.to_string"]], "to_string() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.to_string"]], "to_string() (sire.mol.element method)": [[19, "sire.mol.Element.to_string"]], "to_string() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.to_string"]], "to_string() (sire.mol.molname method)": [[19, "sire.mol.MolName.to_string"]], "to_string() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.to_string"]], "to_string() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.to_string"]], "to_string() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.to_string"]], "to_string() (sire.mol.resname method)": [[19, "sire.mol.ResName.to_string"]], "to_string() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.to_string"]], "to_string() (sire.mol.residue method)": [[19, "sire.mol.Residue.to_string"]], "to_string() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.to_string"]], "to_string() (sire.mol.segname method)": [[19, "sire.mol.SegName.to_string"]], "to_string() (sire.mol.segment method)": [[19, "sire.mol.Segment.to_string"]], "to_string() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.to_string"]], "to_string() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.to_string"]], "transition_metal() (sire.mol.element method)": [[19, "sire.mol.Element.transition_metal"]], "translate() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.translate"]], "translate() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.translate"]], "translate() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.translate"]], "triple_bond() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.triple_bond"]], "type() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.type"]], "typename() (sire.mol.atom method)": [[19, "sire.mol.Atom.typename"]], "typename() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.typename"]], "typename() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.typename"]], "typename() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.typename"]], "typename() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.typename"]], "typename() (sire.mol.chain method)": [[19, "sire.mol.Chain.typename"]], "typename() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.typename"]], "typename() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.typename"]], "typename() (sire.mol.element method)": [[19, "sire.mol.Element.typename"]], "typename() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.typename"]], "typename() (sire.mol.molname method)": [[19, "sire.mol.MolName.typename"]], "typename() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.typename"]], "typename() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.typename"]], "typename() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.typename"]], "typename() (sire.mol.resname method)": [[19, "sire.mol.ResName.typename"]], "typename() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.typename"]], "typename() (sire.mol.residue method)": [[19, "sire.mol.Residue.typename"]], "typename() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.typename"]], "typename() (sire.mol.segname method)": [[19, "sire.mol.SegName.typename"]], "typename() (sire.mol.segment method)": [[19, "sire.mol.Segment.typename"]], "typename() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.typename"]], "typename() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.typename"]], "undefined() (sire.mol.stereoscopy static method)": [[19, "sire.mol.Stereoscopy.undefined"]], "undefined_bond() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.undefined_bond"]], "up() (sire.mol.stereoscopy static method)": [[19, "sire.mol.Stereoscopy.up"]], "update() (sire.mol.atom method)": [[19, "sire.mol.Atom.update"]], "update() (sire.mol.chain method)": [[19, "sire.mol.Chain.update"]], "update() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.update"]], "update() (sire.mol.residue method)": [[19, "sire.mol.Residue.update"]], "update() (sire.mol.segment method)": [[19, "sire.mol.Segment.update"]], "update() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.update"]], "value() (sire.mol.bondtype method)": [[19, "sire.mol.BondType.value"]], "value() (sire.mol.stereoscopy method)": [[19, "sire.mol.Stereoscopy.value"]], "vdw_radius() (sire.mol.element method)": [[19, "sire.mol.Element.vdw_radius"]], "version() (sire.mol.molecule method)": [[19, "sire.mol.Molecule.version"]], "view() (sire.mol.cursor method)": [[19, "sire.mol.Cursor.view"]], "view() (sire.mol.cursors method)": [[19, "sire.mol.Cursors.view"]], "view() (sire.mol.cursorsm method)": [[19, "sire.mol.CursorsM.view"]], "view() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.view"]], "what() (sire.mol.atomidx method)": [[19, "sire.mol.AtomIdx.what"]], "what() (sire.mol.atomname method)": [[19, "sire.mol.AtomName.what"]], "what() (sire.mol.atomnum method)": [[19, "sire.mol.AtomNum.what"]], "what() (sire.mol.chainidx method)": [[19, "sire.mol.ChainIdx.what"]], "what() (sire.mol.chainname method)": [[19, "sire.mol.ChainName.what"]], "what() (sire.mol.element method)": [[19, "sire.mol.Element.what"]], "what() (sire.mol.molidx method)": [[19, "sire.mol.MolIdx.what"]], "what() (sire.mol.molname method)": [[19, "sire.mol.MolName.what"]], "what() (sire.mol.molnum method)": [[19, "sire.mol.MolNum.what"]], "what() (sire.mol.residx method)": [[19, "sire.mol.ResIdx.what"]], "what() (sire.mol.resname method)": [[19, "sire.mol.ResName.what"]], "what() (sire.mol.resnum method)": [[19, "sire.mol.ResNum.what"]], "what() (sire.mol.segidx method)": [[19, "sire.mol.SegIdx.what"]], "what() (sire.mol.segname method)": [[19, "sire.mol.SegName.what"]], "what() (sire.mol.selectormol method)": [[19, "sire.mol.SelectorMol.what"]], "approx_equal() (in module sire.search)": [[20, "sire.search.approx_equal"]], "delete_all_tokens() (in module sire.search)": [[20, "sire.search.delete_all_tokens"]], "delete_token() (in module sire.search)": [[20, "sire.search.delete_token"]], "get_approx_epsilon() (in module sire.search)": [[20, "sire.search.get_approx_epsilon"]], "get_min_protein_residues() (in module sire.search)": [[20, "sire.search.get_min_protein_residues"]], "get_protein_residue_names() (in module sire.search)": [[20, "sire.search.get_protein_residue_names"]], "get_token() (in module sire.search)": [[20, "sire.search.get_token"]], "has_token() (in module sire.search)": [[20, "sire.search.has_token"]], "set_approx_epsilon() (in module sire.search)": [[20, "sire.search.set_approx_epsilon"]], "set_min_protein_residues() (in module sire.search)": [[20, "sire.search.set_min_protein_residues"]], "set_protein_residue_names() (in module sire.search)": [[20, "sire.search.set_protein_residue_names"]], "set_token() (in module sire.search)": [[20, "sire.search.set_token"]], "sire.search": [[20, "module-sire.search"]], "atomid() (in module sire)": [[21, "sire.atomid"]], "chainid() (in module sire)": [[21, "sire.chainid"]], "disable_thumbs_up() (in module sire)": [[21, "sire.disable_thumbs_up"]], "expand() (in module sire)": [[21, "sire.expand"]], "get_thumbs_up_info() (in module sire)": [[21, "sire.get_thumbs_up_info"]], "load() (in module sire)": [[21, "sire.load"]], "load_test_files() (in module sire)": [[21, "sire.load_test_files"]], "measure() (in module sire)": [[21, "sire.measure"]], "molid() (in module sire)": [[21, "sire.molid"]], "save() (in module sire)": [[21, "sire.save"]], "save_to_string() (in module sire)": [[21, "sire.save_to_string"]], "segid() (in module sire)": [[21, "sire.segid"]], "sire": [[21, "module-sire"]], "supported_formats() (in module sire)": [[21, "sire.supported_formats"]], "thumbs_up() (in module sire)": [[21, "sire.thumbs_up"]], "tutorial_url (in module sire)": [[21, "sire.tutorial_url"]], "use_mixed_api() (in module sire)": [[21, "sire.use_mixed_api"]], "use_new_api() (in module sire)": [[21, "sire.use_new_api"]], "use_old_api() (in module sire)": [[21, "sire.use_old_api"]], "sire.stream": [[23, "module-sire.stream"]], "system (class in sire.system)": [[24, "sire.system.System"]], "angle() (sire.system.system method)": [[24, "sire.system.System.angle"]], "angles() (sire.system.system method)": [[24, "sire.system.System.angles"]], "apply() (sire.system.system method)": [[24, "sire.system.System.apply"]], "apply_reduce() (sire.system.system method)": [[24, "sire.system.System.apply_reduce"]], "atom() (sire.system.system method)": [[24, "sire.system.System.atom"]], "atoms() (sire.system.system method)": [[24, "sire.system.System.atoms"]], "bond() (sire.system.system method)": [[24, "sire.system.System.bond"]], "bonds() (sire.system.system method)": [[24, "sire.system.System.bonds"]], "chain() (sire.system.system method)": [[24, "sire.system.System.chain"]], "chains() (sire.system.system method)": [[24, "sire.system.System.chains"]], "charge() (sire.system.system method)": [[24, "sire.system.System.charge"]], "clone() (sire.system.system method)": [[24, "sire.system.System.clone"]], "coordinates() (sire.system.system method)": [[24, "sire.system.System.coordinates"]], "count() (sire.system.system method)": [[24, "sire.system.System.count"]], "cursor() (sire.system.system method)": [[24, "sire.system.System.cursor"]], "delete_frame() (sire.system.system method)": [[24, "sire.system.System.delete_frame"]], "dihedral() (sire.system.system method)": [[24, "sire.system.System.dihedral"]], "dihedrals() (sire.system.system method)": [[24, "sire.system.System.dihedrals"]], "energies() (sire.system.system method)": [[24, "sire.system.System.energies"]], "energy() (sire.system.system method)": [[24, "sire.system.System.energy"]], "evaluate() (sire.system.system method)": [[24, "sire.system.System.evaluate"]], "improper() (sire.system.system method)": [[24, "sire.system.System.improper"]], "impropers() (sire.system.system method)": [[24, "sire.system.System.impropers"]], "load_frame() (sire.system.system method)": [[24, "sire.system.System.load_frame"]], "mass() (sire.system.system method)": [[24, "sire.system.System.mass"]], "molecule() (sire.system.system method)": [[24, "sire.system.System.molecule"]], "molecules() (sire.system.system method)": [[24, "sire.system.System.molecules"]], "names() (sire.system.system method)": [[24, "sire.system.System.names"]], "num_atoms() (sire.system.system method)": [[24, "sire.system.System.num_atoms"]], "num_chains() (sire.system.system method)": [[24, "sire.system.System.num_chains"]], "num_frames() (sire.system.system method)": [[24, "sire.system.System.num_frames"]], "num_molecules() (sire.system.system method)": [[24, "sire.system.System.num_molecules"]], "num_residues() (sire.system.system method)": [[24, "sire.system.System.num_residues"]], "num_segments() (sire.system.system method)": [[24, "sire.system.System.num_segments"]], "numbers() (sire.system.system method)": [[24, "sire.system.System.numbers"]], "properties() (sire.system.system method)": [[24, "sire.system.System.properties"]], "property() (sire.system.system method)": [[24, "sire.system.System.property"]], "property_keys() (sire.system.system method)": [[24, "sire.system.System.property_keys"]], "residue() (sire.system.system method)": [[24, "sire.system.System.residue"]], "residues() (sire.system.system method)": [[24, "sire.system.System.residues"]], "save_frame() (sire.system.system method)": [[24, "sire.system.System.save_frame"]], "segment() (sire.system.system method)": [[24, "sire.system.System.segment"]], "segments() (sire.system.system method)": [[24, "sire.system.System.segments"]], "set_property() (sire.system.system method)": [[24, "sire.system.System.set_property"]], "sire.system": [[24, "module-sire.system"]], "size() (sire.system.system method)": [[24, "sire.system.System.size"]], "to_molecule_group() (sire.system.system method)": [[24, "sire.system.System.to_molecule_group"]], "trajectory() (sire.system.system method)": [[24, "sire.system.System.trajectory"]], "update() (sire.system.system method)": [[24, "sire.system.System.update"]], "view() (sire.system.system method)": [[24, "sire.system.System.view"]], "angle() (in module sire.units)": [[25, "sire.units.angle"]], "angstrom (in module sire.units)": [[25, "sire.units.angstrom"]], "convert() (in module sire.units)": [[25, "sire.units.convert"]], "length() (in module sire.units)": [[25, "sire.units.length"]], "picometer (in module sire.units)": [[25, "sire.units.picometer"]], "set_energy_unit() (in module sire.units)": [[25, "sire.units.set_energy_unit"]], "set_internal_units() (in module sire.units)": [[25, "sire.units.set_internal_units"]], "set_length_unit() (in module sire.units)": [[25, "sire.units.set_length_unit"]], "set_mass_unit() (in module sire.units)": [[25, "sire.units.set_mass_unit"]], "set_quantity_unit() (in module sire.units)": [[25, "sire.units.set_quantity_unit"]], "set_si_units() (in module sire.units)": [[25, "sire.units.set_si_units"]], "set_time_unit() (in module sire.units)": [[25, "sire.units.set_time_unit"]], "sire.units": [[25, "module-sire.units"]], "console (class in sire.utils)": [[26, "sire.utils.Console"]], "nullprofiler (class in sire.utils)": [[26, "sire.utils.NullProfiler"]], "profiler (class in sire.utils)": [[26, "sire.utils.Profiler"]], "table (class in sire.utils)": [[26, "sire.utils.Table"]], "add_column() (sire.utils.table method)": [[26, "sire.utils.Table.add_column"]], "add_row() (sire.utils.table method)": [[26, "sire.utils.Table.add_row"]], "child_total() (sire.utils.profiler method)": [[26, "sire.utils.Profiler.child_total"]], "debug() (sire.utils.console static method)": [[26, "sire.utils.Console.debug"]], "debugging_enabled() (sire.utils.console static method)": [[26, "sire.utils.Console.debugging_enabled"]], "error() (sire.utils.console static method)": [[26, "sire.utils.Console.error"]], "info() (sire.utils.console static method)": [[26, "sire.utils.Console.info"]], "is_null() (sire.utils.profiler method)": [[26, "sire.utils.Profiler.is_null"]], "name() (sire.utils.profiler method)": [[26, "sire.utils.Profiler.name"]], "panel() (sire.utils.console static method)": [[26, "sire.utils.Console.panel"]], "print() (sire.utils.console static method)": [[26, "sire.utils.Console.print"]], "print_exception() (sire.utils.console static method)": [[26, "sire.utils.Console.print_exception"]], "redirect_output() (sire.utils.console static method)": [[26, "sire.utils.Console.redirect_output"]], "rule() (sire.utils.console static method)": [[26, "sire.utils.Console.rule"]], "save() (sire.utils.console static method)": [[26, "sire.utils.Console.save"]], "set_debugging_enabled() (sire.utils.console static method)": [[26, "sire.utils.Console.set_debugging_enabled"]], "set_theme() (sire.utils.console static method)": [[26, "sire.utils.Console.set_theme"]], "sire.utils": [[26, "module-sire.utils"]], "start() (sire.utils.profiler method)": [[26, "sire.utils.Profiler.start"]], "stop() (sire.utils.profiler method)": [[26, "sire.utils.Profiler.stop"]], "supports_emojis() (sire.utils.console static method)": [[26, "sire.utils.Console.supports_emojis"]], "to_string() (sire.utils.table method)": [[26, "sire.utils.Table.to_string"]], "total() (sire.utils.profiler method)": [[26, "sire.utils.Profiler.total"]], "try_import() (in module sire.utils)": [[26, "sire.utils.try_import"]], "try_import_from() (in module sire.utils)": [[26, "sire.utils.try_import_from"]], "warning() (sire.utils.console static method)": [[26, "sire.utils.Console.warning"]], "cartesian (class in sire.vol)": [[27, "sire.vol.Cartesian"]], "periodicbox (class in sire.vol)": [[27, "sire.vol.PeriodicBox"]], "assign() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.assign"]], "assign() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.assign"]], "beyond() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.beyond"]], "beyond() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.beyond"]], "calc_angle() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_angle"]], "calc_angle() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_angle"]], "calc_dihedral() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_dihedral"]], "calc_dihedral() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_dihedral"]], "calc_dist() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_dist"]], "calc_dist() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_dist"]], "calc_dist2() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_dist2"]], "calc_dist2() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_dist2"]], "calc_dist_vector() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_dist_vector"]], "calc_dist_vector() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_dist_vector"]], "calc_dist_vectors() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_dist_vectors"]], "calc_dist_vectors() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_dist_vectors"]], "calc_inv_dist() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_inv_dist"]], "calc_inv_dist() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_inv_dist"]], "calc_inv_dist2() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.calc_inv_dist2"]], "calc_inv_dist2() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.calc_inv_dist2"]], "change_volume() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.change_volume"]], "change_volume() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.change_volume"]], "clone() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.clone"]], "clone() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.clone"]], "dimensions() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.dimensions"]], "get_box_center() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.get_box_center"]], "get_box_center() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.get_box_center"]], "get_copies_within() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.get_copies_within"]], "get_copies_within() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.get_copies_within"]], "get_images_within() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.get_images_within"]], "get_images_within() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.get_images_within"]], "get_minimum_image() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.get_minimum_image"]], "get_minimum_image() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.get_minimum_image"]], "get_random_point() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.get_random_point"]], "get_random_point() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.get_random_point"]], "is_cartesian() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.is_cartesian"]], "is_cartesian() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.is_cartesian"]], "is_periodic() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.is_periodic"]], "is_periodic() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.is_periodic"]], "max_coords() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.max_coords"]], "maximum_cutoff() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.maximum_cutoff"]], "maximum_cutoff() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.maximum_cutoff"]], "min_coords() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.min_coords"]], "minimum_distance() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.minimum_distance"]], "minimum_distance() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.minimum_distance"]], "set_dimensions() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.set_dimensions"]], "set_volume() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.set_volume"]], "set_volume() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.set_volume"]], "sire.vol": [[27, "module-sire.vol"]], "to_string() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.to_string"]], "to_string() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.to_string"]], "typename() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.typename"]], "typename() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.typename"]], "volume() (sire.vol.cartesian method)": [[27, "sire.vol.Cartesian.volume"]], "volume() (sire.vol.periodicbox method)": [[27, "sire.vol.PeriodicBox.volume"]]}})