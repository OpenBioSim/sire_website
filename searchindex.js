Search.setIndex({"alltitles": {"1. No-installation - Run in a Web Browser": [[52, "no-installation-run-in-a-web-browser"]], "2. Easy installation - Run in a conda environment": [[52, "easy-installation-run-in-a-conda-environment"]], "2023.1.0 - January 2023": [[36, "id5"]], "2023.1.1 - January 2023": [[36, "january-2023"]], "2023.1.2 - February 2023": [[36, "id4"]], "2023.1.3 - February 2023": [[36, "february-2023"]], "2023.2.0 - March 2023": [[36, "march-2023"]], "2023.2.1 - April 2023": [[36, "id3"]], "2023.2.2 - April 2023": [[36, "april-2023"]], "2023.2.3 - May 2023": [[36, "may-2023"]], "2023.3.0 - June 2023": [[36, "june-2023"]], "2023.3.1 - July 2023": [[36, "july-2023"]], "2023.3.2 - September 2023": [[36, "september-2023"]], "2023.4.0 - October 2023": [[36, "id2"]], "2023.4.1 - October 2023": [[36, "october-2023"]], "2023.4.2 - December 2023": [[36, "id1"]], "2023.5.0 - December 2023": [[36, "december-2023"]], "2023.5.1 - January 2024": [[36, "january-2024"]], "2023.5.2 - March 2024": [[36, "march-2024"]], "2024.1.0 - April 2024": [[36, "april-2024"]], "2024.2.0 - June 2024": [[36, "june-2024"]], "2024.3.0 - October 2024": [[36, "october-2024"]], "2D Views": [[42, "d-views"]], "3. Also easy installation - Run in a container": [[52, "also-easy-installation-run-in-a-container"]], "3D Views": [[42, "id1"]], "4. Harder installation - Compile from source": [[52, "harder-installation-compile-from-source"]], "5. Hardest install - build your own custom conda packages": [[52, "hardest-install-build-your-own-custom-conda-packages"]], "A. Define your runtime environment": [[52, "a-define-your-runtime-environment"]], "API": [[51, "api"]], "Accessing angles by atom or bond": [[77, "accessing-angles-by-atom-or-bond"]], "Accessing angles by residue": [[77, "accessing-angles-by-residue"]], "Accessing atom properties via views": [[81, "accessing-atom-properties-via-views"]], "Accessing bonds by atom": [[76, "accessing-bonds-by-atom"]], "Accessing bonds by residue": [[76, "accessing-bonds-by-residue"]], "Accessing by name": [[71, "accessing-by-name"]], "Accessing dihedrals by atom, bond or angle": [[78, "accessing-dihedrals-by-atom-bond-or-angle"]], "Accessing dihedrals by residue": [[78, "accessing-dihedrals-by-residue"]], "Accessing impropers by atom, bond or angle": [[79, "accessing-impropers-by-atom-bond-or-angle"]], "Accessing impropers by residue": [[79, "accessing-impropers-by-residue"]], "Accessing measurement data by column": [[90, "accessing-measurement-data-by-column"]], "Accessing the molecules": [[65, "accessing-the-molecules"]], "Acknowledgements": [[0, null], [51, "acknowledgements"]], "Advanced with and in Searches": [[39, "advanced-with-and-in-searches"]], "Alanine-dipeptide conformational landscape": [[115, null]], "Alchemical Dynamics": [[101, null]], "Alchemical Restraints": [[103, null]], "Aligning to molecules outside the trajectory": [[40, "aligning-to-molecules-outside-the-trajectory"]], "Aligning, Anchoring and Weighting": [[94, "aligning-anchoring-and-weighting"]], "All indentation should be multiples of 4 spaces. All tabs should be replaced by 4 spaces": [[44, "all-indentation-should-be-multiples-of-4-spaces-all-tabs-should-be-replaced-by-4-spaces"]], "Always code using a fixed-width font": [[44, "always-code-using-a-fixed-width-font"]], "Anaconda": [[0, "anaconda"]], "Analysing the results": [[115, "analysing-the-results"]], "And then\u2026 Install sire into a new environment": [[52, "and-then-install-sire-into-a-new-environment"]], "Angle Views and Properties": [[86, null]], "Angle properties": [[86, "angle-properties"]], "Angle views": [[86, "angle-views"]], "Annihilation": [[111, "annihilation"]], "Annihilation and Decoupling": [[111, null]], "Anything to Anything": [[95, "anything-to-anything"]], "Atom Properties": [[81, null]], "Atom identifying types": [[71, "atom-identifying-types"]], "Attribution": [[43, "attribution"]], "Automatic Kartograf mapping": [[109, "automatic-kartograf-mapping"]], "Automatic matching": [[109, "automatic-matching"]], "B. Check out the sire source code": [[52, "b-check-out-the-sire-source-code"]], "Basics": [[45, "basics"]], "BioSimSpace": [[95, "biosimspace"]], "Blog Posts": [[51, "blog-posts"]], "Bond Views and Properties": [[85, null]], "Bond properties": [[85, "bond-properties"]], "Bond views": [[85, "bond-views"]], "Boresch Restraints": [[102, "boresch-restraints"]], "C++": [[44, "c"]], "C++ Coding Style": [[45, "c-coding-style"]], "C++ Dependencies": [[0, "c-dependencies"]], "C. Create the conda build environment": [[52, "c-create-the-conda-build-environment"]], "Calculating energies across frames": [[40, "calculating-energies-across-frames"]], "Calculating energies for each view in a selection": [[92, "calculating-energies-for-each-view-in-a-selection"]], "Calculating energies of selections": [[91, "calculating-energies-of-selections"], [92, "calculating-energies-of-selections"]], "Calculating energies where the selection changes per frame": [[92, "calculating-energies-where-the-selection-changes-per-frame"]], "Calculating interaction energies between selections": [[91, "calculating-interaction-energies-between-selections"]], "Centering the view": [[42, "centering-the-view"]], "Chain identifying types": [[73, "chain-identifying-types"]], "Chain properties": [[83, "chain-properties"]], "Changelog": [[36, null], [51, "changelog"]], "Changing default units": [[41, "changing-default-units"]], "Changing the units of measurement": [[90, "changing-the-units-of-measurement"]], "Choosing colors and opacities": [[42, "choosing-colors-and-opacities"]], "Choosing options": [[38, "choosing-options"]], "Choosing the 3D representation": [[42, "choosing-the-3d-representation"]], "Citation": [[51, "citation"]], "Classes should be named using capital letters, using only the letters A-Za-z and numbers 0-9": [[44, "classes-should-be-named-using-capital-letters-using-only-the-letters-a-za-z-and-numbers-0-9"]], "Closer integration with NGLView": [[42, "closer-integration-with-nglview"]], "Code of Conduct": [[43, null]], "Coding Style": [[44, null]], "Combining units": [[41, "combining-units"]], "Committing": [[45, "committing"]], "Comparisons": [[39, "comparisons"]], "Complete Example Script": [[105, "complete-example-script"]], "Constraints and Perturbable Molecules": [[105, "constraints-and-perturbable-molecules"]], "Continuous integration and delivery": [[45, "continuous-integration-and-delivery"]], "Contributing": [[46, null], [51, "contributing"]], "Contributors": [[49, null]], "Controlling Dynamics": [[99, "controlling-dynamics"]], "Controlling individual levers": [[107, "controlling-individual-levers"]], "Controlling individual levers for individual molecules": [[107, "controlling-individual-levers-for-individual-molecules"]], "Controlling individual levers in individual forces": [[107, "controlling-individual-levers-in-individual-forces"]], "Controlling perturbations with a \u03bb-schedule": [[101, "controlling-perturbations-with-a-schedule"]], "Controlling the trajectory frequency": [[101, "controlling-the-trajectory-frequency"]], "Convenience functions": [[81, "convenience-functions"]], "Conversion from BioSimSpace": [[41, "conversion-from-biosimspace"]], "Conversion from other packages": [[41, "conversion-from-other-packages"]], "Conversion from pint": [[41, "conversion-from-pint"]], "Converting Molecules": [[95, null]], "Converting to other units": [[41, "converting-to-other-units"]], "Counting atoms": [[71, "counting-atoms"]], "Counting residues": [[72, "counting-residues"]], "Creating Custom Search Tokens": [[39, "creating-custom-search-tokens"]], "Creating Molecules from Smiles Strings": [[97, null]], "Creating a QM engine": [[113, "creating-a-qm-engine"], [114, "creating-a-qm-engine"]], "Creating a context": [[116, "creating-a-context"]], "Creating a context with sire-emle": [[115, "creating-a-context-with-sire-emle"]], "Creating a reaction coordinate": [[116, "creating-a-reaction-coordinate"]], "Creating a release": [[47, "creating-a-release"]], "Creating an EMLE calculator": [[114, "creating-an-emle-calculator"]], "Creating an EMLE torch module": [[114, "creating-an-emle-torch-module"]], "Creating merge molecules": [[109, null]], "Creating molecules from smarts": [[98, "creating-molecules-from-smarts"]], "Creating tables of RMSDs using Pandas": [[90, "creating-tables-of-rmsds-using-pandas"]], "Creating tables of measurements using pandas": [[90, "creating-tables-of-measurements-using-pandas"]], "Curly brackets should be used for all blocks, with { on a new line": [[44, "curly-brackets-should-be-used-for-all-blocks-with-on-a-new-line"]], "Cursors and Editing Properties": [[82, null]], "Custom attributes": [[45, "custom-attributes"]], "D. Create the conda recipe": [[52, "d-create-the-conda-recipe"]], "Decomposing into individual energies": [[91, "decomposing-into-individual-energies"]], "Decomposing into interaction energies": [[91, "decomposing-into-interaction-energies"]], "Decoupling": [[111, "decoupling"]], "Defining a release": [[47, "defining-a-release"]], "Deleting properties": [[82, "deleting-properties"]], "Detailed Guides": [[37, null], [51, "detailed-guides"]], "Developer\u2019s guide": [[45, null]], "Diaries": [[35, null]], "Diels-Alder reaction": [[116, null]], "Dihedral Views and Properties": [[87, null]], "Dihedral properties": [[87, "dihedral-properties"]], "Dihedral views": [[87, "dihedral-views"]], "Distance or Bond Restraints": [[102, "distance-or-bond-restraints"]], "Documentation": [[4, null], [45, "documentation"]], "E. Building the package": [[52, "e-building-the-package"]], "Either\u2026 Install a new copy of miniforge": [[52, "either-install-a-new-copy-of-miniforge"]], "Energy Trajectories": [[101, "energy-trajectories"]], "Enforcement": [[43, "enforcement"]], "Examining the perturbation": [[106, "examining-the-perturbation"]], "Exceptions are named in the same way as variables": [[44, "exceptions-are-named-in-the-same-way-as-variables"]], "Expansive (with) and Contractive (in) Searches": [[39, "expansive-with-and-contractive-in-searches"]], "Extracting the end states": [[109, "extracting-the-end-states"]], "Feature branches": [[45, "feature-branches"]], "Features": [[50, null]], "Finally, keep an eye here as more rules will be written": [[44, "finally-keep-an-eye-here-as-more-rules-will-be-written"]], "Finding all chain names": [[73, "finding-all-chain-names"]], "Finding all segment names": [[74, "finding-all-segment-names"]], "Finding atoms, residues, chains and segments in a molecule": [[75, "finding-atoms-residues-chains-and-segments-in-a-molecule"]], "Finding the Nth View that Matches": [[39, "finding-the-nth-view-that-matches"]], "Finding the atoms in a chain": [[73, "finding-the-atoms-in-a-chain"]], "Finding the atoms in a residue": [[72, "finding-the-atoms-in-a-residue"]], "Finding the atoms in a segment": [[74, "finding-the-atoms-in-a-segment"]], "Finding the atoms, residues or chains in a segment": [[74, "finding-the-atoms-residues-or-chains-in-a-segment"]], "Finding the residues in a chain": [[73, "finding-the-residues-in-a-chain"]], "Fixing atoms in place": [[102, "fixing-atoms-in-place"]], "Floating point comparisons": [[45, "floating-point-comparisons"]], "Functions (methods) should be named in the same way as classes, except that the first letter should not be capitalised": [[44, "functions-methods-should-be-named-in-the-same-way-as-classes-except-that-the-first-letter-should-not-be-capitalised"]], "GPU-accelerated free energies": [[35, "gpu-accelerated-free-energies"]], "Gemmi": [[95, "gemmi"]], "Generating smarts strings from molecules": [[98, "generating-smarts-strings-from-molecules"]], "Generating smiles strings from molecules": [[97, "generating-smiles-strings-from-molecules"]], "Getting energy components": [[91, "getting-energy-components"]], "Ghost Atoms and Softening Potentials": [[108, null]], "Ghost Atoms and Softening potentials": [[101, "ghost-atoms-and-softening-potentials"]], "GitHub (OpenBioSim): January 2023 - current": [[36, "github-openbiosim-january-2023-current"]], "GitHub (michellab): June 22nd 2015 - January 2023": [[36, "github-michellab-june-22nd-2015-january-2023"]], "Gnu Scientific Library (GSL)": [[0, "gnu-scientific-library-gsl"]], "Good practice": [[108, "good-practice"]], "Google Code: August 7th 2006 - April 1st 2015": [[36, "google-code-august-7th-2006-april-1st-2015"]], "Guidelines": [[45, "guidelines"]], "High level interface": [[101, "high-level-interface"]], "Higher level API": [[38, "higher-level-api"]], "Hosting": [[0, "hosting"]], "How to ask for help": [[54, null]], "How to track development": [[48, "how-to-track-development"]], "Hydrogen Mass Repartitioning": [[105, "hydrogen-mass-repartitioning"]], "Identifiers": [[39, "identifiers"]], "Implementation - AtomMapping": [[109, "implementation-atommapping"]], "Importing sire": [[64, null]], "Improper Views and Properties": [[88, null]], "Improper properties": [[88, "improper-properties"]], "Improper views": [[88, "improper-views"]], "Indexing Angles": [[77, null]], "Indexing Atoms": [[71, null]], "Indexing Bonds": [[76, null]], "Indexing Chains": [[73, null]], "Indexing Dihedrals": [[78, null]], "Indexing Impropers": [[79, null]], "Indexing Molecules": [[75, null]], "Indexing Residues": [[72, null]], "Indexing Segments": [[74, null]], "Indexing within searches": [[80, "indexing-within-searches"]], "Indices and tables": [[51, "indices-and-tables"]], "Inspecting the changing parameters": [[106, "inspecting-the-changing-parameters"]], "Installation": [[52, null]], "Integration with trajectories": [[42, "integration-with-trajectories"]], "Interfacing with OpenMM-ML": [[114, "interfacing-with-openmm-ml"]], "Introduction": [[113, null]], "Iterating over atoms": [[71, "iterating-over-atoms"]], "Iterating over chains": [[73, "iterating-over-chains"]], "Iterating over molecules": [[75, "iterating-over-molecules"]], "Iterating over residues": [[72, "iterating-over-residues"]], "Iterating over segments": [[74, "iterating-over-segments"]], "Iterating over trajectories": [[90, "iterating-over-trajectories"]], "Joining multiple trajectories together": [[69, "joining-multiple-trajectories-together"]], "LAP (Linear Assignment Problem Solver)": [[0, "lap-linear-assignment-problem-solver"]], "Lambda schedules and levers": [[107, null]], "Loading a molecule": [[65, null]], "Loading and joining multiple trajectories": [[40, "loading-and-joining-multiple-trajectories"]], "Loading and saving trajectories": [[69, null]], "Loading from Alphafold using a Uniprot code": [[65, "loading-from-alphafold-using-a-uniprot-code"]], "Loading from files": [[65, "loading-from-files"]], "Loading from multiple files": [[68, null]], "Loading trajectories": [[40, "loading-trajectories"]], "Loading using a PDB code": [[65, "loading-using-a-pdb-code"]], "Local Subversion: February 5th 2005 - July 25th 2006": [[36, "local-subversion-february-5th-2005-july-25th-2006"]], "Logical operators": [[39, "logical-operators"]], "Low level interface": [[101, "low-level-interface"]], "MD5": [[0, "md5"]], "Making measurements between arbitray views": [[89, "making-measurements-between-arbitray-views"]], "Making measurements between atoms": [[89, "making-measurements-between-atoms"]], "Match All Atoms, Residues, Chains etc.": [[39, "match-all-atoms-residues-chains-etc"]], "Matching atoms": [[109, "matching-atoms"]], "Matching multiple molecules": [[98, "matching-multiple-molecules"]], "Measuring Distances and Angles": [[89, null]], "Measuring Energies": [[91, null]], "Measuring Energies Across Trajectories": [[92, null]], "Measuring RMSD across a trajectory": [[90, "measuring-rmsd-across-a-trajectory"]], "Measuring Trajectories": [[90, null]], "Measuring against points in space": [[89, "measuring-against-points-in-space"]], "Measuring angles, dihedrals and impropers": [[90, "measuring-angles-dihedrals-and-impropers"]], "Measuring bond lengths over a trajectory": [[90, "measuring-bond-lengths-over-a-trajectory"]], "Merged Molecules": [[100, null]], "Merging molecules": [[109, "merging-molecules"]], "Mersenne Twister": [[0, "mersenne-twister"]], "Minimisation": [[99, "minimisation"]], "Molecular Dynamics": [[99, "molecular-dynamics"]], "Molecular Dynamics and Minimisation": [[99, null]], "Molecule Properties": [[84, null]], "Molecule identifying types": [[75, "molecule-identifying-types"]], "More complex searches": [[98, "more-complex-searches"]], "Moving Angles": [[94, "moving-angles"]], "Moving Atoms and Molecules": [[93, null]], "Moving Bonds": [[94, "moving-bonds"]], "Moving Bonds, Angles and Dihedrals": [[94, null]], "Moving Dihedrals": [[94, "moving-dihedrals"]], "Moving individual dihedrals": [[94, "moving-individual-dihedrals"]], "NetCDF": [[0, "netcdf"]], "No line should be over 90 characters long": [[44, "no-line-should-be-over-90-characters-long"]], "Numbers": [[39, "numbers"]], "One-stop function": [[112, "one-stop-function"]], "OpenBioSim | Sire": [[51, null]], "OpenMM": [[0, "openmm"], [95, "openmm"]], "OpenMM Integration": [[38, null]], "Or\u2026 Use an existing anaconda/miniconda install": [[52, "or-use-an-existing-anaconda-miniconda-install"]], "Our Pledge": [[43, "our-pledge"]], "Our Responsibilities": [[43, "our-responsibilities"]], "Our Standards": [[43, "our-standards"]], "PEGTL": [[0, "pegtl"]], "Packaging releases": [[47, null]], "Parametrizing tests": [[45, "parametrizing-tests"]], "Part 08 - QM/MM": [[63, null]], "Part 1 - Loading and Saving": [[56, null]], "Part 2 - Indexing and Searching": [[57, null]], "Part 3 - Molecular Properties": [[58, null]], "Part 4 - Measurement, Trajectories and Movement": [[59, null]], "Part 5 - Interconverting with other Packages": [[60, null]], "Part 6 - Morphs and Alchemical Free Energies": [[61, null]], "Part 7 - Merged Molecules and Lambda Levers": [[62, null]], "Performing arbitrary measurements": [[90, "performing-arbitrary-measurements"]], "Perturbation": [[106, null]], "Perturbation Files (pertfiles)": [[110, null]], "Perturbation objects": [[106, "perturbation-objects"]], "Plotting measurements": [[90, "plotting-measurements"]], "Positional Restraints": [[102, "positional-restraints"]], "Processing Free Energy Data using alchemlyb": [[104, "processing-free-energy-data-using-alchemlyb"]], "Protein Mutation": [[112, "protein-mutation"]], "Public API": [[1, null], [2, null], [3, null], [20, null], [21, null], [22, null], [23, null], [24, null], [25, null], [26, null], [27, null], [28, "module-sire"], [30, null], [31, null], [32, null], [33, null], [34, null]], "Py++": [[0, "py"]], "Python": [[0, "python"], [44, "python"]], "Python Coding Style": [[45, "python-coding-style"]], "Python Dependencies": [[0, "python-dependencies"]], "Qt 5": [[0, "qt-5"]], "Quick Start": [[51, "quick-start"]], "Quick Start Guide": [[53, null]], "RDKit": [[0, "rdkit"], [95, "rdkit"]], "Raising units to a power": [[41, "raising-units-to-a-power"]], "Reading files": [[45, "reading-files"]], "Regress": [[0, "regress"]], "Release Timetable": [[48, "release-timetable"]], "Residue identifying types": [[72, "residue-identifying-types"]], "Residue mutations": [[112, null]], "Residue properties": [[83, "residue-properties"]], "Residue, Chain and Segment Properties": [[83, null]], "Restraints": [[102, null]], "Returned View Types": [[39, "returned-view-types"]], "Roadmap": [[48, null]], "Rotation using a Cursor": [[93, "rotation-using-a-cursor"]], "Running Faster Free Energy Simulations": [[105, null]], "Running a Free Energy Perturbation Simulation": [[104, null]], "Running a QM/MM simulation": [[113, "running-a-qm-mm-simulation"], [114, "running-a-qm-mm-simulation"]], "Running a decoupling simulation": [[111, "running-a-decoupling-simulation"]], "Running an annihilation simulation": [[111, "running-an-annihilation-simulation"]], "Running dynamics and saving frames and energies": [[38, "running-dynamics-and-saving-frames-and-energies"]], "Running tests": [[45, "running-tests"]], "Running the simulation": [[115, "running-the-simulation"], [116, "running-the-simulation"]], "SI prefixes": [[41, "si-prefixes"]], "Saving 3D views to files": [[42, "saving-3d-views-to-files"]], "Saving a molecule": [[67, null]], "Saving to file trajectories": [[40, "saving-to-file-trajectories"]], "Saving to multiple files in parallel": [[40, "saving-to-multiple-files-in-parallel"]], "Saving to strings": [[67, "saving-to-strings"]], "Saving trajectories": [[40, "saving-trajectories"], [69, "saving-trajectories"]], "Saving trajectory for subsets of molecules": [[40, "saving-trajectory-for-subsets-of-molecules"]], "Scope": [[43, "scope"]], "Search for chains": [[73, "search-for-chains"]], "Search for molecules": [[75, "search-for-molecules"]], "Search for segments": [[74, "search-for-segments"]], "Searching": [[39, null], [80, null]], "Searching by Charge or Mass": [[39, "searching-by-charge-or-mass"]], "Searching by Charge using Approximate Comparisons": [[39, "searching-by-charge-using-approximate-comparisons"]], "Searching by Chemical Element": [[39, "searching-by-chemical-element"]], "Searching by Closest and Furthest": [[39, "searching-by-closest-and-furthest"]], "Searching by Count (i.e. Number of Atoms)": [[39, "searching-by-count-i-e-number-of-atoms"]], "Searching by Distance": [[39, "searching-by-distance"]], "Searching by Property": [[39, "searching-by-property"]], "Searching by charge": [[80, "searching-by-charge"]], "Searching by coordinates": [[80, "searching-by-coordinates"]], "Searching by count": [[80, "searching-by-count"]], "Searching by custom tokens": [[80, "searching-by-custom-tokens"]], "Searching by element": [[71, "searching-by-element"]], "Searching by mass": [[80, "searching-by-mass"]], "Searching by molecule type": [[80, "searching-by-molecule-type"]], "Searching by name": [[71, "searching-by-name"]], "Searching by number": [[71, "searching-by-number"]], "Searching by property": [[80, "searching-by-property"], [82, "searching-by-property"]], "Searching by wildcards (glob matching)": [[71, "searching-by-wildcards-glob-matching"]], "Searching for Bonds using in, with, from and to": [[39, "searching-for-bonds-using-in-with-from-and-to"]], "Searching for Fragments using Smarts Strings": [[98, null]], "Searching for Water or Protein Molecules": [[39, "searching-for-water-or-protein-molecules"]], "Searching for bonds": [[76, "searching-for-bonds"]], "Searching for residues": [[72, "searching-for-residues"]], "Searching using Smiles or Smarts Strings": [[39, "searching-using-smiles-or-smarts-strings"]], "Searching using smiles strings": [[97, "searching-using-smiles-strings"]], "Segment identifying types": [[74, "segment-identifying-types"]], "Segment properties": [[83, "segment-properties"]], "Setting the background color": [[42, "setting-the-background-color"]], "Setting up a new OpenMM context": [[116, "setting-up-a-new-openmm-context"]], "Setting up the EMLE engine": [[116, "setting-up-the-emle-engine"]], "Setting up the system": [[116, "setting-up-the-system"]], "Setting up umbrella sampling with OpenMM": [[115, "setting-up-umbrella-sampling-with-openmm"]], "Setting up your computer": [[45, "setting-up-your-computer"]], "Simple indexing": [[66, null]], "Sire uses doxygen-style comments": [[44, "sire-uses-doxygen-style-comments"]], "Sire-EMLE": [[114, null]], "Skipping tests": [[45, "skipping-tests"]], "Smart search terms": [[75, "smart-search-terms"]], "Smoothing and aligning frames": [[40, "smoothing-and-aligning-frames"]], "Speaking of braces, please use the above style": [[44, "speaking-of-braces-please-use-the-above-style"]], "Strings": [[39, "strings"]], "Sub-module documentation": [[4, "sub-module-documentation"]], "Sub-modules": [[29, null]], "Sub-structure matching": [[112, "sub-structure-matching"]], "Support": [[51, "support"]], "Supported file formats": [[40, "supported-file-formats"], [70, null]], "Supported units": [[41, "supported-units"]], "Supporting other formats": [[95, "supporting-other-formats"]], "Switching to Reaction Field from PME": [[105, "switching-to-reaction-field-from-pme"]], "Symmetric Input / Output": [[70, "symmetric-input-output"]], "Taylor softening": [[108, "taylor-softening"]], "Testing": [[45, "testing"]], "Testing exceptions": [[45, "testing-exceptions"]], "Thanks": [[45, "thanks"]], "Third Party Software": [[0, "third-party-software"]], "Threading Building Blocks (tbb)": [[0, "threading-building-blocks-tbb"]], "Timesteps and Constraints": [[105, "timesteps-and-constraints"]], "Top-level documentation": [[4, "top-level-documentation"]], "Tracking movement with trajectories": [[94, "tracking-movement-with-trajectories"]], "Trajectories": [[40, null]], "Trajectories and PageCache": [[40, "trajectories-and-pagecache"]], "Trajectories as frames": [[69, "trajectories-as-frames"]], "Trajectory Alignment": [[42, "trajectory-alignment"]], "Trajectory Smoothing": [[42, "trajectory-smoothing"]], "Translation using a Cursor": [[93, "translation-using-a-cursor"]], "Tutorial": [[51, "tutorial"], [55, null]], "Under the hood - GeneralUnit": [[41, "under-the-hood-generalunit"]], "Under the hood - Python to C++": [[41, "under-the-hood-python-to-c"]], "Uniquely identifying a bond": [[76, "uniquely-identifying-a-bond"]], "Uniquely identifying a chain": [[73, "uniquely-identifying-a-chain"]], "Uniquely identifying a dihedral": [[78, "uniquely-identifying-a-dihedral"]], "Uniquely identifying a molecule": [[75, "uniquely-identifying-a-molecule"]], "Uniquely identifying a residue": [[72, "uniquely-identifying-a-residue"]], "Uniquely identifying a segment": [[74, "uniquely-identifying-a-segment"]], "Uniquely identifying an angle": [[77, "uniquely-identifying-an-angle"]], "Uniquely identifying an improper": [[79, "uniquely-identifying-an-improper"]], "Uniquely identifying atoms": [[71, "uniquely-identifying-atoms"]], "Unit vectors": [[41, "unit-vectors"]], "Units": [[41, null]], "Updating internals involving ghost atoms": [[110, "updating-internals-involving-ghost-atoms"]], "Use whitespace to make the code clean": [[44, "use-whitespace-to-make-the-code-clean"]], "Using Kartograf mappings": [[109, "using-kartograf-mappings"]], "Using apply to get the properties of views in a container": [[81, "using-apply-to-get-the-properties-of-views-in-a-container"]], "Using named restraints": [[103, "using-named-restraints"]], "Using restraints in minimisation or dynamics": [[102, "using-restraints-in-minimisation-or-dynamics"]], "Using restraints in the low-level API": [[102, "using-restraints-in-the-low-level-api"]], "Variables (member data) should be named using all small case letters or numbers": [[44, "variables-member-data-should-be-named-using-all-small-case-letters-or-numbers"]], "Viewing Molecules": [[42, null]], "Viewing Molecules in 2D": [[96, null]], "Viewing merged molecules": [[100, "viewing-merged-molecules"]], "Viewing merged molecules in their environment": [[100, "viewing-merged-molecules-in-their-environment"]], "Viewing the effect of levers on a merged molecule": [[107, "viewing-the-effect-of-levers-on-a-merged-molecule"]], "Viewing trajectories": [[42, "viewing-trajectories"]], "Views": [[39, "views"]], "Virtual environments": [[45, "virtual-environments"]], "Visualising movement by saving trajectory frames": [[93, "visualising-movement-by-saving-trajectory-frames"]], "Visualising the perturbation": [[106, "visualising-the-perturbation"]], "Visualising trajectories": [[40, "visualising-trajectories"]], "Website": [[0, "website"]], "What\u2019s in a file? Using sire search": [[35, "what-s-in-a-file-using-sire-search"]], "Wishlists / suggestions": [[48, "wishlists-suggestions"]], "Workflow": [[45, "workflow"]], "Working with OpenMM": [[35, "working-with-openmm"]], "Working with RDKit": [[35, "working-with-rdkit"]], "Wrapping molecules into the current box": [[42, "wrapping-molecules-into-the-current-box"]], "Writing temporary files": [[45, "writing-temporary-files"]], "Writing tests": [[45, "writing-tests"]], "Zacharias softening": [[108, "zacharias-softening"]], "ap (ascii plot)": [[0, "ap-ascii-plot"]], "avx_mathfun": [[0, "avx-mathfun"]], "boost": [[0, "boost"]], "cmake": [[0, "cmake"]], "eig3": [[0, "eig3"]], "gemmi": [[0, "gemmi"]], "kabasch fitting": [[0, "kabasch-fitting"]], "lazy_import": [[0, "lazy-import"]], "mdanalysis": [[0, "mdanalysis"]], "pandas": [[0, "pandas"]], "pyboost11": [[0, "pyboost11"]], "rich": [[0, "rich"]], "sire module": [[28, null]], "sire.base": [[5, null]], "sire.cas": [[6, null]], "sire.convert": [[7, null]], "sire.io": [[8, null]], "sire.io.parser": [[8, "sire-io-parser"]], "sire.maths": [[9, null]], "sire.mm": [[10, null]], "sire.mol": [[11, null]], "sire.morph": [[12, null]], "sire.restraints": [[13, null]], "sire.search": [[14, null]], "sire.stream": [[15, null]], "sire.system": [[16, null]], "sire.units": [[17, null]], "sire.utils": [[18, null]], "sire.vol": [[19, null]], "sse2neon": [[0, "sse2neon"]], "sse_mathfun": [[0, "sse-mathfun"]]}, "docnames": ["acknowledgements", "api/base", "api/cas", "api/convert", "api/index", "api/index_base", "api/index_cas", "api/index_convert", "api/index_io", "api/index_maths", "api/index_mm", "api/index_mol", "api/index_morph", "api/index_restraints", "api/index_search", "api/index_stream", "api/index_system", "api/index_units", "api/index_utils", "api/index_vol", "api/io", "api/io_parser", "api/maths", "api/mm", "api/mol", "api/morph", "api/restraints", "api/search", "api/sire", "api/sire_modules", "api/stream", "api/system", "api/units", "api/utils", "api/vol", "blogposts", "changelog", "cheatsheet/index", "cheatsheet/openmm", "cheatsheet/search", "cheatsheet/trajectory", "cheatsheet/units", "cheatsheet/view", "code_of_conduct", "contributing/codestyle", "contributing/development", "contributing/index", "contributing/packaging", "contributing/roadmap", "contributors", "features", "index", "install", "quickstart/index", "support", "tutorial/index", "tutorial/index_part01", "tutorial/index_part02", "tutorial/index_part03", "tutorial/index_part04", "tutorial/index_part05", "tutorial/index_part06", "tutorial/index_part07", "tutorial/index_part08", "tutorial/part01/01_importing_sire", "tutorial/part01/02_loading_a_molecule", "tutorial/part01/03_simple_indexing", "tutorial/part01/04_saving_a_molecule", "tutorial/part01/05_loading_from_multiple_files", "tutorial/part01/06_trajectories", "tutorial/part01/07_supported_file_formats", "tutorial/part02/01_indexing_atoms", "tutorial/part02/02_indexing_residues", "tutorial/part02/03_indexing_chains", "tutorial/part02/04_indexing_segments", "tutorial/part02/05_indexing_molecules", "tutorial/part02/06_indexing_bonds", "tutorial/part02/07_indexing_angles", "tutorial/part02/08_indexing_dihedrals", "tutorial/part02/09_indexing_impropers", "tutorial/part02/10_searching", "tutorial/part03/01_atom_properties", "tutorial/part03/02_cursors", "tutorial/part03/03_residue_properties", "tutorial/part03/04_molecule_properties", "tutorial/part03/05_bond_properties", "tutorial/part03/06_angle_properties", "tutorial/part03/07_dihedral_properties", "tutorial/part03/08_improper_properties", "tutorial/part04/01_measure", "tutorial/part04/02_trajectory", "tutorial/part04/03_energies", "tutorial/part04/04_energy_trajectories", "tutorial/part04/05_movement", "tutorial/part04/06_move_internals", "tutorial/part05/01_convert", "tutorial/part05/02_view", "tutorial/part05/03_smiles", "tutorial/part05/04_smarts", "tutorial/part05/05_dynamics", "tutorial/part06/01_merge", "tutorial/part06/02_alchemical_dynamics", "tutorial/part06/03_restraints", "tutorial/part06/04_alchemical_restraints", "tutorial/part06/05_free_energy_perturbation", "tutorial/part06/06_faster_fep", "tutorial/part07/01_perturbation", "tutorial/part07/02_levers", "tutorial/part07/03_ghosts", "tutorial/part07/04_merge", "tutorial/part07/05_pertfile", "tutorial/part07/06_decouple", "tutorial/part07/07_residue", "tutorial/part08/01_intro", "tutorial/part08/02_emle", "tutorial/part08/03_adp_pmf", "tutorial/part08/04_diels_alder"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["acknowledgements.rst", "api/base.rst", "api/cas.rst", "api/convert.rst", "api/index.rst", "api/index_base.rst", "api/index_cas.rst", "api/index_convert.rst", "api/index_io.rst", "api/index_maths.rst", "api/index_mm.rst", "api/index_mol.rst", "api/index_morph.rst", "api/index_restraints.rst", "api/index_search.rst", "api/index_stream.rst", "api/index_system.rst", "api/index_units.rst", "api/index_utils.rst", "api/index_vol.rst", "api/io.rst", "api/io_parser.rst", "api/maths.rst", "api/mm.rst", "api/mol.rst", "api/morph.rst", "api/restraints.rst", "api/search.rst", "api/sire.rst", "api/sire_modules.rst", "api/stream.rst", "api/system.rst", "api/units.rst", "api/utils.rst", "api/vol.rst", "blogposts.rst", "changelog.rst", "cheatsheet/index.rst", "cheatsheet/openmm.rst", "cheatsheet/search.rst", "cheatsheet/trajectory.rst", "cheatsheet/units.rst", "cheatsheet/view.rst", "code_of_conduct.rst", "contributing/codestyle.rst", "contributing/development.rst", "contributing/index.rst", "contributing/packaging.rst", "contributing/roadmap.rst", "contributors.rst", "features.rst", "index.rst", "install.rst", "quickstart/index.rst", "support.rst", "tutorial/index.rst", "tutorial/index_part01.rst", "tutorial/index_part02.rst", "tutorial/index_part03.rst", "tutorial/index_part04.rst", "tutorial/index_part05.rst", "tutorial/index_part06.rst", "tutorial/index_part07.rst", "tutorial/index_part08.rst", "tutorial/part01/01_importing_sire.rst", "tutorial/part01/02_loading_a_molecule.rst", "tutorial/part01/03_simple_indexing.rst", "tutorial/part01/04_saving_a_molecule.rst", "tutorial/part01/05_loading_from_multiple_files.rst", "tutorial/part01/06_trajectories.rst", "tutorial/part01/07_supported_file_formats.rst", "tutorial/part02/01_indexing_atoms.rst", "tutorial/part02/02_indexing_residues.rst", "tutorial/part02/03_indexing_chains.rst", "tutorial/part02/04_indexing_segments.rst", "tutorial/part02/05_indexing_molecules.rst", "tutorial/part02/06_indexing_bonds.rst", "tutorial/part02/07_indexing_angles.rst", "tutorial/part02/08_indexing_dihedrals.rst", "tutorial/part02/09_indexing_impropers.rst", "tutorial/part02/10_searching.rst", "tutorial/part03/01_atom_properties.rst", "tutorial/part03/02_cursors.rst", "tutorial/part03/03_residue_properties.rst", "tutorial/part03/04_molecule_properties.rst", "tutorial/part03/05_bond_properties.rst", "tutorial/part03/06_angle_properties.rst", "tutorial/part03/07_dihedral_properties.rst", "tutorial/part03/08_improper_properties.rst", "tutorial/part04/01_measure.rst", "tutorial/part04/02_trajectory.rst", "tutorial/part04/03_energies.rst", "tutorial/part04/04_energy_trajectories.rst", "tutorial/part04/05_movement.rst", "tutorial/part04/06_move_internals.rst", "tutorial/part05/01_convert.rst", "tutorial/part05/02_view.rst", "tutorial/part05/03_smiles.rst", "tutorial/part05/04_smarts.rst", "tutorial/part05/05_dynamics.rst", "tutorial/part06/01_merge.rst", "tutorial/part06/02_alchemical_dynamics.rst", "tutorial/part06/03_restraints.rst", "tutorial/part06/04_alchemical_restraints.rst", "tutorial/part06/05_free_energy_perturbation.rst", "tutorial/part06/06_faster_fep.rst", "tutorial/part07/01_perturbation.rst", "tutorial/part07/02_levers.rst", "tutorial/part07/03_ghosts.rst", "tutorial/part07/04_merge.rst", "tutorial/part07/05_pertfile.rst", "tutorial/part07/06_decouple.rst", "tutorial/part07/07_residue.rst", "tutorial/part08/01_intro.rst", "tutorial/part08/02_emle.rst", "tutorial/part08/03_adp_pmf.rst", "tutorial/part08/04_diels_alder.rst"], "indexentries": {"a() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.a", false]], "a() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.a", false]], "aabox() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.aabox", false]], "actinide() (sire.mol.element method)": [[24, "sire.mol.Element.actinide", false]], "add() (sire.cas.expression method)": [[2, "sire.cas.Expression.add", false]], "add() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.add", false]], "add() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.add", false]], "add() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.add", false]], "add() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.add", false]], "add() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.add", false]], "add() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.add", false]], "add() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.add", false]], "add() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.add", false]], "add() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.add", false]], "add() (sire.system.system method)": [[31, "sire.system.System.add", false]], "add_annihilate_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_annihilate_stage", false]], "add_charge_scale_stages() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_charge_scale_stages", false]], "add_column() (sire.utils.table method)": [[33, "sire.utils.Table.add_column", false]], "add_decouple_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_decouple_stage", false]], "add_force() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_force", false]], "add_forces() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_forces", false]], "add_lever() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_lever", false]], "add_lever() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.add_lever", false]], "add_levers() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_levers", false]], "add_link() (sire.base.properties method)": [[1, "sire.base.Properties.add_link", false]], "add_morph_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_morph_stage", false]], "add_perturbable_molecule() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.add_perturbable_molecule", false]], "add_prefix() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.add_prefix", false]], "add_restraint_index() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.add_restraint_index", false]], "add_row() (sire.utils.table method)": [[33, "sire.utils.Table.add_row", false]], "add_shared_property() (sire.system.system method)": [[31, "sire.system.System.add_shared_property", false]], "add_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.add_stage", false]], "add_suffix() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.add_suffix", false]], "align() (in module sire.maths)": [[22, "sire.maths.align", false]], "align() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.align", false]], "align() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.align", false]], "align_to0() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.align_to0", false]], "align_to1() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.align_to1", false]], "alkali_earth_metal() (sire.mol.element method)": [[24, "sire.mol.Element.alkali_earth_metal", false]], "alkali_metal() (sire.mol.element method)": [[24, "sire.mol.Element.alkali_metal", false]], "all_metadata() (sire.base.properties method)": [[1, "sire.base.Properties.all_metadata", false]], "alpha() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.alpha", false]], "alternate_name() (sire.mol.atom method)": [[24, "sire.mol.Atom.alternate_name", false]], "alternate_name() (sire.mol.residue method)": [[24, "sire.mol.Residue.alternate_name", false]], "amberangle (class in sire.mm)": [[23, "sire.mm.AmberAngle", false]], "amberbond (class in sire.mm)": [[23, "sire.mm.AmberBond", false]], "amberdihedral (class in sire.mm)": [[23, "sire.mm.AmberDihedral", false]], "amberdihpart (class in sire.mm)": [[23, "sire.mm.AmberDihPart", false]], "angle (class in sire.mm)": [[23, "sire.mm.Angle", false]], "angle() (in module sire.units)": [[32, "sire.units.angle", false]], "angle() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.angle", false]], "angle() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.angle", false]], "angle() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.angle", false]], "angle() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.angle", false]], "angle() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.angle", false]], "angle() (sire.system.system method)": [[31, "sire.system.System.angle", false]], "angle0() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.angle0", false]], "angle1() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.angle1", false]], "angle2() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.angle2", false]], "angles() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.angles", false]], "angles() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.angles", false]], "angles() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.angles", false]], "angles() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.angles", false]], "angles() (sire.system.system method)": [[31, "sire.system.System.angles", false]], "angstrom (in module sire.units)": [[32, "sire.units.angstrom", false]], "annihilate() (in module sire.morph)": [[25, "sire.morph.annihilate", false]], "append() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.append", false]], "append_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.append_stage", false]], "apply() (sire.maths.transform method)": [[22, "sire.maths.Transform.apply", false]], "apply() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.apply", false]], "apply() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.apply", false]], "apply() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.apply", false]], "apply() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.apply", false]], "apply() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.apply", false]], "apply() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.apply", false]], "apply() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.apply", false]], "apply() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.apply", false]], "apply() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.apply", false]], "apply() (sire.system.system method)": [[31, "sire.system.System.apply", false]], "apply_reduce() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.apply_reduce", false]], "apply_reduce() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.apply_reduce", false]], "apply_reduce() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.apply_reduce", false]], "apply_reduce() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.apply_reduce", false]], "apply_reduce() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.apply_reduce", false]], "apply_reduce() (sire.system.system method)": [[31, "sire.system.System.apply_reduce", false]], "approx_equal() (in module sire.search)": [[27, "sire.search.approx_equal", false]], "approx_greater() (in module sire.search)": [[27, "sire.search.approx_greater", false]], "approx_greater_equal() (in module sire.search)": [[27, "sire.search.approx_greater_equal", false]], "approx_less() (in module sire.search)": [[27, "sire.search.approx_less", false]], "approx_less_equal() (in module sire.search)": [[27, "sire.search.approx_less_equal", false]], "approx_not_equal() (in module sire.search)": [[27, "sire.search.approx_not_equal", false]], "aromatic_bond() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.aromatic_bond", false]], "as_array() (sire.base.properties method)": [[1, "sire.base.Properties.as_array", false]], "as_boolean() (sire.base.properties method)": [[1, "sire.base.Properties.as_boolean", false]], "as_double() (sire.base.properties method)": [[1, "sire.base.Properties.as_double", false]], "as_integer() (sire.base.properties method)": [[1, "sire.base.Properties.as_integer", false]], "as_string() (sire.base.properties method)": [[1, "sire.base.Properties.as_string", false]], "as_unit() (sire.base.properties method)": [[1, "sire.base.Properties.as_unit", false]], "assert_contains() (sire.mm.angle method)": [[23, "sire.mm.Angle.assert_contains", false]], "assert_contains() (sire.mm.bond method)": [[23, "sire.mm.Bond.assert_contains", false]], "assert_contains() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.assert_contains", false]], "assert_contains() (sire.mm.improper method)": [[23, "sire.mm.Improper.assert_contains", false]], "assert_contains() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.assert_contains", false]], "assert_contains() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.assert_contains", false]], "assert_contains() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.assert_contains", false]], "assert_contains() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.assert_contains", false]], "assert_contains() (sire.mol.atom method)": [[24, "sire.mol.Atom.assert_contains", false]], "assert_contains() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.assert_contains", false]], "assert_contains() (sire.mol.chain method)": [[24, "sire.mol.Chain.assert_contains", false]], "assert_contains() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assert_contains", false]], "assert_contains_metadata() (sire.base.properties method)": [[1, "sire.base.Properties.assert_contains_metadata", false]], "assert_contains_metadata() (sire.mol.atom method)": [[24, "sire.mol.Atom.assert_contains_metadata", false]], "assert_contains_metadata() (sire.mol.chain method)": [[24, "sire.mol.Chain.assert_contains_metadata", false]], "assert_contains_metadata() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assert_contains_metadata", false]], "assert_contains_metadata() (sire.mol.residue method)": [[24, "sire.mol.Residue.assert_contains_metadata", false]], "assert_contains_metadata() (sire.mol.segment method)": [[24, "sire.mol.Segment.assert_contains_metadata", false]], "assert_contains_property() (sire.base.properties method)": [[1, "sire.base.Properties.assert_contains_property", false]], "assert_contains_property() (sire.mol.atom method)": [[24, "sire.mol.Atom.assert_contains_property", false]], "assert_contains_property() (sire.mol.chain method)": [[24, "sire.mol.Chain.assert_contains_property", false]], "assert_contains_property() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assert_contains_property", false]], "assert_contains_property() (sire.mol.residue method)": [[24, "sire.mol.Residue.assert_contains_property", false]], "assert_contains_property() (sire.mol.segment method)": [[24, "sire.mol.Segment.assert_contains_property", false]], "assert_has_metadata() (sire.mm.angle method)": [[23, "sire.mm.Angle.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.bond method)": [[23, "sire.mm.Bond.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.improper method)": [[23, "sire.mm.Improper.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.assert_has_metadata", false]], "assert_has_metadata() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.assert_has_metadata", false]], "assert_has_metadata() (sire.mol.atom method)": [[24, "sire.mol.Atom.assert_has_metadata", false]], "assert_has_metadata() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.assert_has_metadata", false]], "assert_has_metadata() (sire.mol.chain method)": [[24, "sire.mol.Chain.assert_has_metadata", false]], "assert_has_metadata() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assert_has_metadata", false]], "assert_has_property() (sire.mm.angle method)": [[23, "sire.mm.Angle.assert_has_property", false]], "assert_has_property() (sire.mm.bond method)": [[23, "sire.mm.Bond.assert_has_property", false]], "assert_has_property() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.assert_has_property", false]], "assert_has_property() (sire.mm.improper method)": [[23, "sire.mm.Improper.assert_has_property", false]], "assert_has_property() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.assert_has_property", false]], "assert_has_property() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.assert_has_property", false]], "assert_has_property() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.assert_has_property", false]], "assert_has_property() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.assert_has_property", false]], "assert_has_property() (sire.mol.atom method)": [[24, "sire.mol.Atom.assert_has_property", false]], "assert_has_property() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.assert_has_property", false]], "assert_has_property() (sire.mol.chain method)": [[24, "sire.mol.Chain.assert_has_property", false]], "assert_has_property() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assert_has_property", false]], "assert_imported() (in module sire.utils)": [[33, "sire.utils.assert_imported", false]], "assert_is_lj_parameter() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.assert_is_lj_parameter", false]], "assert_same_molecule() (sire.mm.angle method)": [[23, "sire.mm.Angle.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.bond method)": [[23, "sire.mm.Bond.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.improper method)": [[23, "sire.mm.Improper.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.assert_same_molecule", false]], "assert_same_molecule() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.assert_same_molecule", false]], "assert_same_molecule() (sire.mol.atom method)": [[24, "sire.mol.Atom.assert_same_molecule", false]], "assert_same_molecule() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.assert_same_molecule", false]], "assert_same_molecule() (sire.mol.chain method)": [[24, "sire.mol.Chain.assert_same_molecule", false]], "assert_same_molecule() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assert_same_molecule", false]], "assert_same_size() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.assert_same_size", false]], "assert_single_molecule() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.assert_single_molecule", false]], "assert_valid() (sire.base.pagecache method)": [[1, "sire.base.PageCache.assert_valid", false]], "assert_valid_index() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.assert_valid_index", false]], "assertvalid() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.assertValid", false]], "assertvalid() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.assertValid", false]], "assign() (sire.base.pagecache method)": [[1, "sire.base.PageCache.assign", false]], "assign() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.assign", false]], "assign() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.assign", false]], "assign() (sire.base.properties method)": [[1, "sire.base.Properties.assign", false]], "assign() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.assign", false]], "assign() (sire.cas.expression method)": [[2, "sire.cas.Expression.assign", false]], "assign() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.assign", false]], "assign() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.assign", false]], "assign() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.assign", false]], "assign() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.assign", false]], "assign() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.assign", false]], "assign() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.assign", false]], "assign() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.assign", false]], "assign() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.assign", false]], "assign() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.assign", false]], "assign() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.assign", false]], "assign() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.assign", false]], "assign() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.assign", false]], "assign() (sire.maths.transform method)": [[22, "sire.maths.Transform.assign", false]], "assign() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.assign", false]], "assign() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.assign", false]], "assign() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.assign", false]], "assign() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.assign", false]], "assign() (sire.mm.angle method)": [[23, "sire.mm.Angle.assign", false]], "assign() (sire.mm.bond method)": [[23, "sire.mm.Bond.assign", false]], "assign() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.assign", false]], "assign() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.assign", false]], "assign() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.assign", false]], "assign() (sire.mm.improper method)": [[23, "sire.mm.Improper.assign", false]], "assign() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.assign", false]], "assign() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.assign", false]], "assign() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.assign", false]], "assign() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.assign", false]], "assign() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.assign", false]], "assign() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.assign", false]], "assign() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.assign", false]], "assign() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.assign", false]], "assign() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.assign", false]], "assign() (sire.mol.atom method)": [[24, "sire.mol.Atom.assign", false]], "assign() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.assign", false]], "assign() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.assign", false]], "assign() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.assign", false]], "assign() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.assign", false]], "assign() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.assign", false]], "assign() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.assign", false]], "assign() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.assign", false]], "assign() (sire.mol.chain method)": [[24, "sire.mol.Chain.assign", false]], "assign() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.assign", false]], "assign() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.assign", false]], "assign() (sire.mol.element method)": [[24, "sire.mol.Element.assign", false]], "assign() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.assign", false]], "assign() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.assign", false]], "assign() (sire.mol.molname method)": [[24, "sire.mol.MolName.assign", false]], "assign() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.assign", false]], "assign() (sire.mol.residue method)": [[24, "sire.mol.Residue.assign", false]], "assign() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.assign", false]], "assign() (sire.mol.resname method)": [[24, "sire.mol.ResName.assign", false]], "assign() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.assign", false]], "assign() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.assign", false]], "assign() (sire.mol.segment method)": [[24, "sire.mol.Segment.assign", false]], "assign() (sire.mol.segname method)": [[24, "sire.mol.SegName.assign", false]], "assign() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.assign", false]], "assign() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.assign", false]], "assign() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.assign", false]], "assign() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.assign", false]], "assign() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.assign", false]], "assign() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.assign", false]], "at() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.at", false]], "at() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.at", false]], "at() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.at", false]], "at() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.at", false]], "atom (class in sire.mol)": [[24, "sire.mol.Atom", false]], "atom() (sire.mm.angle method)": [[23, "sire.mm.Angle.atom", false]], "atom() (sire.mm.bond method)": [[23, "sire.mm.Bond.atom", false]], "atom() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.atom", false]], "atom() (sire.mm.improper method)": [[23, "sire.mm.Improper.atom", false]], "atom() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.atom", false]], "atom() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.atom", false]], "atom() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.atom", false]], "atom() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.atom", false]], "atom() (sire.mol.atom method)": [[24, "sire.mol.Atom.atom", false]], "atom() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.atom", false]], "atom() (sire.mol.chain method)": [[24, "sire.mol.Chain.atom", false]], "atom() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.atom", false]], "atom() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.atom", false]], "atom() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.atom", false]], "atom() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.atom", false]], "atom() (sire.mol.residue method)": [[24, "sire.mol.Residue.atom", false]], "atom() (sire.mol.segment method)": [[24, "sire.mol.Segment.atom", false]], "atom() (sire.system.system method)": [[31, "sire.system.System.atom", false]], "atom0() (sire.mm.angle method)": [[23, "sire.mm.Angle.atom0", false]], "atom0() (sire.mm.bond method)": [[23, "sire.mm.Bond.atom0", false]], "atom0() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.atom0", false]], "atom0() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.atom0", false]], "atom0() (sire.mm.improper method)": [[23, "sire.mm.Improper.atom0", false]], "atom1() (sire.mm.angle method)": [[23, "sire.mm.Angle.atom1", false]], "atom1() (sire.mm.bond method)": [[23, "sire.mm.Bond.atom1", false]], "atom1() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.atom1", false]], "atom1() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.atom1", false]], "atom1() (sire.mm.improper method)": [[23, "sire.mm.Improper.atom1", false]], "atom2() (sire.mm.angle method)": [[23, "sire.mm.Angle.atom2", false]], "atom2() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.atom2", false]], "atom2() (sire.mm.improper method)": [[23, "sire.mm.Improper.atom2", false]], "atom3() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.atom3", false]], "atom3() (sire.mm.improper method)": [[23, "sire.mm.Improper.atom3", false]], "atom_idxs() (sire.mol.chain method)": [[24, "sire.mol.Chain.atom_idxs", false]], "atom_idxs() (sire.mol.residue method)": [[24, "sire.mol.Residue.atom_idxs", false]], "atom_idxs() (sire.mol.segment method)": [[24, "sire.mol.Segment.atom_idxs", false]], "atom_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.atom_restraints", false]], "atomid() (in module sire)": [[28, "sire.atomid", false]], "atomidx (class in sire.mol)": [[24, "sire.mol.AtomIdx", false]], "atommapping (class in sire.mol)": [[24, "sire.mol.AtomMapping", false]], "atommatch (class in sire.mol)": [[24, "sire.mol.AtomMatch", false]], "atommatchm (class in sire.mol)": [[24, "sire.mol.AtomMatchM", false]], "atomname (class in sire.mol)": [[24, "sire.mol.AtomName", false]], "atomnum (class in sire.mol)": [[24, "sire.mol.AtomNum", false]], "atoms() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.atoms", false]], "atoms() (sire.mm.angle method)": [[23, "sire.mm.Angle.atoms", false]], "atoms() (sire.mm.bond method)": [[23, "sire.mm.Bond.atoms", false]], "atoms() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.atoms", false]], "atoms() (sire.mm.improper method)": [[23, "sire.mm.Improper.atoms", false]], "atoms() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.atoms", false]], "atoms() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.atoms", false]], "atoms() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.atoms", false]], "atoms() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.atoms", false]], "atoms() (sire.mol.atom method)": [[24, "sire.mol.Atom.atoms", false]], "atoms() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.atoms", false]], "atoms() (sire.mol.chain method)": [[24, "sire.mol.Chain.atoms", false]], "atoms() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.atoms", false]], "atoms() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.atoms", false]], "atoms() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.atoms", false]], "atoms() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.atoms", false]], "atoms() (sire.mol.residue method)": [[24, "sire.mol.Residue.atoms", false]], "atoms() (sire.mol.segment method)": [[24, "sire.mol.Segment.atoms", false]], "atoms() (sire.system.system method)": [[31, "sire.system.System.atoms", false]], "atoms0() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.atoms0", false]], "atoms0() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.atoms0", false]], "atoms1() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.atoms1", false]], "atoms1() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.atoms1", false]], "b() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.b", false]], "b() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.b", false]], "b_unit() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.b_unit", false]], "base() (sire.cas.expression method)": [[2, "sire.cas.Expression.base", false]], "beta() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.beta", false]], "beyond() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.beyond", false]], "beyond() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.beyond", false]], "beyond() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.beyond", false]], "biological() (sire.mol.element method)": [[24, "sire.mol.Element.biological", false]], "biological_element() (sire.mol.element method)": [[24, "sire.mol.Element.biological_element", false]], "biosimspace_to_sire() (in module sire.convert)": [[3, "sire.convert.biosimspace_to_sire", false]], "blue() (sire.mol.element method)": [[24, "sire.mol.Element.blue", false]], "bond (class in sire.mm)": [[23, "sire.mm.Bond", false]], "bond() (in module sire.restraints)": [[26, "sire.restraints.bond", false]], "bond() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.bond", false]], "bond() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.bond", false]], "bond() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.bond", false]], "bond() (sire.system.system method)": [[31, "sire.system.System.bond", false]], "bond_order_radius() (sire.mol.element method)": [[24, "sire.mol.Element.bond_order_radius", false]], "bondorder (class in sire.mol)": [[24, "sire.mol.BondOrder", false]], "bondrestraint (class in sire.mm)": [[23, "sire.mm.BondRestraint", false]], "bondrestraints (class in sire.mm)": [[23, "sire.mm.BondRestraints", false]], "bonds() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.bonds", false]], "bonds() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.bonds", false]], "bonds() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.bonds", false]], "bonds() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.bonds", false]], "bonds() (sire.system.system method)": [[31, "sire.system.System.bonds", false]], "boresch() (in module sire.restraints)": [[26, "sire.restraints.boresch", false]], "box_matrix() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.box_matrix", false]], "box_matrix() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.box_matrix", false]], "box_matrix() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.box_matrix", false]], "box_vectors() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.box_vectors", false]], "c() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.c", false]], "c_unit() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.c_unit", false]], "cache_dir() (sire.base.pagecache method)": [[1, "sire.base.PageCache.cache_dir", false]], "calc_angle() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_angle", false]], "calc_angle() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_angle", false]], "calc_angle() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_angle", false]], "calc_dihedral() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_dihedral", false]], "calc_dihedral() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_dihedral", false]], "calc_dihedral() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_dihedral", false]], "calc_dist() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_dist", false]], "calc_dist() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_dist", false]], "calc_dist() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_dist", false]], "calc_dist2() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_dist2", false]], "calc_dist2() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_dist2", false]], "calc_dist2() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_dist2", false]], "calc_dist_vector() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_dist_vector", false]], "calc_dist_vector() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_dist_vector", false]], "calc_dist_vector() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_dist_vector", false]], "calc_dist_vectors() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_dist_vectors", false]], "calc_dist_vectors() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_dist_vectors", false]], "calc_dist_vectors() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_dist_vectors", false]], "calc_inv_dist() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_inv_dist", false]], "calc_inv_dist() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_inv_dist", false]], "calc_inv_dist() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_inv_dist", false]], "calc_inv_dist2() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.calc_inv_dist2", false]], "calc_inv_dist2() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.calc_inv_dist2", false]], "calc_inv_dist2() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.calc_inv_dist2", false]], "cartesian (class in sire.vol)": [[34, "sire.vol.Cartesian", false]], "cell_matrix() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.cell_matrix", false]], "centroid_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.centroid_restraints", false]], "cg_atom_idx() (sire.mol.atom method)": [[24, "sire.mol.Atom.cg_atom_idx", false]], "chain (class in sire.mol)": [[24, "sire.mol.Chain", false]], "chain() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.chain", false]], "chain() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.chain", false]], "chain() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.chain", false]], "chain() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.chain", false]], "chain() (sire.mol.atom method)": [[24, "sire.mol.Atom.chain", false]], "chain() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.chain", false]], "chain() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.chain", false]], "chain() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.chain", false]], "chain() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.chain", false]], "chain() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.chain", false]], "chain() (sire.system.system method)": [[31, "sire.system.System.chain", false]], "chainid() (in module sire)": [[28, "sire.chainid", false]], "chainidx (class in sire.mol)": [[24, "sire.mol.ChainIdx", false]], "chainname (class in sire.mol)": [[24, "sire.mol.ChainName", false]], "chains() (sire.mm.angle method)": [[23, "sire.mm.Angle.chains", false]], "chains() (sire.mm.bond method)": [[23, "sire.mm.Bond.chains", false]], "chains() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.chains", false]], "chains() (sire.mm.improper method)": [[23, "sire.mm.Improper.chains", false]], "chains() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.chains", false]], "chains() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.chains", false]], "chains() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.chains", false]], "chains() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.chains", false]], "chains() (sire.mol.atom method)": [[24, "sire.mol.Atom.chains", false]], "chains() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.chains", false]], "chains() (sire.mol.chain method)": [[24, "sire.mol.Chain.chains", false]], "chains() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.chains", false]], "chains() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.chains", false]], "chains() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.chains", false]], "chains() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.chains", false]], "chains() (sire.mol.residue method)": [[24, "sire.mol.Residue.chains", false]], "chains() (sire.mol.segment method)": [[24, "sire.mol.Segment.chains", false]], "chains() (sire.system.system method)": [[31, "sire.system.System.chains", false]], "change_volume() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.change_volume", false]], "change_volume() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.change_volume", false]], "changed_angles() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.changed_angles", false]], "changed_atoms() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.changed_atoms", false]], "changed_bonds() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.changed_bonds", false]], "changed_constraints() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.changed_constraints", false]], "changed_exceptions() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.changed_exceptions", false]], "changed_torsions() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.changed_torsions", false]], "charge() (sire.system.system method)": [[31, "sire.system.System.charge", false]], "charge_scaled_annihilate() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.charge_scaled_annihilate", false]], "charge_scaled_decouple() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.charge_scaled_decouple", false]], "charge_scaled_morph() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.charge_scaled_morph", false]], "checked_offset() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.checked_offset", false]], "child_total() (sire.utils.profiler method)": [[33, "sire.utils.Profiler.child_total", false]], "children() (sire.cas.expression method)": [[2, "sire.cas.Expression.children", false]], "children() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.children", false]], "clamp() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.clamp", false]], "clear() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.clear", false]], "clear() (sire.base.properties method)": [[1, "sire.base.Properties.clear", false]], "clear() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.clear", false]], "clear_default_units() (in module sire.units)": [[32, "sire.units.clear_default_units", false]], "clear_energy_trajectory() (sire.system.system method)": [[31, "sire.system.System.clear_energy_trajectory", false]], "clear_properties() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.clear_properties", false]], "clone() (sire.base.pagecache method)": [[1, "sire.base.PageCache.clone", false]], "clone() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.clone", false]], "clone() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.clone", false]], "clone() (sire.base.properties method)": [[1, "sire.base.Properties.clone", false]], "clone() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.clone", false]], "clone() (sire.cas.expression method)": [[2, "sire.cas.Expression.clone", false]], "clone() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.clone", false]], "clone() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.clone", false]], "clone() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.clone", false]], "clone() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.clone", false]], "clone() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.clone", false]], "clone() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.clone", false]], "clone() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.clone", false]], "clone() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.clone", false]], "clone() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.clone", false]], "clone() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.clone", false]], "clone() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.clone", false]], "clone() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.clone", false]], "clone() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.clone", false]], "clone() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.clone", false]], "clone() (sire.maths.transform method)": [[22, "sire.maths.Transform.clone", false]], "clone() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.clone", false]], "clone() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.clone", false]], "clone() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.clone", false]], "clone() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.clone", false]], "clone() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.clone", false]], "clone() (sire.mm.angle method)": [[23, "sire.mm.Angle.clone", false]], "clone() (sire.mm.bond method)": [[23, "sire.mm.Bond.clone", false]], "clone() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.clone", false]], "clone() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.clone", false]], "clone() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.clone", false]], "clone() (sire.mm.improper method)": [[23, "sire.mm.Improper.clone", false]], "clone() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.clone", false]], "clone() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.clone", false]], "clone() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.clone", false]], "clone() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.clone", false]], "clone() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.clone", false]], "clone() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.clone", false]], "clone() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.clone", false]], "clone() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.clone", false]], "clone() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.clone", false]], "clone() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.clone", false]], "clone() (sire.mol.atom method)": [[24, "sire.mol.Atom.clone", false]], "clone() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.clone", false]], "clone() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.clone", false]], "clone() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.clone", false]], "clone() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.clone", false]], "clone() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.clone", false]], "clone() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.clone", false]], "clone() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.clone", false]], "clone() (sire.mol.chain method)": [[24, "sire.mol.Chain.clone", false]], "clone() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.clone", false]], "clone() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.clone", false]], "clone() (sire.mol.element method)": [[24, "sire.mol.Element.clone", false]], "clone() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.clone", false]], "clone() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.clone", false]], "clone() (sire.mol.molname method)": [[24, "sire.mol.MolName.clone", false]], "clone() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.clone", false]], "clone() (sire.mol.residue method)": [[24, "sire.mol.Residue.clone", false]], "clone() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.clone", false]], "clone() (sire.mol.resname method)": [[24, "sire.mol.ResName.clone", false]], "clone() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.clone", false]], "clone() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.clone", false]], "clone() (sire.mol.segment method)": [[24, "sire.mol.Segment.clone", false]], "clone() (sire.mol.segname method)": [[24, "sire.mol.SegName.clone", false]], "clone() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.clone", false]], "clone() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.clone", false]], "clone() (sire.system.system method)": [[31, "sire.system.System.clone", false]], "clone() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.clone", false]], "clone() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.clone", false]], "clone() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.clone", false]], "clone() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.clone", false]], "color() (sire.mol.element method)": [[24, "sire.mol.Element.color", false]], "color_name() (sire.mol.element method)": [[24, "sire.mol.Element.color_name", false]], "column0() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.column0", false]], "column1() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.column1", false]], "column2() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.column2", false]], "combine() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.combine", false]], "combine_arithmetic() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.combine_arithmetic", false]], "combine_geometric() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.combine_geometric", false]], "combining_rules (sire.mm.ljparameter attribute)": [[23, "sire.mm.LJParameter.combining_rules", false]], "commit() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.commit", false]], "commit() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.commit", false]], "commit() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.commit", false]], "commit() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.commit", false]], "commit() (sire.mol.minimisation method)": [[24, "sire.mol.Minimisation.commit", false]], "commit() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.commit", false]], "conjugate() (sire.cas.expression method)": [[2, "sire.cas.Expression.conjugate", false]], "console (class in sire.utils)": [[33, "sire.utils.Console", false]], "const_data() (sire.mm.angle method)": [[23, "sire.mm.Angle.const_data", false]], "const_data() (sire.mm.bond method)": [[23, "sire.mm.Bond.const_data", false]], "const_data() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.const_data", false]], "const_data() (sire.mm.improper method)": [[23, "sire.mm.Improper.const_data", false]], "const_data() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.const_data", false]], "const_data() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.const_data", false]], "const_data() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.const_data", false]], "const_data() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.const_data", false]], "const_data() (sire.mol.atom method)": [[24, "sire.mol.Atom.const_data", false]], "const_data() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.const_data", false]], "const_data() (sire.mol.chain method)": [[24, "sire.mol.Chain.const_data", false]], "const_data() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.const_data", false]], "constraint() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.constraint", false]], "constraint() (sire.mol.minimisation method)": [[24, "sire.mol.Minimisation.constraint", false]], "construct() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.construct", false]], "construct() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.construct", false]], "construct() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.construct", false]], "construct() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.construct", false]], "construct() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.construct", false]], "contains() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.contains", false]], "contains() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.contains", false]], "contains() (sire.mol.chain method)": [[24, "sire.mol.Chain.contains", false]], "contains() (sire.mol.residue method)": [[24, "sire.mol.Residue.contains", false]], "contains() (sire.mol.segment method)": [[24, "sire.mol.Segment.contains", false]], "contains() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.contains", false]], "context() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.context", false]], "convert() (in module sire.units)": [[32, "sire.units.convert", false]], "coordgroup (class in sire.vol)": [[34, "sire.vol.CoordGroup", false]], "coordinates() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.coordinates", false]], "coordinates() (sire.system.system method)": [[31, "sire.system.System.coordinates", false]], "count() (sire.base.properties method)": [[1, "sire.base.Properties.count", false]], "count() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.count", false]], "count() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.count", false]], "count() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.count", false]], "count() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.count", false]], "count() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.count", false]], "count() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.count", false]], "count() (sire.mm.angle method)": [[23, "sire.mm.Angle.count", false]], "count() (sire.mm.bond method)": [[23, "sire.mm.Bond.count", false]], "count() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.count", false]], "count() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.count", false]], "count() (sire.mm.improper method)": [[23, "sire.mm.Improper.count", false]], "count() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.count", false]], "count() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.count", false]], "count() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.count", false]], "count() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.count", false]], "count() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.count", false]], "count() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.count", false]], "count() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.count", false]], "count() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.count", false]], "count() (sire.mol.atom method)": [[24, "sire.mol.Atom.count", false]], "count() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.count", false]], "count() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.count", false]], "count() (sire.mol.chain method)": [[24, "sire.mol.Chain.count", false]], "count() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.count", false]], "count() (sire.mol.residue method)": [[24, "sire.mol.Residue.count", false]], "count() (sire.mol.segment method)": [[24, "sire.mol.Segment.count", false]], "count() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.count", false]], "count() (sire.system.system method)": [[31, "sire.system.System.count", false]], "covalent_radius() (sire.mol.element method)": [[24, "sire.mol.Element.covalent_radius", false]], "covariance() (sire.maths.matrix static method)": [[22, "sire.maths.Matrix.covariance", false]], "create_from_pertfile() (in module sire.morph)": [[25, "sire.morph.create_from_pertfile", false]], "create_map() (in module sire.base)": [[1, "sire.base.create_map", false]], "create_quaternion() (in module sire.maths)": [[22, "sire.maths.create_quaternion", false]], "cubed() (sire.cas.expression method)": [[2, "sire.cas.Expression.cubed", false]], "cubic() (sire.vol.triclinicbox static method)": [[34, "sire.vol.TriclinicBox.cubic", false]], "current() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.current", false]], "current_energy() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.current_energy", false]], "current_kinetic_energy() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.current_kinetic_energy", false]], "current_potential_energy() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.current_potential_energy", false]], "current_space() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.current_space", false]], "current_step() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.current_step", false]], "current_time() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.current_time", false]], "cursor (class in sire.mol)": [[24, "sire.mol.Cursor", false]], "cursor() (sire.mm.angle method)": [[23, "sire.mm.Angle.cursor", false]], "cursor() (sire.mm.bond method)": [[23, "sire.mm.Bond.cursor", false]], "cursor() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.cursor", false]], "cursor() (sire.mm.improper method)": [[23, "sire.mm.Improper.cursor", false]], "cursor() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.cursor", false]], "cursor() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.cursor", false]], "cursor() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.cursor", false]], "cursor() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.cursor", false]], "cursor() (sire.mol.atom method)": [[24, "sire.mol.Atom.cursor", false]], "cursor() (sire.mol.chain method)": [[24, "sire.mol.Chain.cursor", false]], "cursor() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.cursor", false]], "cursor() (sire.mol.residue method)": [[24, "sire.mol.Residue.cursor", false]], "cursor() (sire.mol.segment method)": [[24, "sire.mol.Segment.cursor", false]], "cursor() (sire.system.system method)": [[31, "sire.system.System.cursor", false]], "cursors (class in sire.mol)": [[24, "sire.mol.Cursors", false]], "cursorsm (class in sire.mol)": [[24, "sire.mol.CursorsM", false]], "cutgroup() (sire.mm.angle method)": [[23, "sire.mm.Angle.cutgroup", false]], "cutgroup() (sire.mm.bond method)": [[23, "sire.mm.Bond.cutgroup", false]], "cutgroup() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.cutgroup", false]], "cutgroup() (sire.mm.improper method)": [[23, "sire.mm.Improper.cutgroup", false]], "cutgroup() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.cutgroup", false]], "cutgroup() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.cutgroup", false]], "cutgroup() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.cutgroup", false]], "cutgroup() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.cutgroup", false]], "cutgroup() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.cutgroup", false]], "cutgroup() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.cutgroup", false]], "cutgroup() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.cutgroup", false]], "cutgroup() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.cutgroup", false]], "cutgroup() (sire.mol.atom method)": [[24, "sire.mol.Atom.cutgroup", false]], "cutgroup() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.cutgroup", false]], "cutgroup() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.cutgroup", false]], "cutgroup() (sire.mol.chain method)": [[24, "sire.mol.Chain.cutgroup", false]], "cutgroup() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.cutgroup", false]], "cutgroup() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.cutgroup", false]], "cutgroups() (sire.mm.angle method)": [[23, "sire.mm.Angle.cutgroups", false]], "cutgroups() (sire.mm.bond method)": [[23, "sire.mm.Bond.cutgroups", false]], "cutgroups() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.cutgroups", false]], "cutgroups() (sire.mm.improper method)": [[23, "sire.mm.Improper.cutgroups", false]], "cutgroups() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.cutgroups", false]], "cutgroups() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.cutgroups", false]], "cutgroups() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.cutgroups", false]], "cutgroups() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.cutgroups", false]], "cutgroups() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.cutgroups", false]], "cutgroups() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.cutgroups", false]], "cutgroups() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.cutgroups", false]], "cutgroups() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.cutgroups", false]], "cutgroups() (sire.mol.atom method)": [[24, "sire.mol.Atom.cutgroups", false]], "cutgroups() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.cutgroups", false]], "cutgroups() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.cutgroups", false]], "cutgroups() (sire.mol.chain method)": [[24, "sire.mol.Chain.cutgroups", false]], "cutgroups() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.cutgroups", false]], "cutgroups() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.cutgroups", false]], "dcd (class in sire.io.parser)": [[21, "sire.io.parser.DCD", false]], "debug() (sire.utils.console static method)": [[33, "sire.utils.Console.debug", false]], "debugging_enabled() (sire.utils.console static method)": [[33, "sire.utils.Console.debugging_enabled", false]], "decouple() (in module sire.morph)": [[25, "sire.morph.decouple", false]], "delete() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.delete", false]], "delete() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.delete", false]], "delete() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.delete", false]], "delete_all_frames() (sire.mm.angle method)": [[23, "sire.mm.Angle.delete_all_frames", false]], "delete_all_frames() (sire.mm.bond method)": [[23, "sire.mm.Bond.delete_all_frames", false]], "delete_all_frames() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.delete_all_frames", false]], "delete_all_frames() (sire.mm.improper method)": [[23, "sire.mm.Improper.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.delete_all_frames", false]], "delete_all_frames() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.delete_all_frames", false]], "delete_all_frames() (sire.mol.atom method)": [[24, "sire.mol.Atom.delete_all_frames", false]], "delete_all_frames() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.delete_all_frames", false]], "delete_all_frames() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.delete_all_frames", false]], "delete_all_frames() (sire.mol.chain method)": [[24, "sire.mol.Chain.delete_all_frames", false]], "delete_all_frames() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.delete_all_frames", false]], "delete_all_frames() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.delete_all_frames", false]], "delete_all_frames() (sire.system.system method)": [[31, "sire.system.System.delete_all_frames", false]], "delete_all_tokens() (in module sire.search)": [[27, "sire.search.delete_all_tokens", false]], "delete_frame() (sire.mm.angle method)": [[23, "sire.mm.Angle.delete_frame", false]], "delete_frame() (sire.mm.bond method)": [[23, "sire.mm.Bond.delete_frame", false]], "delete_frame() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.delete_frame", false]], "delete_frame() (sire.mm.improper method)": [[23, "sire.mm.Improper.delete_frame", false]], "delete_frame() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.delete_frame", false]], "delete_frame() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.delete_frame", false]], "delete_frame() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.delete_frame", false]], "delete_frame() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.delete_frame", false]], "delete_frame() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.delete_frame", false]], "delete_frame() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.delete_frame", false]], "delete_frame() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.delete_frame", false]], "delete_frame() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.delete_frame", false]], "delete_frame() (sire.mol.atom method)": [[24, "sire.mol.Atom.delete_frame", false]], "delete_frame() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.delete_frame", false]], "delete_frame() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.delete_frame", false]], "delete_frame() (sire.mol.chain method)": [[24, "sire.mol.Chain.delete_frame", false]], "delete_frame() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.delete_frame", false]], "delete_frame() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.delete_frame", false]], "delete_frame() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.delete_frame", false]], "delete_frame() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.delete_frame", false]], "delete_frame() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.delete_frame", false]], "delete_frame() (sire.system.system method)": [[31, "sire.system.System.delete_frame", false]], "delete_token() (in module sire.search)": [[27, "sire.search.delete_token", false]], "detach() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.detach", false]], "determinant() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.determinant", false]], "diagonal() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.diagonal", false]], "diagonalise() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.diagonalise", false]], "diff() (sire.cas.expression method)": [[2, "sire.cas.Expression.diff", false]], "differentiate() (sire.cas.expression method)": [[2, "sire.cas.Expression.differentiate", false]], "differentiate() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.differentiate", false]], "dihedral (class in sire.mm)": [[23, "sire.mm.Dihedral", false]], "dihedral() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.dihedral", false]], "dihedral() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.dihedral", false]], "dihedral() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.dihedral", false]], "dihedral() (sire.system.system method)": [[31, "sire.system.System.dihedral", false]], "dihedrals() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.dihedrals", false]], "dihedrals() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.dihedrals", false]], "dihedrals() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.dihedrals", false]], "dihedrals() (sire.system.system method)": [[31, "sire.system.System.dihedrals", false]], "dimensions() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.dimensions", false]], "disable_parallel() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.disable_parallel", false]], "distance() (in module sire.restraints)": [[26, "sire.restraints.distance", false]], "divide() (sire.cas.expression method)": [[2, "sire.cas.Expression.divide", false]], "double_bond() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.double_bond", false]], "down() (sire.mol.stereochemistry static method)": [[24, "sire.mol.Stereochemistry.down", false]], "dummy() (sire.mm.lj1264parameter static method)": [[23, "sire.mm.LJ1264Parameter.dummy", false]], "dummy() (sire.mm.ljparameter static method)": [[23, "sire.mm.LJParameter.dummy", false]], "dynamics (class in sire.mol)": [[24, "sire.mol.Dynamics", false]], "dynamics() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.dynamics", false]], "dynamics() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.dynamics", false]], "dynamics() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.dynamics", false]], "dynamics() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.dynamics", false]], "dynamics() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.dynamics", false]], "dynamics() (sire.system.system method)": [[31, "sire.system.System.dynamics", false]], "edit() (sire.mol.atom method)": [[24, "sire.mol.Atom.edit", false]], "edit() (sire.mol.chain method)": [[24, "sire.mol.Chain.edit", false]], "edit() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.edit", false]], "edit() (sire.mol.residue method)": [[24, "sire.mol.Residue.edit", false]], "edit() (sire.mol.segment method)": [[24, "sire.mol.Segment.edit", false]], "edit() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.edit", false]], "elapsed_time() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.elapsed_time", false]], "element (class in sire.mol)": [[24, "sire.mol.Element", false]], "element_with_mass() (sire.mol.element method)": [[24, "sire.mol.Element.element_with_mass", false]], "enable_parallel() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.enable_parallel", false]], "energies() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.energies", false]], "energies() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.energies", false]], "energies() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.energies", false]], "energies() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.energies", false]], "energies() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.energies", false]], "energies() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.energies", false]], "energies() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.energies", false]], "energies() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.energies", false]], "energies() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.energies", false]], "energies() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.energies", false]], "energies() (sire.system.system method)": [[31, "sire.system.System.energies", false]], "energy() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.energy", false]], "energy() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.energy", false]], "energy() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.energy", false]], "energy() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.energy", false]], "energy() (sire.mm.angle method)": [[23, "sire.mm.Angle.energy", false]], "energy() (sire.mm.bond method)": [[23, "sire.mm.Bond.energy", false]], "energy() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.energy", false]], "energy() (sire.mm.improper method)": [[23, "sire.mm.Improper.energy", false]], "energy() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.energy", false]], "energy() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.energy", false]], "energy() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.energy", false]], "energy() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.energy", false]], "energy() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.energy", false]], "energy() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.energy", false]], "energy() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.energy", false]], "energy() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.energy", false]], "energy() (sire.mol.atom method)": [[24, "sire.mol.Atom.energy", false]], "energy() (sire.mol.chain method)": [[24, "sire.mol.Chain.energy", false]], "energy() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.energy", false]], "energy() (sire.mol.residue method)": [[24, "sire.mol.Residue.energy", false]], "energy() (sire.mol.segment method)": [[24, "sire.mol.Segment.energy", false]], "energy() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.energy", false]], "energy() (sire.system.system method)": [[31, "sire.system.System.energy", false]], "energy_trajectory() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.energy_trajectory", false]], "energy_trajectory() (sire.system.system method)": [[31, "sire.system.System.energy_trajectory", false]], "energytrajectory (class in sire.maths)": [[22, "sire.maths.EnergyTrajectory", false]], "enforce_symmetric() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.enforce_symmetric", false]], "ensemble() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.ensemble", false]], "ensemble() (sire.system.system method)": [[31, "sire.system.System.ensemble", false]], "epsilon() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.epsilon", false]], "error() (sire.utils.console static method)": [[33, "sire.utils.Console.error", false]], "error_report() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.error_report", false]], "evaluate() (sire.cas.expression method)": [[2, "sire.cas.Expression.evaluate", false]], "evaluate() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.evaluate", false]], "evaluate() (sire.mm.angle method)": [[23, "sire.mm.Angle.evaluate", false]], "evaluate() (sire.mm.bond method)": [[23, "sire.mm.Bond.evaluate", false]], "evaluate() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.evaluate", false]], "evaluate() (sire.mm.improper method)": [[23, "sire.mm.Improper.evaluate", false]], "evaluate() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.evaluate", false]], "evaluate() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.evaluate", false]], "evaluate() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.evaluate", false]], "evaluate() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.evaluate", false]], "evaluate() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.evaluate", false]], "evaluate() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.evaluate", false]], "evaluate() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.evaluate", false]], "evaluate() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.evaluate", false]], "evaluate() (sire.mol.atom method)": [[24, "sire.mol.Atom.evaluate", false]], "evaluate() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.evaluate", false]], "evaluate() (sire.mol.chain method)": [[24, "sire.mol.Chain.evaluate", false]], "evaluate() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.evaluate", false]], "evaluate() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.evaluate", false]], "evaluate() (sire.mol.residue method)": [[24, "sire.mol.Residue.evaluate", false]], "evaluate() (sire.mol.segment method)": [[24, "sire.mol.Segment.evaluate", false]], "evaluate() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.evaluate", false]], "evaluate() (sire.system.system method)": [[31, "sire.system.System.evaluate", false]], "evaluate_xml_force() (in module sire.morph)": [[25, "sire.morph.evaluate_xml_force", false]], "expand() (in module sire)": [[28, "sire.expand", false]], "expand() (sire.cas.expression method)": [[2, "sire.cas.Expression.expand", false]], "expand() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.expand", false]], "expression (class in sire.cas)": [[2, "sire.cas.Expression", false]], "extract() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.extract", false]], "extract() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.extract", false]], "extract() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.extract", false]], "extract() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.extract", false]], "extract() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.extract", false]], "extract() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.extract", false]], "extract_perturbed() (in module sire.morph)": [[25, "sire.morph.extract_perturbed", false]], "extract_perturbed() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.extract_perturbed", false]], "extract_reference() (in module sire.morph)": [[25, "sire.morph.extract_reference", false]], "extract_reference() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.extract_reference", false]], "factor() (sire.cas.expression method)": [[2, "sire.cas.Expression.factor", false]], "fetch() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.fetch", false]], "final() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.final", false]], "find() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.find", false]], "find() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.find", false]], "find() (sire.system.system method)": [[31, "sire.system.System.find", false]], "first() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.first", false]], "forcefieldinfo (class in sire.system)": [[31, "sire.system.ForceFieldInfo", false]], "format_description() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.format_description", false]], "format_description() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.format_description", false]], "format_description() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.format_description", false]], "format_description() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.format_description", false]], "format_description() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.format_description", false]], "format_name() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.format_name", false]], "format_name() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.format_name", false]], "format_name() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.format_name", false]], "format_name() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.format_name", false]], "format_name() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.format_name", false]], "format_suffix() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.format_suffix", false]], "format_suffix() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.format_suffix", false]], "format_suffix() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.format_suffix", false]], "format_suffix() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.format_suffix", false]], "format_suffix() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.format_suffix", false]], "frame_indexes() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.frame_indexes", false]], "from_and_b() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.from_and_b", false]], "from_r_min_and_epsilon() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.from_r_min_and_epsilon", false]], "from_rdkit() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.from_rdkit", false]], "from_rdkit() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.from_rdkit", false]], "from_s_d_f() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.from_s_d_f", false]], "from_s_d_f() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.from_s_d_f", false]], "from_sigma_and_epsilon() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.from_sigma_and_epsilon", false]], "functions() (sire.cas.expression method)": [[2, "sire.cas.Expression.functions", false]], "functions() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.functions", false]], "g87 (in module sire.io.parser)": [[21, "sire.io.parser.G87", false]], "gamma() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.gamma", false]], "gemmi_to_sire() (in module sire.convert)": [[3, "sire.convert.gemmi_to_sire", false]], "get() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.get", false]], "get() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.get", false]], "get() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.get", false]], "get() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.get", false]], "get_alignment() (in module sire.maths)": [[22, "sire.maths.get_alignment", false]], "get_alignment() (in module sire.mol)": [[24, "sire.mol.get_alignment", false]], "get_alphas0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_alphas0", false]], "get_alphas1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_alphas1", false]], "get_angle_ks0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_angle_ks0", false]], "get_angle_ks1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_angle_ks1", false]], "get_angle_sizes0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_angle_sizes0", false]], "get_angle_sizes1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_angle_sizes1", false]], "get_approx_epsilon() (in module sire.search)": [[27, "sire.search.get_approx_epsilon", false]], "get_atom_index() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_atom_index", false]], "get_biological_elements() (sire.mol.element method)": [[24, "sire.mol.Element.get_biological_elements", false]], "get_bond_ks0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_bond_ks0", false]], "get_bond_ks1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_bond_ks1", false]], "get_bond_lengths0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_bond_lengths0", false]], "get_bond_lengths1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_bond_lengths1", false]], "get_box_center() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.get_box_center", false]], "get_box_center() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.get_box_center", false]], "get_box_center() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.get_box_center", false]], "get_charge_scales0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_charge_scales0", false]], "get_charge_scales1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_charge_scales1", false]], "get_charges0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_charges0", false]], "get_charges1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_charges1", false]], "get_constant() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_constant", false]], "get_constant_symbol() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_constant_symbol", false]], "get_constraint() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_constraint", false]], "get_constraint_indicies() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_constraint_indicies", false]], "get_constraints() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_constraints", false]], "get_constraints() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.get_constraints", false]], "get_constraints() (sire.mol.minimisation method)": [[24, "sire.mol.Minimisation.get_constraints", false]], "get_coords_array() (in module sire.io)": [[20, "sire.io.get_coords_array", false]], "get_copies_within() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.get_copies_within", false]], "get_copies_within() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.get_copies_within", false]], "get_copies_within() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.get_copies_within", false]], "get_data_header() (in module sire.stream)": [[30, "sire.stream.get_data_header", false]], "get_energy() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_energy", false]], "get_epsilons0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_epsilons0", false]], "get_epsilons1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_epsilons1", false]], "get_equation() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_equation", false]], "get_exception_atoms() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_exception_atoms", false]], "get_exception_indicies() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_exception_indicies", false]], "get_force_index() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.get_force_index", false]], "get_force_type() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.get_force_type", false]], "get_forces() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_forces", false]], "get_frame() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.get_frame", false]], "get_frame() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.get_frame", false]], "get_frame() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.get_frame", false]], "get_frame() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.get_frame", false]], "get_frame() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.get_frame", false]], "get_from_ghost_idxs() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_from_ghost_idxs", false]], "get_header_property() (in module sire.stream)": [[30, "sire.stream.get_header_property", false]], "get_images_within() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.get_images_within", false]], "get_images_within() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.get_images_within", false]], "get_images_within() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.get_images_within", false]], "get_index() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.get_index", false]], "get_integrator() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_integrator", false]], "get_kappas0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_kappas0", false]], "get_kappas1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_kappas1", false]], "get_labels() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.get_labels", false]], "get_labels_as_numbers() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.get_labels_as_numbers", false]], "get_lambda() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_lambda", false]], "get_lambda() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.get_lambda", false]], "get_lambda_in_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_lambda_in_stage", false]], "get_lambda_lever() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_lambda_lever", false]], "get_lambda_schedule() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_lambda_schedule", false]], "get_lever_stages() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_lever_stages", false]], "get_lever_values() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_lever_values", false]], "get_lever_values() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.get_lever_values", false]], "get_lever_values() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_lever_values", false]], "get_levers() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_levers", false]], "get_link() (sire.mm.angle method)": [[23, "sire.mm.Angle.get_link", false]], "get_link() (sire.mm.bond method)": [[23, "sire.mm.Bond.get_link", false]], "get_link() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.get_link", false]], "get_link() (sire.mm.improper method)": [[23, "sire.mm.Improper.get_link", false]], "get_link() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.get_link", false]], "get_link() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.get_link", false]], "get_link() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.get_link", false]], "get_link() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.get_link", false]], "get_link() (sire.mol.atom method)": [[24, "sire.mol.Atom.get_link", false]], "get_link() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.get_link", false]], "get_link() (sire.mol.chain method)": [[24, "sire.mol.Chain.get_link", false]], "get_link() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.get_link", false]], "get_links() (sire.base.properties method)": [[1, "sire.base.Properties.get_links", false]], "get_links() (sire.mm.angle method)": [[23, "sire.mm.Angle.get_links", false]], "get_links() (sire.mm.bond method)": [[23, "sire.mm.Bond.get_links", false]], "get_links() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.get_links", false]], "get_links() (sire.mm.improper method)": [[23, "sire.mm.Improper.get_links", false]], "get_links() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.get_links", false]], "get_links() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.get_links", false]], "get_links() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.get_links", false]], "get_links() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.get_links", false]], "get_links() (sire.mol.atom method)": [[24, "sire.mol.Atom.get_links", false]], "get_links() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.get_links", false]], "get_links() (sire.mol.chain method)": [[24, "sire.mol.Chain.get_links", false]], "get_links() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.get_links", false]], "get_lj_scales0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_lj_scales0", false]], "get_lj_scales1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_lj_scales1", false]], "get_log() (sire.mol.minimisation method)": [[24, "sire.mol.Minimisation.get_log", false]], "get_max_num_threads() (in module sire)": [[28, "sire.get_max_num_threads", false]], "get_min_protein_residues() (in module sire.search)": [[27, "sire.search.get_min_protein_residues", false]], "get_minimum_image() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.get_minimum_image", false]], "get_minimum_image() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.get_minimum_image", false]], "get_minimum_image() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.get_minimum_image", false]], "get_molecule_schedule() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_molecule_schedule", false]], "get_name() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.get_name", false]], "get_number() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.get_number", false]], "get_perturbable_constraint() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_perturbable_constraint", false]], "get_perturbable_constraints() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_perturbable_constraints", false]], "get_perturbable_constraints_with_atoms() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_perturbable_constraints_with_atoms", false]], "get_perturbable_molecule_maps() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.get_perturbable_molecule_maps", false]], "get_platform() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_platform", false]], "get_platform_properties() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_platform_properties", false]], "get_platform_property() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_platform_property", false]], "get_potential_energy() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.get_potential_energy", false]], "get_principal_axes() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.get_principal_axes", false]], "get_protein_residue_names() (in module sire.search)": [[27, "sire.search.get_protein_residue_names", false]], "get_random_point() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.get_random_point", false]], "get_random_point() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.get_random_point", false]], "get_random_point() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.get_random_point", false]], "get_restraints() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.get_restraints", false]], "get_schedule() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.get_schedule", false]], "get_schedule() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.get_schedule", false]], "get_sigmas0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_sigmas0", false]], "get_sigmas1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_sigmas1", false]], "get_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_stage", false]], "get_stages() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.get_stages", false]], "get_standard_state_correction() (in module sire.restraints)": [[26, "sire.restraints.get_standard_state_correction", false]], "get_state() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.get_state", false]], "get_statistics() (sire.base.pagecache method)": [[1, "sire.base.PageCache.get_statistics", false]], "get_string() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.get_string", false]], "get_to_ghost_idxs() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_to_ghost_idxs", false]], "get_token() (in module sire.search)": [[27, "sire.search.get_token", false]], "get_torsion_ks0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_torsion_ks0", false]], "get_torsion_ks1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_torsion_ks1", false]], "get_torsion_periodicities0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_torsion_periodicities0", false]], "get_torsion_periodicities1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_torsion_periodicities1", false]], "get_torsion_phases0() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_torsion_phases0", false]], "get_torsion_phases1() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.get_torsion_phases1", false]], "get_unique_number() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.get_unique_number", false]], "global() (sire.maths.rangenerator static method)": [[22, "sire.maths.RanGenerator.global", false]], "green() (sire.mol.element method)": [[24, "sire.mol.Element.green", false]], "group() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.group", false]], "group() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.group", false]], "group() (sire.mol.element method)": [[24, "sire.mol.Element.group", false]], "groups() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.groups", false]], "groups() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.groups", false]], "gtop (in module sire.io.parser)": [[21, "sire.io.parser.GTOP", false]], "halogen() (sire.mol.element method)": [[24, "sire.mol.Element.halogen", false]], "has_atom_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.has_atom_restraints", false]], "has_box_vectors() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.has_box_vectors", false]], "has_c() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.has_c", false]], "has_centroid_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.has_centroid_restraints", false]], "has_coordinates() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.has_coordinates", false]], "has_force_specific_equation() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.has_force_specific_equation", false]], "has_lever() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.has_lever", false]], "has_links() (sire.base.properties method)": [[1, "sire.base.Properties.has_links", false]], "has_links() (sire.mm.angle method)": [[23, "sire.mm.Angle.has_links", false]], "has_links() (sire.mm.bond method)": [[23, "sire.mm.Bond.has_links", false]], "has_links() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.has_links", false]], "has_links() (sire.mm.improper method)": [[23, "sire.mm.Improper.has_links", false]], "has_links() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.has_links", false]], "has_links() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.has_links", false]], "has_links() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.has_links", false]], "has_links() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.has_links", false]], "has_links() (sire.mol.atom method)": [[24, "sire.mol.Atom.has_links", false]], "has_links() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.has_links", false]], "has_links() (sire.mol.chain method)": [[24, "sire.mol.Chain.has_links", false]], "has_links() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.has_links", false]], "has_metadata() (sire.base.properties method)": [[1, "sire.base.Properties.has_metadata", false]], "has_metadata() (sire.mm.angle method)": [[23, "sire.mm.Angle.has_metadata", false]], "has_metadata() (sire.mm.bond method)": [[23, "sire.mm.Bond.has_metadata", false]], "has_metadata() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.has_metadata", false]], "has_metadata() (sire.mm.improper method)": [[23, "sire.mm.Improper.has_metadata", false]], "has_metadata() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.has_metadata", false]], "has_metadata() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.has_metadata", false]], "has_metadata() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.has_metadata", false]], "has_metadata() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.has_metadata", false]], "has_metadata() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.has_metadata", false]], "has_metadata() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.has_metadata", false]], "has_metadata() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.has_metadata", false]], "has_metadata() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.has_metadata", false]], "has_metadata() (sire.mol.atom method)": [[24, "sire.mol.Atom.has_metadata", false]], "has_metadata() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.has_metadata", false]], "has_metadata() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.has_metadata", false]], "has_metadata() (sire.mol.chain method)": [[24, "sire.mol.Chain.has_metadata", false]], "has_metadata() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.has_metadata", false]], "has_metadata() (sire.mol.residue method)": [[24, "sire.mol.Residue.has_metadata", false]], "has_metadata() (sire.mol.segment method)": [[24, "sire.mol.Segment.has_metadata", false]], "has_metadata() (sire.system.system method)": [[31, "sire.system.System.has_metadata", false]], "has_molecule_schedule() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.has_molecule_schedule", false]], "has_property() (sire.base.properties method)": [[1, "sire.base.Properties.has_property", false]], "has_property() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.has_property", false]], "has_property() (sire.mm.angle method)": [[23, "sire.mm.Angle.has_property", false]], "has_property() (sire.mm.bond method)": [[23, "sire.mm.Bond.has_property", false]], "has_property() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.has_property", false]], "has_property() (sire.mm.improper method)": [[23, "sire.mm.Improper.has_property", false]], "has_property() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.has_property", false]], "has_property() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.has_property", false]], "has_property() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.has_property", false]], "has_property() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.has_property", false]], "has_property() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.has_property", false]], "has_property() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.has_property", false]], "has_property() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.has_property", false]], "has_property() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.has_property", false]], "has_property() (sire.mol.atom method)": [[24, "sire.mol.Atom.has_property", false]], "has_property() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.has_property", false]], "has_property() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.has_property", false]], "has_property() (sire.mol.chain method)": [[24, "sire.mol.Chain.has_property", false]], "has_property() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.has_property", false]], "has_property() (sire.mol.residue method)": [[24, "sire.mol.Residue.has_property", false]], "has_property() (sire.mol.segment method)": [[24, "sire.mol.Segment.has_property", false]], "has_property() (sire.system.system method)": [[31, "sire.system.System.has_property", false]], "has_token() (in module sire.search)": [[27, "sire.search.has_token", false]], "has_velocities() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.has_velocities", false]], "has_warnings() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.has_warnings", false]], "hash() (sire.cas.expression method)": [[2, "sire.cas.Expression.hash", false]], "hash() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.hash", false]], "hash() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.hash", false]], "hash() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.hash", false]], "hash() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.hash", false]], "hash() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.hash", false]], "hash() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.hash", false]], "hash() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.hash", false]], "hash() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.hash", false]], "hash() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.hash", false]], "hash() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.hash", false]], "hash() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.hash", false]], "hash() (sire.mol.molname method)": [[24, "sire.mol.MolName.hash", false]], "hash() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.hash", false]], "hash() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.hash", false]], "hash() (sire.mol.resname method)": [[24, "sire.mol.ResName.hash", false]], "hash() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.hash", false]], "hash() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.hash", false]], "hash() (sire.mol.segname method)": [[24, "sire.mol.SegName.hash", false]], "have_imported() (in module sire.utils)": [[33, "sire.utils.have_imported", false]], "hex_color() (sire.mol.element method)": [[24, "sire.mol.Element.hex_color", false]], "id() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.id", false]], "id() (sire.mm.angle method)": [[23, "sire.mm.Angle.id", false]], "id() (sire.mm.bond method)": [[23, "sire.mm.Bond.id", false]], "id() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.id", false]], "id() (sire.mm.improper method)": [[23, "sire.mm.Improper.id", false]], "id() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.id", false]], "identity() (sire.maths.matrix static method)": [[22, "sire.maths.Matrix.identity", false]], "ids() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.ids", false]], "ids() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.ids", false]], "ids() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.ids", false]], "ids() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.ids", false]], "ids() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.ids", false]], "ids() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.ids", false]], "ids() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.ids", false]], "ids() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.ids", false]], "ids() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.ids", false]], "ids() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.ids", false]], "improper (class in sire.mm)": [[23, "sire.mm.Improper", false]], "improper() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.improper", false]], "improper() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.improper", false]], "improper() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.improper", false]], "improper() (sire.system.system method)": [[31, "sire.system.System.improper", false]], "improper_angle() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.improper_angle", false]], "impropers() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.impropers", false]], "impropers() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.impropers", false]], "impropers() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.impropers", false]], "impropers() (sire.system.system method)": [[31, "sire.system.System.impropers", false]], "index (sire.mol.cursor property)": [[24, "sire.mol.Cursor.index", false]], "index() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.index", false]], "index() (sire.mol.atom method)": [[24, "sire.mol.Atom.index", false]], "index() (sire.mol.chain method)": [[24, "sire.mol.Chain.index", false]], "index() (sire.mol.residue method)": [[24, "sire.mol.Residue.index", false]], "index() (sire.mol.segment method)": [[24, "sire.mol.Segment.index", false]], "indexes() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.indexes", false]], "indexes() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.indexes", false]], "info() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.info", false]], "info() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.info", false]], "info() (sire.utils.console static method)": [[33, "sire.utils.Console.info", false]], "initial() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.initial", false]], "insert_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.insert_stage", false]], "integ() (sire.cas.expression method)": [[2, "sire.cas.Expression.integ", false]], "integrate() (sire.cas.expression method)": [[2, "sire.cas.Expression.integrate", false]], "integrate() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.integrate", false]], "integrator() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.integrator", false]], "intersection() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.intersection", false]], "intersection() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.intersection", false]], "intersection() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.intersection", false]], "intersection() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.intersection", false]], "intersection() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.intersection", false]], "intersection() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.intersection", false]], "intersection() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.intersection", false]], "intersection() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.intersection", false]], "intersection() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.intersection", false]], "intersects() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.intersects", false]], "intersects() (sire.mol.chain method)": [[24, "sire.mol.Chain.intersects", false]], "intersects() (sire.mol.residue method)": [[24, "sire.mol.Residue.intersects", false]], "intersects() (sire.mol.segment method)": [[24, "sire.mol.Segment.intersects", false]], "inverse() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.inverse", false]], "inverse() (sire.maths.transform method)": [[22, "sire.maths.Transform.inverse", false]], "invert() (sire.cas.expression method)": [[2, "sire.cas.Expression.invert", false]], "invert() (sire.mm.angle method)": [[23, "sire.mm.Angle.invert", false]], "invert() (sire.mm.bond method)": [[23, "sire.mm.Bond.invert", false]], "invert() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.invert", false]], "invert() (sire.mm.improper method)": [[23, "sire.mm.Improper.invert", false]], "invert() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.invert", false]], "invert() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.invert", false]], "invert() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.invert", false]], "invert() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.invert", false]], "invert() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.invert", false]], "invert() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.invert", false]], "invert() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.invert", false]], "invert() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.invert", false]], "invert() (sire.mol.atom method)": [[24, "sire.mol.Atom.invert", false]], "invert() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.invert", false]], "invert() (sire.mol.chain method)": [[24, "sire.mol.Chain.invert", false]], "invert() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.invert", false]], "invert() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.invert", false]], "invert() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.invert", false]], "invert() (sire.mol.residue method)": [[24, "sire.mol.Residue.invert", false]], "invert() (sire.mol.segment method)": [[24, "sire.mol.Segment.invert", false]], "is_angle() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_angle", false]], "is_array() (sire.base.properties method)": [[1, "sire.base.Properties.is_array", false]], "is_atom() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_atom", false]], "is_atom_restraint() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.is_atom_restraint", false]], "is_binary_file() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_binary_file", false]], "is_bond() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_bond", false]], "is_boolean() (sire.base.properties method)": [[1, "sire.base.Properties.is_boolean", false]], "is_broken() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_broken", false]], "is_cartesian() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.is_cartesian", false]], "is_cartesian() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.is_cartesian", false]], "is_cartesian() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.is_cartesian", false]], "is_centroid_restraint() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.is_centroid_restraint", false]], "is_chain() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_chain", false]], "is_complex() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_complex", false]], "is_compound() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_compound", false]], "is_constant() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_constant", false]], "is_constant() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.is_constant", false]], "is_default() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.is_default", false]], "is_defined() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.is_defined", false]], "is_defined() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.is_defined", false]], "is_diagonal() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.is_diagonal", false]], "is_dihedral() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_dihedral", false]], "is_double() (sire.base.properties method)": [[1, "sire.base.Properties.is_double", false]], "is_double() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.is_double", false]], "is_down() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.is_down", false]], "is_dummy() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.is_dummy", false]], "is_dummy() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.is_dummy", false]], "is_empty() (sire.base.properties method)": [[1, "sire.base.Properties.is_empty", false]], "is_empty() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_empty", false]], "is_empty() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.is_empty", false]], "is_empty() (sire.mm.angle method)": [[23, "sire.mm.Angle.is_empty", false]], "is_empty() (sire.mm.bond method)": [[23, "sire.mm.Bond.is_empty", false]], "is_empty() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.is_empty", false]], "is_empty() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.is_empty", false]], "is_empty() (sire.mm.improper method)": [[23, "sire.mm.Improper.is_empty", false]], "is_empty() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.is_empty", false]], "is_empty() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.is_empty", false]], "is_empty() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.is_empty", false]], "is_empty() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.is_empty", false]], "is_empty() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.is_empty", false]], "is_empty() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.is_empty", false]], "is_empty() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.is_empty", false]], "is_empty() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.is_empty", false]], "is_empty() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_empty", false]], "is_empty() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.is_empty", false]], "is_empty() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.is_empty", false]], "is_empty() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.is_empty", false]], "is_empty() (sire.mol.chain method)": [[24, "sire.mol.Chain.is_empty", false]], "is_empty() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.is_empty", false]], "is_empty() (sire.mol.residue method)": [[24, "sire.mol.Residue.is_empty", false]], "is_empty() (sire.mol.segment method)": [[24, "sire.mol.Segment.is_empty", false]], "is_empty() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.is_empty", false]], "is_empty() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.is_empty", false]], "is_frame() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_frame", false]], "is_frame() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.is_frame", false]], "is_frame() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.is_frame", false]], "is_frame() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.is_frame", false]], "is_frame() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.is_frame", false]], "is_function() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_function", false]], "is_function() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.is_function", false]], "is_ghost_atom() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.is_ghost_atom", false]], "is_identity() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.is_identity", false]], "is_improper() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_improper", false]], "is_integer() (sire.base.properties method)": [[1, "sire.base.Properties.is_integer", false]], "is_internal() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_internal", false]], "is_link() (sire.mm.angle method)": [[23, "sire.mm.Angle.is_link", false]], "is_link() (sire.mm.bond method)": [[23, "sire.mm.Bond.is_link", false]], "is_link() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.is_link", false]], "is_link() (sire.mm.improper method)": [[23, "sire.mm.Improper.is_link", false]], "is_link() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.is_link", false]], "is_link() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.is_link", false]], "is_link() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.is_link", false]], "is_link() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.is_link", false]], "is_link() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_link", false]], "is_link() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.is_link", false]], "is_link() (sire.mol.chain method)": [[24, "sire.mol.Chain.is_link", false]], "is_link() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.is_link", false]], "is_lj_parameter() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.is_lj_parameter", false]], "is_mapped() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.is_mapped", false]], "is_molecule() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_molecule", false]], "is_not_stereo() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.is_not_stereo", false]], "is_null() (sire.base.pagecache method)": [[1, "sire.base.PageCache.is_null", false]], "is_null() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.is_null", false]], "is_null() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.is_null", false]], "is_null() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.is_null", false]], "is_null() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.is_null", false]], "is_null() (sire.maths.transform method)": [[22, "sire.maths.Transform.is_null", false]], "is_null() (sire.mm.angle method)": [[23, "sire.mm.Angle.is_null", false]], "is_null() (sire.mm.bond method)": [[23, "sire.mm.Bond.is_null", false]], "is_null() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.is_null", false]], "is_null() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.is_null", false]], "is_null() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.is_null", false]], "is_null() (sire.mm.improper method)": [[23, "sire.mm.Improper.is_null", false]], "is_null() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.is_null", false]], "is_null() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.is_null", false]], "is_null() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.is_null", false]], "is_null() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.is_null", false]], "is_null() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_null", false]], "is_null() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.is_null", false]], "is_null() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.is_null", false]], "is_null() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.is_null", false]], "is_null() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.is_null", false]], "is_null() (sire.mol.chain method)": [[24, "sire.mol.Chain.is_null", false]], "is_null() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.is_null", false]], "is_null() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.is_null", false]], "is_null() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.is_null", false]], "is_null() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.is_null", false]], "is_null() (sire.mol.molname method)": [[24, "sire.mol.MolName.is_null", false]], "is_null() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.is_null", false]], "is_null() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.is_null", false]], "is_null() (sire.mol.resname method)": [[24, "sire.mol.ResName.is_null", false]], "is_null() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.is_null", false]], "is_null() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.is_null", false]], "is_null() (sire.mol.segname method)": [[24, "sire.mol.SegName.is_null", false]], "is_null() (sire.utils.profiler method)": [[33, "sire.utils.Profiler.is_null", false]], "is_periodic() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.is_periodic", false]], "is_periodic() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.is_periodic", false]], "is_periodic() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.is_periodic", false]], "is_perturbable() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.is_perturbable", false]], "is_reduced() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.is_reduced", false]], "is_residue() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_residue", false]], "is_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.is_restraints", false]], "is_rotated() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.is_rotated", false]], "is_same_editor() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_same_editor", false]], "is_same_editor() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.is_same_editor", false]], "is_same_molecule() (sire.mm.angle method)": [[23, "sire.mm.Angle.is_same_molecule", false]], "is_same_molecule() (sire.mm.bond method)": [[23, "sire.mm.Bond.is_same_molecule", false]], "is_same_molecule() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.is_same_molecule", false]], "is_same_molecule() (sire.mm.improper method)": [[23, "sire.mm.Improper.is_same_molecule", false]], "is_same_molecule() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.is_same_molecule", false]], "is_same_molecule() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.is_same_molecule", false]], "is_same_molecule() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.is_same_molecule", false]], "is_same_molecule() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.is_same_molecule", false]], "is_same_molecule() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_same_molecule", false]], "is_same_molecule() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.is_same_molecule", false]], "is_same_molecule() (sire.mol.chain method)": [[24, "sire.mol.Chain.is_same_molecule", false]], "is_same_molecule() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.is_same_molecule", false]], "is_segment() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.is_segment", false]], "is_selector() (sire.mm.angle method)": [[23, "sire.mm.Angle.is_selector", false]], "is_selector() (sire.mm.bond method)": [[23, "sire.mm.Bond.is_selector", false]], "is_selector() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.is_selector", false]], "is_selector() (sire.mm.improper method)": [[23, "sire.mm.Improper.is_selector", false]], "is_selector() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.is_selector", false]], "is_selector() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.is_selector", false]], "is_selector() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.is_selector", false]], "is_selector() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.is_selector", false]], "is_selector() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.is_selector", false]], "is_selector() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.is_selector", false]], "is_selector() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.is_selector", false]], "is_selector() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.is_selector", false]], "is_selector() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_selector", false]], "is_selector() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.is_selector", false]], "is_selector() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.is_selector", false]], "is_selector() (sire.mol.chain method)": [[24, "sire.mol.Chain.is_selector", false]], "is_selector() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.is_selector", false]], "is_selector() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.is_selector", false]], "is_single() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.is_single", false]], "is_single_molecule() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.is_single_molecule", false]], "is_string() (sire.base.properties method)": [[1, "sire.base.Properties.is_string", false]], "is_supplementary() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_supplementary", false]], "is_symmetric() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.is_symmetric", false]], "is_system() (sire.system.system static method)": [[31, "sire.system.System.is_system", false]], "is_text_file() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_text_file", false]], "is_text_file() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.is_text_file", false]], "is_text_file() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.is_text_file", false]], "is_topology() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.is_topology", false]], "is_topology() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.is_topology", false]], "is_topology() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.is_topology", false]], "is_triple() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.is_triple", false]], "is_unit() (sire.base.properties method)": [[1, "sire.base.Properties.is_unit", false]], "is_up() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.is_up", false]], "is_valid() (sire.base.pagecache method)": [[1, "sire.base.PageCache.is_valid", false]], "is_water() (in module sire.mol)": [[24, "sire.mol.is_water", false]], "is_within_chain() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_within_chain", false]], "is_within_chain() (sire.mol.residue method)": [[24, "sire.mol.Residue.is_within_chain", false]], "is_within_residue() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_within_residue", false]], "is_within_segment() (sire.mol.atom method)": [[24, "sire.mol.Atom.is_within_segment", false]], "is_zero() (sire.cas.expression method)": [[2, "sire.cas.Expression.is_zero", false]], "is_zero() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.is_zero", false]], "is_zero() (sire.maths.transform method)": [[22, "sire.maths.Transform.is_zero", false]], "iscached() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.isCached", false]], "isnull() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.isNull", false]], "isnull() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.isNull", false]], "isresident() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.isResident", false]], "isromatic() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.isromatic", false]], "isvalid() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.isValid", false]], "isvalid() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.isValid", false]], "join() (sire.mol.molecule static method)": [[24, "sire.mol.Molecule.join", false]], "k() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.k", false]], "k() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.k", false]], "k() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.k", false]], "k() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.k", false]], "kabasch() (in module sire.maths)": [[22, "sire.maths.kabasch", false]], "kabasch_fit() (in module sire.maths)": [[22, "sire.maths.kabasch_fit", false]], "keys() (sire.base.properties method)": [[1, "sire.base.Properties.keys", false]], "keys() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.keys", false]], "label_keys() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.label_keys", false]], "labels() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.labels", false]], "labels_as_numbers() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.labels_as_numbers", false]], "lam (in module sire.cas)": [[2, "sire.cas.lam", false]], "lam() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.lam", false]], "lambda_lever() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.lambda_lever", false]], "lambdalever (class in sire.convert.openmm)": [[3, "sire.convert.openmm.LambdaLever", false]], "lambdaschedule (class in sire.cas)": [[2, "sire.cas.LambdaSchedule", false]], "lanthanide() (sire.mol.element method)": [[24, "sire.mol.Element.lanthanide", false]], "length() (in module sire.units)": [[32, "sire.units.length", false]], "length() (sire.mm.bond method)": [[23, "sire.mm.Bond.length", false]], "lengths() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.lengths", false]], "lengths() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.lengths", false]], "line0() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.line0", false]], "line03() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.line03", false]], "line1() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.line1", false]], "line12() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.line12", false]], "line2() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.line2", false]], "link_to_perturbed() (in module sire.morph)": [[25, "sire.morph.link_to_perturbed", false]], "link_to_perturbed() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.link_to_perturbed", false]], "link_to_reference() (in module sire.morph)": [[25, "sire.morph.link_to_reference", false]], "link_to_reference() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.link_to_reference", false]], "lj1264parameter (class in sire.mm)": [[23, "sire.mm.LJ1264Parameter", false]], "ljparameter (class in sire.mm)": [[23, "sire.mm.LJParameter", false]], "load() (in module sire)": [[28, "sire.load", false]], "load() (in module sire.stream)": [[30, "sire.stream.load", false]], "load_frame() (sire.mm.angle method)": [[23, "sire.mm.Angle.load_frame", false]], "load_frame() (sire.mm.bond method)": [[23, "sire.mm.Bond.load_frame", false]], "load_frame() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.load_frame", false]], "load_frame() (sire.mm.improper method)": [[23, "sire.mm.Improper.load_frame", false]], "load_frame() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.load_frame", false]], "load_frame() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.load_frame", false]], "load_frame() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.load_frame", false]], "load_frame() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.load_frame", false]], "load_frame() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.load_frame", false]], "load_frame() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.load_frame", false]], "load_frame() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.load_frame", false]], "load_frame() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.load_frame", false]], "load_frame() (sire.mol.atom method)": [[24, "sire.mol.Atom.load_frame", false]], "load_frame() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.load_frame", false]], "load_frame() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.load_frame", false]], "load_frame() (sire.mol.chain method)": [[24, "sire.mol.Chain.load_frame", false]], "load_frame() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.load_frame", false]], "load_frame() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.load_frame", false]], "load_frame() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.load_frame", false]], "load_frame() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.load_frame", false]], "load_frame() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.load_frame", false]], "load_frame() (sire.system.system method)": [[31, "sire.system.System.load_frame", false]], "load_test_files() (in module sire)": [[28, "sire.load_test_files", false]], "lock() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.lock", false]], "locked_rand() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.locked_rand", false]], "locked_rand_norm() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.locked_rand_norm", false]], "locked_vector_on_sphere() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.locked_vector_on_sphere", false]], "make_whole() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.make_whole", false]], "make_whole() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.make_whole", false]], "make_whole() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.make_whole", false]], "make_whole() (sire.system.system method)": [[31, "sire.system.System.make_whole", false]], "make_whole() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.make_whole", false]], "make_whole() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.make_whole", false]], "map() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.map", false]], "map() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.map", false]], "map() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.map", false]], "map() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.map", false]], "map() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.map", false]], "map() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.map", false]], "map() (sire.mol.molname method)": [[24, "sire.mol.MolName.map", false]], "map() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.map", false]], "map() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.map", false]], "map() (sire.mol.resname method)": [[24, "sire.mol.ResName.map", false]], "map() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.map", false]], "map() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.map", false]], "map() (sire.mol.segname method)": [[24, "sire.mol.SegName.map", false]], "mapped_atoms0() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.mapped_atoms0", false]], "mapped_atoms1() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.mapped_atoms1", false]], "mass() (sire.mol.element method)": [[24, "sire.mol.Element.mass", false]], "mass() (sire.system.system method)": [[31, "sire.system.System.mass", false]], "match() (in module sire.morph)": [[25, "sire.morph.match", false]], "match_atoms() (in module sire)": [[28, "sire.match_atoms", false]], "matrix (class in sire.maths)": [[22, "sire.maths.Matrix", false]], "max_bonds() (sire.mol.element method)": [[24, "sire.mol.Element.max_bonds", false]], "max_coords() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.max_coords", false]], "max_page_size() (sire.base.pagecache method)": [[1, "sire.base.PageCache.max_page_size", false]], "max_resident_pages() (sire.base.pagecache method)": [[1, "sire.base.PageCache.max_resident_pages", false]], "maxbytes() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.maxBytes", false]], "maximum_cutoff() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.maximum_cutoff", false]], "maximum_cutoff() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.maximum_cutoff", false]], "maybe_different() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.maybe_different", false]], "measure() (in module sire)": [[28, "sire.measure", false]], "measure() (sire.mm.angle method)": [[23, "sire.mm.Angle.measure", false]], "measure() (sire.mm.bond method)": [[23, "sire.mm.Bond.measure", false]], "measure() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.measure", false]], "measure() (sire.mm.improper method)": [[23, "sire.mm.Improper.measure", false]], "measures() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.measures", false]], "measures() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.measures", false]], "measures() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.measures", false]], "measures() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.measures", false]], "measures() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.measures", false]], "measures() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.measures", false]], "measures() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.measures", false]], "measures() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.measures", false]], "merge() (in module sire.morph)": [[25, "sire.morph.merge", false]], "merge() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.merge", false]], "merge() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.merge", false]], "metadata() (sire.base.properties method)": [[1, "sire.base.Properties.metadata", false]], "metadata() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.metadata", false]], "metadata() (sire.system.system method)": [[31, "sire.system.System.metadata", false]], "metadata_keys() (sire.base.properties method)": [[1, "sire.base.Properties.metadata_keys", false]], "metadata_keys() (sire.mm.angle method)": [[23, "sire.mm.Angle.metadata_keys", false]], "metadata_keys() (sire.mm.bond method)": [[23, "sire.mm.Bond.metadata_keys", false]], "metadata_keys() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.metadata_keys", false]], "metadata_keys() (sire.mm.improper method)": [[23, "sire.mm.Improper.metadata_keys", false]], "metadata_keys() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.metadata_keys", false]], "metadata_keys() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.metadata_keys", false]], "metadata_keys() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.metadata_keys", false]], "metadata_keys() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.metadata_keys", false]], "metadata_keys() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.metadata_keys", false]], "metadata_keys() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.metadata_keys", false]], "metadata_keys() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.metadata_keys", false]], "metadata_keys() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.metadata_keys", false]], "metadata_keys() (sire.mol.atom method)": [[24, "sire.mol.Atom.metadata_keys", false]], "metadata_keys() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.metadata_keys", false]], "metadata_keys() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.metadata_keys", false]], "metadata_keys() (sire.mol.chain method)": [[24, "sire.mol.Chain.metadata_keys", false]], "metadata_keys() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.metadata_keys", false]], "metadata_keys() (sire.mol.residue method)": [[24, "sire.mol.Residue.metadata_keys", false]], "metadata_keys() (sire.mol.segment method)": [[24, "sire.mol.Segment.metadata_keys", false]], "metadata_keys() (sire.system.system method)": [[31, "sire.system.System.metadata_keys", false]], "metadata_type() (sire.base.properties method)": [[1, "sire.base.Properties.metadata_type", false]], "metadata_type() (sire.mm.angle method)": [[23, "sire.mm.Angle.metadata_type", false]], "metadata_type() (sire.mm.bond method)": [[23, "sire.mm.Bond.metadata_type", false]], "metadata_type() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.metadata_type", false]], "metadata_type() (sire.mm.improper method)": [[23, "sire.mm.Improper.metadata_type", false]], "metadata_type() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.metadata_type", false]], "metadata_type() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.metadata_type", false]], "metadata_type() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.metadata_type", false]], "metadata_type() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.metadata_type", false]], "metadata_type() (sire.mol.atom method)": [[24, "sire.mol.Atom.metadata_type", false]], "metadata_type() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.metadata_type", false]], "metadata_type() (sire.mol.chain method)": [[24, "sire.mol.Chain.metadata_type", false]], "metadata_type() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.metadata_type", false]], "min_coords() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.min_coords", false]], "minimisation (class in sire.mol)": [[24, "sire.mol.Minimisation", false]], "minimisation() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.minimisation", false]], "minimisation() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.minimisation", false]], "minimisation() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.minimisation", false]], "minimisation() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.minimisation", false]], "minimisation() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.minimisation", false]], "minimisation() (sire.system.system method)": [[31, "sire.system.System.minimisation", false]], "minimise() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.minimise", false]], "minimum_distance() (in module sire)": [[28, "sire.minimum_distance", false]], "minimum_distance() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.minimum_distance", false]], "minimum_distance() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.minimum_distance", false]], "minimum_distance() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.minimum_distance", false]], "module": [[1, "module-sire.base", false], [2, "module-sire.cas", false], [3, "module-sire.convert", false], [3, "module-sire.convert.openmm", false], [20, "module-sire.io", false], [21, "module-sire.io.parser", false], [22, "module-sire.maths", false], [23, "module-sire.mm", false], [24, "module-sire.mol", false], [25, "module-sire.morph", false], [26, "module-sire.restraints", false], [27, "module-sire.search", false], [28, "module-sire", false], [30, "module-sire.stream", false], [31, "module-sire.system", false], [32, "module-sire.units", false], [33, "module-sire.utils", false], [34, "module-sire.vol", false]], "mol2 (in module sire.io.parser)": [[21, "sire.io.parser.MOL2", false]], "mol_nums() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.mol_nums", false]], "molecule (class in sire.mol)": [[24, "sire.mol.Molecule", false]], "molecule() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.molecule", false]], "molecule() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.molecule", false]], "molecule() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.molecule", false]], "molecule() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.molecule", false]], "molecule() (sire.mol.atom method)": [[24, "sire.mol.Atom.molecule", false]], "molecule() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.molecule", false]], "molecule() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.molecule", false]], "molecule() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.molecule", false]], "molecule() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.molecule", false]], "molecule() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.molecule", false]], "molecule() (sire.system.system method)": [[31, "sire.system.System.molecule", false]], "molecules() (sire.mm.angle method)": [[23, "sire.mm.Angle.molecules", false]], "molecules() (sire.mm.bond method)": [[23, "sire.mm.Bond.molecules", false]], "molecules() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.molecules", false]], "molecules() (sire.mm.improper method)": [[23, "sire.mm.Improper.molecules", false]], "molecules() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.molecules", false]], "molecules() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.molecules", false]], "molecules() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.molecules", false]], "molecules() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.molecules", false]], "molecules() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.molecules", false]], "molecules() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.molecules", false]], "molecules() (sire.system.system method)": [[31, "sire.system.System.molecules", false]], "molid() (in module sire)": [[28, "sire.molid", false]], "molidx (class in sire.mol)": [[24, "sire.mol.MolIdx", false]], "molname (class in sire.mol)": [[24, "sire.mol.MolName", false]], "molnum (class in sire.mol)": [[24, "sire.mol.MolNum", false]], "morph() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.morph", false]], "move() (sire.mm.angle method)": [[23, "sire.mm.Angle.move", false]], "move() (sire.mm.bond method)": [[23, "sire.mm.Bond.move", false]], "move() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.move", false]], "move() (sire.mm.improper method)": [[23, "sire.mm.Improper.move", false]], "move() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.move", false]], "move() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.move", false]], "move() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.move", false]], "move() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.move", false]], "move() (sire.mol.atom method)": [[24, "sire.mol.Atom.move", false]], "move() (sire.mol.chain method)": [[24, "sire.mol.Chain.move", false]], "move() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.move", false]], "move() (sire.mol.residue method)": [[24, "sire.mol.Residue.move", false]], "move() (sire.mol.segment method)": [[24, "sire.mol.Segment.move", false]], "multiply() (sire.cas.expression method)": [[2, "sire.cas.Expression.multiply", false]], "mutate() (in module sire.morph)": [[25, "sire.morph.mutate", false]], "mutate() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.mutate", false]], "name (sire.mol.cursor property)": [[24, "sire.mol.Cursor.name", false]], "name() (sire.mol.atom method)": [[24, "sire.mol.Atom.name", false]], "name() (sire.mol.chain method)": [[24, "sire.mol.Chain.name", false]], "name() (sire.mol.element method)": [[24, "sire.mol.Element.name", false]], "name() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.name", false]], "name() (sire.mol.residue method)": [[24, "sire.mol.Residue.name", false]], "name() (sire.mol.segment method)": [[24, "sire.mol.Segment.name", false]], "name() (sire.utils.profiler method)": [[33, "sire.utils.Profiler.name", false]], "names() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.names", false]], "names() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.names", false]], "names() (sire.system.system method)": [[31, "sire.system.System.names", false]], "nbytes() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.nBytes", false]], "nbytes() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.nBytes", false]], "negate() (sire.cas.expression method)": [[2, "sire.cas.Expression.negate", false]], "noble_gas() (sire.mol.element method)": [[24, "sire.mol.Element.noble_gas", false]], "not_stereo() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.not_stereo", false]], "nrand() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.nrand", false]], "nrand_norm() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.nrand_norm", false]], "null() (sire.mol.atomidx static method)": [[24, "sire.mol.AtomIdx.null", false]], "null() (sire.mol.chainidx static method)": [[24, "sire.mol.ChainIdx.null", false]], "null() (sire.mol.molidx static method)": [[24, "sire.mol.MolIdx.null", false]], "null() (sire.mol.residx static method)": [[24, "sire.mol.ResIdx.null", false]], "null() (sire.mol.segidx static method)": [[24, "sire.mol.SegIdx.null", false]], "nullprofiler (class in sire.utils)": [[33, "sire.utils.NullProfiler", false]], "num_atom_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.num_atom_restraints", false]], "num_atoms() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.num_atoms", false]], "num_atoms() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.num_atoms", false]], "num_atoms() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.num_atoms", false]], "num_atoms() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.num_atoms", false]], "num_atoms() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.num_atoms", false]], "num_atoms() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_atoms", false]], "num_atoms() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_atoms", false]], "num_atoms() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_atoms", false]], "num_atoms() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_atoms", false]], "num_atoms() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_atoms", false]], "num_atoms() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_atoms", false]], "num_atoms() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_atoms", false]], "num_atoms() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_atoms", false]], "num_atoms() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_atoms", false]], "num_atoms() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_atoms", false]], "num_atoms() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_atoms", false]], "num_atoms() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_atoms", false]], "num_atoms() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_atoms", false]], "num_atoms() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_atoms", false]], "num_atoms() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_atoms", false]], "num_atoms() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_atoms", false]], "num_atoms() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_atoms", false]], "num_atoms() (sire.mol.residue method)": [[24, "sire.mol.Residue.num_atoms", false]], "num_atoms() (sire.mol.segment method)": [[24, "sire.mol.Segment.num_atoms", false]], "num_atoms() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_atoms", false]], "num_atoms() (sire.system.system method)": [[31, "sire.system.System.num_atoms", false]], "num_bytes() (sire.base.pagecache method)": [[1, "sire.base.PageCache.num_bytes", false]], "num_centroid_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.num_centroid_restraints", false]], "num_chains() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_chains", false]], "num_chains() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_chains", false]], "num_chains() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_chains", false]], "num_chains() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_chains", false]], "num_chains() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_chains", false]], "num_chains() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_chains", false]], "num_chains() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_chains", false]], "num_chains() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_chains", false]], "num_chains() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_chains", false]], "num_chains() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_chains", false]], "num_chains() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_chains", false]], "num_chains() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_chains", false]], "num_chains() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_chains", false]], "num_chains() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_chains", false]], "num_chains() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_chains", false]], "num_chains() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_chains", false]], "num_chains() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_chains", false]], "num_chains() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_chains", false]], "num_chains() (sire.system.system method)": [[31, "sire.system.System.num_chains", false]], "num_cutgroups() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_cutgroups", false]], "num_cutgroups() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_cutgroups", false]], "num_cutgroups() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_cutgroups", false]], "num_cutgroups() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_cutgroups", false]], "num_cutgroups() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_cutgroups", false]], "num_cutgroups() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_cutgroups", false]], "num_cutgroups() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_cutgroups", false]], "num_cutgroups() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_cutgroups", false]], "num_cutgroups() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_cutgroups", false]], "num_cutgroups() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_cutgroups", false]], "num_cutgroups() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_cutgroups", false]], "num_forces() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.num_forces", false]], "num_frames() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.num_frames", false]], "num_frames() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.num_frames", false]], "num_frames() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.num_frames", false]], "num_frames() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.num_frames", false]], "num_frames() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.num_frames", false]], "num_frames() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_frames", false]], "num_frames() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_frames", false]], "num_frames() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_frames", false]], "num_frames() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_frames", false]], "num_frames() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_frames", false]], "num_frames() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_frames", false]], "num_frames() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_frames", false]], "num_frames() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_frames", false]], "num_frames() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_frames", false]], "num_frames() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_frames", false]], "num_frames() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_frames", false]], "num_frames() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_frames", false]], "num_frames() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_frames", false]], "num_frames() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_frames", false]], "num_frames() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_frames", false]], "num_frames() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_frames", false]], "num_frames() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.num_frames", false]], "num_frames() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.num_frames", false]], "num_frames() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.num_frames", false]], "num_frames() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_frames", false]], "num_frames() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_frames", false]], "num_frames() (sire.system.system method)": [[31, "sire.system.System.num_frames", false]], "num_groups() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_groups", false]], "num_groups() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_groups", false]], "num_levers() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.num_levers", false]], "num_molecules() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.num_molecules", false]], "num_molecules() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_molecules", false]], "num_molecules() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_molecules", false]], "num_molecules() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_molecules", false]], "num_molecules() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_molecules", false]], "num_molecules() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_molecules", false]], "num_molecules() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_molecules", false]], "num_molecules() (sire.system.system method)": [[31, "sire.system.System.num_molecules", false]], "num_pages() (sire.base.pagecache method)": [[1, "sire.base.PageCache.num_pages", false]], "num_properties() (sire.base.properties method)": [[1, "sire.base.Properties.num_properties", false]], "num_protons() (sire.mol.element method)": [[24, "sire.mol.Element.num_protons", false]], "num_residues() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_residues", false]], "num_residues() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_residues", false]], "num_residues() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_residues", false]], "num_residues() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_residues", false]], "num_residues() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_residues", false]], "num_residues() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_residues", false]], "num_residues() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_residues", false]], "num_residues() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_residues", false]], "num_residues() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_residues", false]], "num_residues() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_residues", false]], "num_residues() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_residues", false]], "num_residues() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_residues", false]], "num_residues() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_residues", false]], "num_residues() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_residues", false]], "num_residues() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_residues", false]], "num_residues() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_residues", false]], "num_residues() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_residues", false]], "num_residues() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_residues", false]], "num_residues() (sire.system.system method)": [[31, "sire.system.System.num_residues", false]], "num_restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.num_restraints", false]], "num_segments() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_segments", false]], "num_segments() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_segments", false]], "num_segments() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_segments", false]], "num_segments() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_segments", false]], "num_segments() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_segments", false]], "num_segments() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_segments", false]], "num_segments() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_segments", false]], "num_segments() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_segments", false]], "num_segments() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.num_segments", false]], "num_segments() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.num_segments", false]], "num_segments() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.num_segments", false]], "num_segments() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.num_segments", false]], "num_segments() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_segments", false]], "num_segments() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_segments", false]], "num_segments() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.num_segments", false]], "num_segments() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_segments", false]], "num_segments() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_segments", false]], "num_segments() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.num_segments", false]], "num_segments() (sire.system.system method)": [[31, "sire.system.System.num_segments", false]], "num_stages() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.num_stages", false]], "num_views() (sire.mm.angle method)": [[23, "sire.mm.Angle.num_views", false]], "num_views() (sire.mm.bond method)": [[23, "sire.mm.Bond.num_views", false]], "num_views() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.num_views", false]], "num_views() (sire.mm.improper method)": [[23, "sire.mm.Improper.num_views", false]], "num_views() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.num_views", false]], "num_views() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.num_views", false]], "num_views() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.num_views", false]], "num_views() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.num_views", false]], "num_views() (sire.mol.atom method)": [[24, "sire.mol.Atom.num_views", false]], "num_views() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.num_views", false]], "num_views() (sire.mol.chain method)": [[24, "sire.mol.Chain.num_views", false]], "num_views() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.num_views", false]], "number (sire.mol.cursor property)": [[24, "sire.mol.Cursor.number", false]], "number() (sire.mol.atom method)": [[24, "sire.mol.Atom.number", false]], "number() (sire.mol.chain method)": [[24, "sire.mol.Chain.number", false]], "number() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.number", false]], "number() (sire.mol.residue method)": [[24, "sire.mol.Residue.number", false]], "number() (sire.mol.segment method)": [[24, "sire.mol.Segment.number", false]], "numbers() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.numbers", false]], "numbers() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.numbers", false]], "numbers() (sire.system.system method)": [[31, "sire.system.System.numbers", false]], "nvector_on_sphere() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.nvector_on_sphere", false]], "offset() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.offset", false]], "openmm_to_sire() (in module sire.convert)": [[3, "sire.convert.openmm_to_sire", false]], "openmmmetadata (class in sire.convert.openmm)": [[3, "sire.convert.openmm.OpenMMMetaData", false]], "page() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.page", false]], "page_size() (sire.base.pagecache method)": [[1, "sire.base.PageCache.page_size", false]], "pagecache (class in sire.base)": [[1, "sire.base.PageCache", false]], "pagecache.handle (class in sire.base)": [[1, "sire.base.PageCache.Handle", false]], "pagecache.page (class in sire.base)": [[1, "sire.base.PageCache.Page", false]], "panel() (sire.utils.console static method)": [[33, "sire.utils.Console.panel", false]], "parent() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.parent", false]], "parent() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.parent", false]], "parent() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.parent", false]], "parent() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.parent", false]], "parse() (sire.io.parser.dcd static method)": [[21, "sire.io.parser.DCD.parse", false]], "parse() (sire.io.parser.trr static method)": [[21, "sire.io.parser.TRR.parse", false]], "parse() (sire.io.parser.xtc static method)": [[21, "sire.io.parser.XTC.parse", false]], "parse_warnings() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.parse_warnings", false]], "pdb (in module sire.io.parser)": [[21, "sire.io.parser.PDB", false]], "pdbx (class in sire.io.parser)": [[21, "sire.io.parser.PDBx", false]], "period() (sire.mol.element method)": [[24, "sire.mol.Element.period", false]], "periodicbox (class in sire.vol)": [[34, "sire.vol.PeriodicBox", false]], "periodicity() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.periodicity", false]], "perturbable_constraint() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.perturbable_constraint", false]], "perturbable_constraint() (sire.mol.minimisation method)": [[24, "sire.mol.Minimisation.perturbable_constraint", false]], "perturbableopenmmmolecule (class in sire.convert.openmm)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule", false]], "perturbation (class in sire.morph)": [[25, "sire.morph.Perturbation", false]], "perturbation() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.perturbation", false]], "phase() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.phase", false]], "phi() (sire.mm.improper method)": [[23, "sire.mm.Improper.phi", false]], "pi (in module sire.maths)": [[22, "sire.maths.pi", false]], "picometer (in module sire.units)": [[32, "sire.units.picometer", false]], "platform() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.platform", false]], "point() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.point", false]], "point() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.point", false]], "positional() (in module sire.restraints)": [[26, "sire.restraints.positional", false]], "potential() (sire.mm.angle method)": [[23, "sire.mm.Angle.potential", false]], "potential() (sire.mm.bond method)": [[23, "sire.mm.Bond.potential", false]], "potential() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.potential", false]], "potential() (sire.mm.improper method)": [[23, "sire.mm.Improper.potential", false]], "potentials() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.potentials", false]], "potentials() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.potentials", false]], "potentials() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.potentials", false]], "potentials() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.potentials", false]], "potentials() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.potentials", false]], "potentials() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.potentials", false]], "potentials() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.potentials", false]], "potentials() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.potentials", false]], "pow() (sire.cas.expression method)": [[2, "sire.cas.Expression.pow", false]], "prepend_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.prepend_stage", false]], "print() (sire.utils.console static method)": [[33, "sire.utils.Console.print", false]], "print_exception() (sire.utils.console static method)": [[33, "sire.utils.Console.print_exception", false]], "prm (in module sire.io.parser)": [[21, "sire.io.parser.PRM", false]], "profiler (class in sire.utils)": [[33, "sire.utils.Profiler", false]], "properties (class in sire.base)": [[1, "sire.base.Properties", false]], "properties() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.properties", false]], "properties() (sire.mm.angle method)": [[23, "sire.mm.Angle.properties", false]], "properties() (sire.mm.bond method)": [[23, "sire.mm.Bond.properties", false]], "properties() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.properties", false]], "properties() (sire.mm.improper method)": [[23, "sire.mm.Improper.properties", false]], "properties() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.properties", false]], "properties() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.properties", false]], "properties() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.properties", false]], "properties() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.properties", false]], "properties() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.properties", false]], "properties() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.properties", false]], "properties() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.properties", false]], "properties() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.properties", false]], "properties() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.properties", false]], "properties() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.properties", false]], "properties() (sire.system.system method)": [[31, "sire.system.System.properties", false]], "property() (sire.base.properties method)": [[1, "sire.base.Properties.property", false]], "property() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.property", false]], "property() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.property", false]], "property() (sire.system.system method)": [[31, "sire.system.System.property", false]], "property_as_property() (sire.mol.atom method)": [[24, "sire.mol.Atom.property_as_property", false]], "property_as_property() (sire.mol.chain method)": [[24, "sire.mol.Chain.property_as_property", false]], "property_as_property() (sire.mol.residue method)": [[24, "sire.mol.Residue.property_as_property", false]], "property_as_property() (sire.mol.segment method)": [[24, "sire.mol.Segment.property_as_property", false]], "property_as_variant() (sire.mol.atom method)": [[24, "sire.mol.Atom.property_as_variant", false]], "property_as_variant() (sire.mol.chain method)": [[24, "sire.mol.Chain.property_as_variant", false]], "property_as_variant() (sire.mol.residue method)": [[24, "sire.mol.Residue.property_as_variant", false]], "property_as_variant() (sire.mol.segment method)": [[24, "sire.mol.Segment.property_as_variant", false]], "property_keys() (sire.base.properties method)": [[1, "sire.base.Properties.property_keys", false]], "property_keys() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.property_keys", false]], "property_keys() (sire.mm.angle method)": [[23, "sire.mm.Angle.property_keys", false]], "property_keys() (sire.mm.bond method)": [[23, "sire.mm.Bond.property_keys", false]], "property_keys() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.property_keys", false]], "property_keys() (sire.mm.improper method)": [[23, "sire.mm.Improper.property_keys", false]], "property_keys() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.property_keys", false]], "property_keys() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.property_keys", false]], "property_keys() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.property_keys", false]], "property_keys() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.property_keys", false]], "property_keys() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.property_keys", false]], "property_keys() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.property_keys", false]], "property_keys() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.property_keys", false]], "property_keys() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.property_keys", false]], "property_keys() (sire.mol.atom method)": [[24, "sire.mol.Atom.property_keys", false]], "property_keys() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.property_keys", false]], "property_keys() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.property_keys", false]], "property_keys() (sire.mol.chain method)": [[24, "sire.mol.Chain.property_keys", false]], "property_keys() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.property_keys", false]], "property_keys() (sire.mol.residue method)": [[24, "sire.mol.Residue.property_keys", false]], "property_keys() (sire.mol.segment method)": [[24, "sire.mol.Segment.property_keys", false]], "property_keys() (sire.system.system method)": [[31, "sire.system.System.property_keys", false]], "property_map0() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.property_map0", false]], "property_map1() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.property_map1", false]], "property_type() (sire.base.properties method)": [[1, "sire.base.Properties.property_type", false]], "property_type() (sire.mm.angle method)": [[23, "sire.mm.Angle.property_type", false]], "property_type() (sire.mm.bond method)": [[23, "sire.mm.Bond.property_type", false]], "property_type() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.property_type", false]], "property_type() (sire.mm.improper method)": [[23, "sire.mm.Improper.property_type", false]], "property_type() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.property_type", false]], "property_type() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.property_type", false]], "property_type() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.property_type", false]], "property_type() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.property_type", false]], "property_type() (sire.mol.atom method)": [[24, "sire.mol.Atom.property_type", false]], "property_type() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.property_type", false]], "property_type() (sire.mol.chain method)": [[24, "sire.mol.Chain.property_type", false]], "property_type() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.property_type", false]], "propertymap (class in sire.base)": [[1, "sire.base.PropertyMap", false]], "psf (in module sire.io.parser)": [[21, "sire.io.parser.PSF", false]], "r0() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.r0", false]], "r0() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.r0", false]], "rand() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.rand", false]], "rand53() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.rand53", false]], "rand_bool() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.rand_bool", false]], "rand_int() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.rand_int", false]], "rand_int64() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.rand_int64", false]], "rand_norm() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.rand_norm", false]], "randomise_velocities() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.randomise_velocities", false]], "rangenerator (class in sire.maths)": [[22, "sire.maths.RanGenerator", false]], "rare_earth() (sire.mol.element method)": [[24, "sire.mol.Element.rare_earth", false]], "rdkit_to_sire() (in module sire.convert)": [[3, "sire.convert.rdkit_to_sire", false]], "red() (sire.mol.element method)": [[24, "sire.mol.Element.red", false]], "redirect_output() (sire.utils.console static method)": [[33, "sire.utils.Console.redirect_output", false]], "reduce() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.reduce", false]], "remove() (sire.system.system method)": [[31, "sire.system.System.remove", false]], "remove_all_links() (sire.base.properties method)": [[1, "sire.base.Properties.remove_all_links", false]], "remove_all_metadata() (sire.base.properties method)": [[1, "sire.base.Properties.remove_all_metadata", false]], "remove_all_shared_properties() (sire.system.system method)": [[31, "sire.system.System.remove_all_shared_properties", false]], "remove_equation() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_equation", false]], "remove_force() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_force", false]], "remove_forces() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_forces", false]], "remove_lever() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_lever", false]], "remove_levers() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_levers", false]], "remove_link() (sire.base.properties method)": [[1, "sire.base.Properties.remove_link", false]], "remove_metadata() (sire.base.properties method)": [[1, "sire.base.Properties.remove_metadata", false]], "remove_molecule_schedule() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_molecule_schedule", false]], "remove_property() (sire.base.properties method)": [[1, "sire.base.Properties.remove_property", false]], "remove_property() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.remove_property", false]], "remove_shared_property() (sire.system.system method)": [[31, "sire.system.System.remove_shared_property", false]], "remove_stage() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.remove_stage", false]], "renumber() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.renumber", false]], "repartition_hydrogen_masses() (in module sire.morph)": [[25, "sire.morph.repartition_hydrogen_masses", false]], "replica_exchange() (in module sire.morph)": [[25, "sire.morph.replica_exchange", false]], "res_idxs() (sire.mol.chain method)": [[24, "sire.mol.Chain.res_idxs", false]], "reset() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.reset", false]], "reset_biological_elements() (sire.mol.element method)": [[24, "sire.mol.Element.reset_biological_elements", false]], "residue (class in sire.mol)": [[24, "sire.mol.Residue", false]], "residue() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.residue", false]], "residue() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.residue", false]], "residue() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.residue", false]], "residue() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.residue", false]], "residue() (sire.mol.atom method)": [[24, "sire.mol.Atom.residue", false]], "residue() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.residue", false]], "residue() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.residue", false]], "residue() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.residue", false]], "residue() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.residue", false]], "residue() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.residue", false]], "residue() (sire.system.system method)": [[31, "sire.system.System.residue", false]], "residues() (sire.mm.angle method)": [[23, "sire.mm.Angle.residues", false]], "residues() (sire.mm.bond method)": [[23, "sire.mm.Bond.residues", false]], "residues() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.residues", false]], "residues() (sire.mm.improper method)": [[23, "sire.mm.Improper.residues", false]], "residues() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.residues", false]], "residues() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.residues", false]], "residues() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.residues", false]], "residues() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.residues", false]], "residues() (sire.mol.atom method)": [[24, "sire.mol.Atom.residues", false]], "residues() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.residues", false]], "residues() (sire.mol.chain method)": [[24, "sire.mol.Chain.residues", false]], "residues() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.residues", false]], "residues() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.residues", false]], "residues() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.residues", false]], "residues() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.residues", false]], "residues() (sire.mol.residue method)": [[24, "sire.mol.Residue.residues", false]], "residues() (sire.mol.segment method)": [[24, "sire.mol.Segment.residues", false]], "residues() (sire.system.system method)": [[31, "sire.system.System.residues", false]], "residx (class in sire.mol)": [[24, "sire.mol.ResIdx", false]], "resname (class in sire.mol)": [[24, "sire.mol.ResName", false]], "resnum (class in sire.mol)": [[24, "sire.mol.ResNum", false]], "resolve_path() (in module sire.io)": [[20, "sire.io.resolve_path", false]], "restraints() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.restraints", false]], "reverse() (sire.maths.transform method)": [[22, "sire.maths.Transform.reverse", false]], "rhombic_dodecahedron_hexagon() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.rhombic_dodecahedron_hexagon", false]], "rhombic_dodecahedron_square() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.rhombic_dodecahedron_square", false]], "rmin() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.rmin", false]], "rmsd() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.rmsd", false]], "root() (sire.cas.expression method)": [[2, "sire.cas.Expression.root", false]], "root_directory() (sire.base.pagecache method)": [[1, "sire.base.PageCache.root_directory", false]], "rotate() (in module sire.maths)": [[22, "sire.maths.rotate", false]], "rotate() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.rotate", false]], "rotate() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.rotate", false]], "rotate() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.rotate", false]], "rotate() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.rotate", false]], "rotation_center() (sire.maths.transform method)": [[22, "sire.maths.Transform.rotation_center", false]], "rotation_matrix() (sire.maths.transform method)": [[22, "sire.maths.Transform.rotation_matrix", false]], "rotation_matrix() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.rotation_matrix", false]], "rotation_quaternion() (sire.maths.transform method)": [[22, "sire.maths.Transform.rotation_quaternion", false]], "row0() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.row0", false]], "row1() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.row1", false]], "row2() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.row2", false]], "rst (in module sire.io.parser)": [[21, "sire.io.parser.RST", false]], "rst7 (in module sire.io.parser)": [[21, "sire.io.parser.RST7", false]], "rule() (sire.utils.console static method)": [[33, "sire.utils.Console.rule", false]], "run() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.run", false]], "run() (sire.mol.minimisation method)": [[24, "sire.mol.Minimisation.run", false]], "save() (in module sire)": [[28, "sire.save", false]], "save() (in module sire.stream)": [[30, "sire.stream.save", false]], "save() (sire.utils.console static method)": [[33, "sire.utils.Console.save", false]], "save_frame() (sire.mm.angle method)": [[23, "sire.mm.Angle.save_frame", false]], "save_frame() (sire.mm.bond method)": [[23, "sire.mm.Bond.save_frame", false]], "save_frame() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.save_frame", false]], "save_frame() (sire.mm.improper method)": [[23, "sire.mm.Improper.save_frame", false]], "save_frame() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.save_frame", false]], "save_frame() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.save_frame", false]], "save_frame() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.save_frame", false]], "save_frame() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.save_frame", false]], "save_frame() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.save_frame", false]], "save_frame() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.save_frame", false]], "save_frame() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.save_frame", false]], "save_frame() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.save_frame", false]], "save_frame() (sire.mol.atom method)": [[24, "sire.mol.Atom.save_frame", false]], "save_frame() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.save_frame", false]], "save_frame() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.save_frame", false]], "save_frame() (sire.mol.chain method)": [[24, "sire.mol.Chain.save_frame", false]], "save_frame() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.save_frame", false]], "save_frame() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.save_frame", false]], "save_frame() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.save_frame", false]], "save_frame() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.save_frame", false]], "save_frame() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.save_frame", false]], "save_frame() (sire.system.system method)": [[31, "sire.system.System.save_frame", false]], "save_to_string() (in module sire)": [[28, "sire.save_to_string", false]], "sdf (class in sire.io.parser)": [[21, "sire.io.parser.SDF", false]], "search() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.search", false]], "search() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.search", false]], "search() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.search", false]], "search() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.search", false]], "search() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.search", false]], "search() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.search", false]], "seed() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.seed", false]], "seed_global() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.seed_global", false]], "segid() (in module sire)": [[28, "sire.segid", false]], "segidx (class in sire.mol)": [[24, "sire.mol.SegIdx", false]], "segment (class in sire.mol)": [[24, "sire.mol.Segment", false]], "segment() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.segment", false]], "segment() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.segment", false]], "segment() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.segment", false]], "segment() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.segment", false]], "segment() (sire.mol.atom method)": [[24, "sire.mol.Atom.segment", false]], "segment() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.segment", false]], "segment() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.segment", false]], "segment() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.segment", false]], "segment() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.segment", false]], "segment() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.segment", false]], "segment() (sire.system.system method)": [[31, "sire.system.System.segment", false]], "segments() (sire.mm.angle method)": [[23, "sire.mm.Angle.segments", false]], "segments() (sire.mm.bond method)": [[23, "sire.mm.Bond.segments", false]], "segments() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.segments", false]], "segments() (sire.mm.improper method)": [[23, "sire.mm.Improper.segments", false]], "segments() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.segments", false]], "segments() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.segments", false]], "segments() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.segments", false]], "segments() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.segments", false]], "segments() (sire.mol.atom method)": [[24, "sire.mol.Atom.segments", false]], "segments() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.segments", false]], "segments() (sire.mol.chain method)": [[24, "sire.mol.Chain.segments", false]], "segments() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.segments", false]], "segments() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.segments", false]], "segments() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.segments", false]], "segments() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.segments", false]], "segments() (sire.mol.residue method)": [[24, "sire.mol.Residue.segments", false]], "segments() (sire.mol.segment method)": [[24, "sire.mol.Segment.segments", false]], "segments() (sire.system.system method)": [[31, "sire.system.System.segments", false]], "segname (class in sire.mol)": [[24, "sire.mol.SegName", false]], "select_all() (sire.mm.angle method)": [[23, "sire.mm.Angle.select_all", false]], "select_all() (sire.mm.bond method)": [[23, "sire.mm.Bond.select_all", false]], "select_all() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.select_all", false]], "select_all() (sire.mm.improper method)": [[23, "sire.mm.Improper.select_all", false]], "select_all() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.select_all", false]], "select_all() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.select_all", false]], "select_all() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.select_all", false]], "select_all() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.select_all", false]], "select_all() (sire.mol.atom method)": [[24, "sire.mol.Atom.select_all", false]], "select_all() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.select_all", false]], "select_all() (sire.mol.chain method)": [[24, "sire.mol.Chain.select_all", false]], "select_all() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.select_all", false]], "select_all_atoms() (sire.mm.angle method)": [[23, "sire.mm.Angle.select_all_atoms", false]], "select_all_atoms() (sire.mm.bond method)": [[23, "sire.mm.Bond.select_all_atoms", false]], "select_all_atoms() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.select_all_atoms", false]], "select_all_atoms() (sire.mm.improper method)": [[23, "sire.mm.Improper.select_all_atoms", false]], "select_all_atoms() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.select_all_atoms", false]], "select_all_atoms() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.select_all_atoms", false]], "select_all_atoms() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.select_all_atoms", false]], "select_all_atoms() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.select_all_atoms", false]], "select_all_atoms() (sire.mol.atom method)": [[24, "sire.mol.Atom.select_all_atoms", false]], "select_all_atoms() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.select_all_atoms", false]], "select_all_atoms() (sire.mol.chain method)": [[24, "sire.mol.Chain.select_all_atoms", false]], "select_all_atoms() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.select_all_atoms", false]], "select_all_chains() (sire.mm.angle method)": [[23, "sire.mm.Angle.select_all_chains", false]], "select_all_chains() (sire.mm.bond method)": [[23, "sire.mm.Bond.select_all_chains", false]], "select_all_chains() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.select_all_chains", false]], "select_all_chains() (sire.mm.improper method)": [[23, "sire.mm.Improper.select_all_chains", false]], "select_all_chains() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.select_all_chains", false]], "select_all_chains() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.select_all_chains", false]], "select_all_chains() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.select_all_chains", false]], "select_all_chains() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.select_all_chains", false]], "select_all_chains() (sire.mol.atom method)": [[24, "sire.mol.Atom.select_all_chains", false]], "select_all_chains() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.select_all_chains", false]], "select_all_chains() (sire.mol.chain method)": [[24, "sire.mol.Chain.select_all_chains", false]], "select_all_chains() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.select_all_chains", false]], "select_all_cutgroups() (sire.mm.angle method)": [[23, "sire.mm.Angle.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.bond method)": [[23, "sire.mm.Bond.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.improper method)": [[23, "sire.mm.Improper.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mol.atom method)": [[24, "sire.mol.Atom.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mol.chain method)": [[24, "sire.mol.Chain.select_all_cutgroups", false]], "select_all_cutgroups() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.select_all_cutgroups", false]], "select_all_residues() (sire.mm.angle method)": [[23, "sire.mm.Angle.select_all_residues", false]], "select_all_residues() (sire.mm.bond method)": [[23, "sire.mm.Bond.select_all_residues", false]], "select_all_residues() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.select_all_residues", false]], "select_all_residues() (sire.mm.improper method)": [[23, "sire.mm.Improper.select_all_residues", false]], "select_all_residues() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.select_all_residues", false]], "select_all_residues() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.select_all_residues", false]], "select_all_residues() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.select_all_residues", false]], "select_all_residues() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.select_all_residues", false]], "select_all_residues() (sire.mol.atom method)": [[24, "sire.mol.Atom.select_all_residues", false]], "select_all_residues() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.select_all_residues", false]], "select_all_residues() (sire.mol.chain method)": [[24, "sire.mol.Chain.select_all_residues", false]], "select_all_residues() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.select_all_residues", false]], "select_all_segments() (sire.mm.angle method)": [[23, "sire.mm.Angle.select_all_segments", false]], "select_all_segments() (sire.mm.bond method)": [[23, "sire.mm.Bond.select_all_segments", false]], "select_all_segments() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.select_all_segments", false]], "select_all_segments() (sire.mm.improper method)": [[23, "sire.mm.Improper.select_all_segments", false]], "select_all_segments() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.select_all_segments", false]], "select_all_segments() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.select_all_segments", false]], "select_all_segments() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.select_all_segments", false]], "select_all_segments() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.select_all_segments", false]], "select_all_segments() (sire.mol.atom method)": [[24, "sire.mol.Atom.select_all_segments", false]], "select_all_segments() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.select_all_segments", false]], "select_all_segments() (sire.mol.chain method)": [[24, "sire.mol.Chain.select_all_segments", false]], "select_all_segments() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.select_all_segments", false]], "selected_all() (sire.mm.angle method)": [[23, "sire.mm.Angle.selected_all", false]], "selected_all() (sire.mm.bond method)": [[23, "sire.mm.Bond.selected_all", false]], "selected_all() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.selected_all", false]], "selected_all() (sire.mm.improper method)": [[23, "sire.mm.Improper.selected_all", false]], "selected_all() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.selected_all", false]], "selected_all() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.selected_all", false]], "selected_all() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.selected_all", false]], "selected_all() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.selected_all", false]], "selected_all() (sire.mol.atom method)": [[24, "sire.mol.Atom.selected_all", false]], "selected_all() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.selected_all", false]], "selected_all() (sire.mol.chain method)": [[24, "sire.mol.Chain.selected_all", false]], "selected_all() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.selected_all", false]], "selected_all() (sire.mol.residue method)": [[24, "sire.mol.Residue.selected_all", false]], "selected_all() (sire.mol.segment method)": [[24, "sire.mol.Segment.selected_all", false]], "selection() (sire.mm.angle method)": [[23, "sire.mm.Angle.selection", false]], "selection() (sire.mm.bond method)": [[23, "sire.mm.Bond.selection", false]], "selection() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.selection", false]], "selection() (sire.mm.improper method)": [[23, "sire.mm.Improper.selection", false]], "selection() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.selection", false]], "selection() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.selection", false]], "selection() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.selection", false]], "selection() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.selection", false]], "selection() (sire.mol.atom method)": [[24, "sire.mol.Atom.selection", false]], "selection() (sire.mol.chain method)": [[24, "sire.mol.Chain.selection", false]], "selection() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.selection", false]], "selection() (sire.mol.residue method)": [[24, "sire.mol.Residue.selection", false]], "selection() (sire.mol.segment method)": [[24, "sire.mol.Segment.selection", false]], "selection_to_atoms() (in module sire.mol)": [[24, "sire.mol.selection_to_atoms", false]], "selector() (sire.mm.angle method)": [[23, "sire.mm.Angle.selector", false]], "selector() (sire.mm.bond method)": [[23, "sire.mm.Bond.selector", false]], "selector() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.selector", false]], "selector() (sire.mm.improper method)": [[23, "sire.mm.Improper.selector", false]], "selector() (sire.mol.atom method)": [[24, "sire.mol.Atom.selector", false]], "selector() (sire.mol.chain method)": [[24, "sire.mol.Chain.selector", false]], "selector() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.selector", false]], "selector() (sire.mol.residue method)": [[24, "sire.mol.Residue.selector", false]], "selector() (sire.mol.segment method)": [[24, "sire.mol.Segment.selector", false]], "selectorangle (class in sire.mm)": [[23, "sire.mm.SelectorAngle", false]], "selectorbond (class in sire.mm)": [[23, "sire.mm.SelectorBond", false]], "selectordihedral (class in sire.mm)": [[23, "sire.mm.SelectorDihedral", false]], "selectorimproper (class in sire.mm)": [[23, "sire.mm.SelectorImproper", false]], "selectormangle (class in sire.mm)": [[23, "sire.mm.SelectorMAngle", false]], "selectormbond (class in sire.mm)": [[23, "sire.mm.SelectorMBond", false]], "selectormdihedral (class in sire.mm)": [[23, "sire.mm.SelectorMDihedral", false]], "selectormimproper (class in sire.mm)": [[23, "sire.mm.SelectorMImproper", false]], "selectormol (class in sire.mol)": [[24, "sire.mol.SelectorMol", false]], "series() (sire.cas.expression method)": [[2, "sire.cas.Expression.series", false]], "set() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.set", false]], "set() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.set", false]], "set() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.set", false]], "set() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.set", false]], "set_approx_epsilon() (in module sire.search)": [[27, "sire.search.set_approx_epsilon", false]], "set_constant() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.set_constant", false]], "set_constraint_indicies() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.set_constraint_indicies", false]], "set_constraint_indicies() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.set_constraint_indicies", false]], "set_debugging_enabled() (sire.utils.console static method)": [[33, "sire.utils.Console.set_debugging_enabled", false]], "set_default_equation() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.set_default_equation", false]], "set_default_num_threads() (in module sire)": [[28, "sire.set_default_num_threads", false]], "set_default_stage_equation() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.set_default_stage_equation", false]], "set_default_unit() (in module sire.units)": [[32, "sire.units.set_default_unit", false]], "set_default_units() (in module sire.units)": [[32, "sire.units.set_default_units", false]], "set_dimensions() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.set_dimensions", false]], "set_element_is_biological() (sire.mol.element method)": [[24, "sire.mol.Element.set_element_is_biological", false]], "set_element_is_not_biological() (sire.mol.element method)": [[24, "sire.mol.Element.set_element_is_not_biological", false]], "set_energy_trajectory() (sire.system.system method)": [[31, "sire.system.System.set_energy_trajectory", false]], "set_energy_unit() (in module sire.units)": [[32, "sire.units.set_energy_unit", false]], "set_ensemble() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.set_ensemble", false]], "set_ensemble() (sire.system.system method)": [[31, "sire.system.System.set_ensemble", false]], "set_equation() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.set_equation", false]], "set_exception_indicies() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.set_exception_indicies", false]], "set_exception_indicies() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.set_exception_indicies", false]], "set_force_index() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.set_force_index", false]], "set_header_property() (in module sire.stream)": [[30, "sire.stream.set_header_property", false]], "set_internal_units() (in module sire.units)": [[32, "sire.units.set_internal_units", false]], "set_lambda() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.set_lambda", false]], "set_lambda() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.set_lambda", false]], "set_lambda() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.set_lambda", false]], "set_lambda() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.set_lambda", false]], "set_lambda_schedule() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.set_lambda_schedule", false]], "set_length_unit() (in module sire.units)": [[32, "sire.units.set_length_unit", false]], "set_mass_unit() (in module sire.units)": [[32, "sire.units.set_mass_unit", false]], "set_max_num_threads() (in module sire)": [[28, "sire.set_max_num_threads", false]], "set_max_page_size() (sire.base.pagecache method)": [[1, "sire.base.PageCache.set_max_page_size", false]], "set_max_resident_pages() (sire.base.pagecache method)": [[1, "sire.base.PageCache.set_max_resident_pages", false]], "set_metadata() (sire.base.properties method)": [[1, "sire.base.Properties.set_metadata", false]], "set_metadata() (sire.system.system method)": [[31, "sire.system.System.set_metadata", false]], "set_min_protein_residues() (in module sire.search)": [[27, "sire.search.set_min_protein_residues", false]], "set_molecule_schedule() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.set_molecule_schedule", false]], "set_name() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.set_name", false]], "set_name() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.set_name", false]], "set_number() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.set_number", false]], "set_platform_property() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.set_platform_property", false]], "set_pressure() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.set_pressure", false]], "set_pressure() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.set_pressure", false]], "set_property() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.set_property", false]], "set_property() (sire.system.system method)": [[31, "sire.system.System.set_property", false]], "set_protein_residue_names() (in module sire.search)": [[27, "sire.search.set_protein_residue_names", false]], "set_quantity_unit() (in module sire.units)": [[32, "sire.units.set_quantity_unit", false]], "set_root_directory() (sire.base.pagecache method)": [[1, "sire.base.PageCache.set_root_directory", false]], "set_schedule() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.set_schedule", false]], "set_schedule() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.set_schedule", false]], "set_shared_property() (sire.system.system method)": [[31, "sire.system.System.set_shared_property", false]], "set_si_units() (in module sire.units)": [[32, "sire.units.set_si_units", false]], "set_space() (sire.system.system method)": [[31, "sire.system.System.set_space", false]], "set_state() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.set_state", false]], "set_temperature() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.set_temperature", false]], "set_temperature() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.set_temperature", false]], "set_theme() (sire.utils.console static method)": [[33, "sire.utils.Console.set_theme", false]], "set_time() (sire.system.system method)": [[31, "sire.system.System.set_time", false]], "set_time_unit() (in module sire.units)": [[32, "sire.units.set_time_unit", false]], "set_to_identity() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.set_to_identity", false]], "set_token() (in module sire.search)": [[27, "sire.search.set_token", false]], "set_use_parallel() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.set_use_parallel", false]], "set_volume() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.set_volume", false]], "set_volume() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.set_volume", false]], "set_volume() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.set_volume", false]], "shared_properties() (sire.system.system method)": [[31, "sire.system.System.shared_properties", false]], "shrink_ghost_atoms() (in module sire.morph)": [[25, "sire.morph.shrink_ghost_atoms", false]], "sigma() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.sigma", false]], "simplify() (sire.cas.expression method)": [[2, "sire.cas.Expression.simplify", false]], "single_bond() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.single_bond", false]], "single_value_decomposition() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.single_value_decomposition", false]], "sire": [[28, "module-sire", false]], "sire.base": [[1, "module-sire.base", false]], "sire.cas": [[2, "module-sire.cas", false]], "sire.convert": [[3, "module-sire.convert", false]], "sire.convert.openmm": [[3, "module-sire.convert.openmm", false]], "sire.io": [[20, "module-sire.io", false]], "sire.io.parser": [[21, "module-sire.io.parser", false]], "sire.maths": [[22, "module-sire.maths", false]], "sire.mm": [[23, "module-sire.mm", false]], "sire.mol": [[24, "module-sire.mol", false]], "sire.morph": [[25, "module-sire.morph", false]], "sire.restraints": [[26, "module-sire.restraints", false]], "sire.search": [[27, "module-sire.search", false]], "sire.stream": [[30, "module-sire.stream", false]], "sire.system": [[31, "module-sire.system", false]], "sire.units": [[32, "module-sire.units", false]], "sire.utils": [[33, "module-sire.utils", false]], "sire.vol": [[34, "module-sire.vol", false]], "sire_to_biosimspace() (in module sire.convert)": [[3, "sire.convert.sire_to_biosimspace", false]], "sire_to_gemmi() (in module sire.convert)": [[3, "sire.convert.sire_to_gemmi", false]], "sire_to_openmm() (in module sire.convert)": [[3, "sire.convert.sire_to_openmm", false]], "sire_to_rdkit() (in module sire.convert)": [[3, "sire.convert.sire_to_rdkit", false]], "size() (sire.base.pagecache method)": [[1, "sire.base.PageCache.size", false]], "size() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.size", false]], "size() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.size", false]], "size() (sire.base.properties method)": [[1, "sire.base.Properties.size", false]], "size() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.size", false]], "size() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.size", false]], "size() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.size", false]], "size() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.size", false]], "size() (sire.mm.angle method)": [[23, "sire.mm.Angle.size", false]], "size() (sire.mm.bond method)": [[23, "sire.mm.Bond.size", false]], "size() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.size", false]], "size() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.size", false]], "size() (sire.mm.improper method)": [[23, "sire.mm.Improper.size", false]], "size() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.size", false]], "size() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.size", false]], "size() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.size", false]], "size() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.size", false]], "size() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.size", false]], "size() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.size", false]], "size() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.size", false]], "size() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.size", false]], "size() (sire.mol.atom method)": [[24, "sire.mol.Atom.size", false]], "size() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.size", false]], "size() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.size", false]], "size() (sire.mol.chain method)": [[24, "sire.mol.Chain.size", false]], "size() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.size", false]], "size() (sire.mol.residue method)": [[24, "sire.mol.Residue.size", false]], "size() (sire.mol.segment method)": [[24, "sire.mol.Segment.size", false]], "size() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.size", false]], "size() (sire.system.system method)": [[31, "sire.system.System.size", false]], "sizes() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.sizes", false]], "sizes() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.sizes", false]], "sizes() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.sizes", false]], "sizes() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.sizes", false]], "sizes() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.sizes", false]], "sizes() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.sizes", false]], "smarts() (in module sire)": [[28, "sire.smarts", false]], "smarts() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.smarts", false]], "smarts() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.smarts", false]], "smarts() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.smarts", false]], "smarts() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.smarts", false]], "smarts() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.smarts", false]], "smarts() (sire.system.system method)": [[31, "sire.system.System.smarts", false]], "smiles() (in module sire)": [[28, "sire.smiles", false]], "smiles() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.smiles", false]], "smiles() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.smiles", false]], "smiles() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.smiles", false]], "smiles() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.smiles", false]], "smiles() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.smiles", false]], "smiles() (sire.system.system method)": [[31, "sire.system.System.smiles", false]], "smooth() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.smooth", false]], "sommcontext (class in sire.convert.openmm)": [[3, "sire.convert.openmm.SOMMContext", false]], "space() (sire.system.system method)": [[31, "sire.system.System.space", false]], "specified() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.specified", false]], "sphere (class in sire.maths)": [[22, "sire.maths.Sphere", false]], "sqrt() (in module sire)": [[28, "sire.sqrt", false]], "sqrt_epsilon() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.sqrt_epsilon", false]], "sqrt_sigma() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.sqrt_sigma", false]], "squared() (sire.cas.expression method)": [[2, "sire.cas.Expression.squared", false]], "standard_annihilate() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.standard_annihilate", false]], "standard_decouple() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.standard_decouple", false]], "standard_morph() (sire.cas.lambdaschedule static method)": [[2, "sire.cas.LambdaSchedule.standard_morph", false]], "start() (sire.utils.profiler method)": [[33, "sire.utils.Profiler.start", false]], "step() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.step", false]], "step_speed() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.step_speed", false]], "stereochemistry (class in sire.mol)": [[24, "sire.mol.Stereochemistry", false]], "stop() (sire.utils.profiler method)": [[33, "sire.utils.Profiler.stop", false]], "store() (sire.base.pagecache method)": [[1, "sire.base.PageCache.store", false]], "substitute() (sire.cas.expression method)": [[2, "sire.cas.Expression.substitute", false]], "substitute() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.substitute", false]], "subtract() (sire.cas.expression method)": [[2, "sire.cas.Expression.subtract", false]], "supported_formats() (in module sire)": [[28, "sire.supported_formats", false]], "supported_formats() (in module sire.convert)": [[3, "sire.convert.supported_formats", false]], "supported_formats() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.supported_formats", false]], "supports_emojis() (sire.utils.console static method)": [[33, "sire.utils.Console.supports_emojis", false]], "svd() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.svd", false]], "swap() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.swap", false]], "symbol (class in sire.cas)": [[2, "sire.cas.Symbol", false]], "symbol() (sire.mol.element method)": [[24, "sire.mol.Element.symbol", false]], "symbols() (sire.cas.expression method)": [[2, "sire.cas.Expression.symbols", false]], "symbols() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.symbols", false]], "system (class in sire.system)": [[31, "sire.system.System", false]], "table (class in sire.utils)": [[33, "sire.utils.Table", false]], "take_molecule_schedule() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.take_molecule_schedule", false]], "terms() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.terms", false]], "theta() (sire.mm.improper method)": [[23, "sire.mm.Improper.theta", false]], "theta0() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.theta0", false]], "time() (sire.system.system method)": [[31, "sire.system.System.time", false]], "time_speed() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.time_speed", false]], "times() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.times", false]], "timestep() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.timestep", false]], "to() (in module sire.convert)": [[3, "sire.convert.to", false]], "to_alchemlyb() (in module sire.morph)": [[25, "sire.morph.to_alchemlyb", false]], "to_alchemlyb() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.to_alchemlyb", false]], "to_biosimspace() (in module sire.convert)": [[3, "sire.convert.to_biosimspace", false]], "to_dict() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.to_dict", false]], "to_expression() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.to_expression", false]], "to_expression() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.to_expression", false]], "to_expression() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.to_expression", false]], "to_lines() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.to_lines", false]], "to_list() (sire.mm.angle method)": [[23, "sire.mm.Angle.to_list", false]], "to_list() (sire.mm.bond method)": [[23, "sire.mm.Bond.to_list", false]], "to_list() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.to_list", false]], "to_list() (sire.mm.improper method)": [[23, "sire.mm.Improper.to_list", false]], "to_list() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.to_list", false]], "to_list() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.to_list", false]], "to_list() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.to_list", false]], "to_list() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.to_list", false]], "to_list() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.to_list", false]], "to_list() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.to_list", false]], "to_list() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.to_list", false]], "to_list() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.to_list", false]], "to_list() (sire.mol.atom method)": [[24, "sire.mol.Atom.to_list", false]], "to_list() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.to_list", false]], "to_list() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.to_list", false]], "to_list() (sire.mol.chain method)": [[24, "sire.mol.Chain.to_list", false]], "to_list() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.to_list", false]], "to_list() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.to_list", false]], "to_lj_pair() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.to_lj_pair", false]], "to_lj_parameter() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.to_lj_parameter", false]], "to_molecule_group() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.to_molecule_group", false]], "to_molecule_group() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.to_molecule_group", false]], "to_molecule_group() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.to_molecule_group", false]], "to_molecule_group() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.to_molecule_group", false]], "to_molecule_group() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.to_molecule_group", false]], "to_molecule_group() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.to_molecule_group", false]], "to_molecule_group() (sire.system.system method)": [[31, "sire.system.System.to_molecule_group", false]], "to_molecules() (sire.mm.angle method)": [[23, "sire.mm.Angle.to_molecules", false]], "to_molecules() (sire.mm.bond method)": [[23, "sire.mm.Bond.to_molecules", false]], "to_molecules() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.to_molecules", false]], "to_molecules() (sire.mm.improper method)": [[23, "sire.mm.Improper.to_molecules", false]], "to_molecules() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.to_molecules", false]], "to_molecules() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.to_molecules", false]], "to_molecules() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.to_molecules", false]], "to_molecules() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.to_molecules", false]], "to_molecules() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.to_molecules", false]], "to_molecules() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.to_molecules", false]], "to_molecules() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.to_molecules", false]], "to_molecules() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.to_molecules", false]], "to_molecules() (sire.mol.atom method)": [[24, "sire.mol.Atom.to_molecules", false]], "to_molecules() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.to_molecules", false]], "to_molecules() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.to_molecules", false]], "to_molecules() (sire.mol.chain method)": [[24, "sire.mol.Chain.to_molecules", false]], "to_molecules() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.to_molecules", false]], "to_molecules() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.to_molecules", false]], "to_open_m_m_string() (sire.cas.expression method)": [[2, "sire.cas.Expression.to_open_m_m_string", false]], "to_openmm() (in module sire.convert)": [[3, "sire.convert.to_openmm", false]], "to_openmm() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.to_openmm", false]], "to_pandas() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.to_pandas", false]], "to_rdkit() (in module sire.convert)": [[3, "sire.convert.to_rdkit", false]], "to_rdkit() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.to_rdkit", false]], "to_rdkit() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.to_rdkit", false]], "to_s_d_f() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.to_s_d_f", false]], "to_s_d_f() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.to_s_d_f", false]], "to_select_result() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.to_select_result", false]], "to_select_result() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.to_select_result", false]], "to_select_result() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.to_select_result", false]], "to_select_result() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.to_select_result", false]], "to_select_result() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.to_select_result", false]], "to_select_result() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.to_select_result", false]], "to_selector() (sire.mm.angle method)": [[23, "sire.mm.Angle.to_selector", false]], "to_selector() (sire.mm.bond method)": [[23, "sire.mm.Bond.to_selector", false]], "to_selector() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.to_selector", false]], "to_selector() (sire.mm.improper method)": [[23, "sire.mm.Improper.to_selector", false]], "to_selector() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.to_selector", false]], "to_selector() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.to_selector", false]], "to_selector() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.to_selector", false]], "to_selector() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.to_selector", false]], "to_selector() (sire.mol.atom method)": [[24, "sire.mol.Atom.to_selector", false]], "to_selector() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.to_selector", false]], "to_selector() (sire.mol.chain method)": [[24, "sire.mol.Chain.to_selector", false]], "to_selector() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.to_selector", false]], "to_selector() (sire.mol.residue method)": [[24, "sire.mol.Residue.to_selector", false]], "to_selector() (sire.mol.segment method)": [[24, "sire.mol.Segment.to_selector", false]], "to_sire() (in module sire.convert)": [[3, "sire.convert.to_sire", false]], "to_string() (sire.base.pagecache method)": [[1, "sire.base.PageCache.to_string", false]], "to_string() (sire.base.properties method)": [[1, "sire.base.Properties.to_string", false]], "to_string() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.to_string", false]], "to_string() (sire.cas.expression method)": [[2, "sire.cas.Expression.to_string", false]], "to_string() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.to_string", false]], "to_string() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.to_string", false]], "to_string() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.to_string", false]], "to_string() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.to_string", false]], "to_string() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.to_string", false]], "to_string() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.to_string", false]], "to_string() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.to_string", false]], "to_string() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.to_string", false]], "to_string() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.to_string", false]], "to_string() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.to_string", false]], "to_string() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.to_string", false]], "to_string() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.to_string", false]], "to_string() (sire.maths.transform method)": [[22, "sire.maths.Transform.to_string", false]], "to_string() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.to_string", false]], "to_string() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.to_string", false]], "to_string() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.to_string", false]], "to_string() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.to_string", false]], "to_string() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.to_string", false]], "to_string() (sire.mm.angle method)": [[23, "sire.mm.Angle.to_string", false]], "to_string() (sire.mm.bond method)": [[23, "sire.mm.Bond.to_string", false]], "to_string() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.to_string", false]], "to_string() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.to_string", false]], "to_string() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.to_string", false]], "to_string() (sire.mm.improper method)": [[23, "sire.mm.Improper.to_string", false]], "to_string() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.to_string", false]], "to_string() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.to_string", false]], "to_string() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.to_string", false]], "to_string() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.to_string", false]], "to_string() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.to_string", false]], "to_string() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.to_string", false]], "to_string() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.to_string", false]], "to_string() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.to_string", false]], "to_string() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.to_string", false]], "to_string() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.to_string", false]], "to_string() (sire.mol.atom method)": [[24, "sire.mol.Atom.to_string", false]], "to_string() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.to_string", false]], "to_string() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.to_string", false]], "to_string() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.to_string", false]], "to_string() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.to_string", false]], "to_string() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.to_string", false]], "to_string() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.to_string", false]], "to_string() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.to_string", false]], "to_string() (sire.mol.chain method)": [[24, "sire.mol.Chain.to_string", false]], "to_string() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.to_string", false]], "to_string() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.to_string", false]], "to_string() (sire.mol.element method)": [[24, "sire.mol.Element.to_string", false]], "to_string() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.to_string", false]], "to_string() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.to_string", false]], "to_string() (sire.mol.molname method)": [[24, "sire.mol.MolName.to_string", false]], "to_string() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.to_string", false]], "to_string() (sire.mol.residue method)": [[24, "sire.mol.Residue.to_string", false]], "to_string() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.to_string", false]], "to_string() (sire.mol.resname method)": [[24, "sire.mol.ResName.to_string", false]], "to_string() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.to_string", false]], "to_string() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.to_string", false]], "to_string() (sire.mol.segment method)": [[24, "sire.mol.Segment.to_string", false]], "to_string() (sire.mol.segname method)": [[24, "sire.mol.SegName.to_string", false]], "to_string() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.to_string", false]], "to_string() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.to_string", false]], "to_string() (sire.utils.table method)": [[33, "sire.utils.Table.to_string", false]], "to_string() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.to_string", false]], "to_string() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.to_string", false]], "to_string() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.to_string", false]], "to_string() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.to_string", false]], "to_system() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.to_system", false]], "to_unit() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.to_unit", false]], "to_vector() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.to_vector", false]], "to_xml() (sire.convert.openmm.sommcontext method)": [[3, "sire.convert.openmm.SOMMContext.to_xml", false]], "to_xml() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.to_xml", false]], "torsion (class in sire.maths)": [[22, "sire.maths.Torsion", false]], "torsions() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.torsions", false]], "tostring() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.toString", false]], "tostring() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.toString", false]], "total() (sire.utils.profiler method)": [[33, "sire.utils.Profiler.total", false]], "trace() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.trace", false]], "traj (in module sire.io.parser)": [[21, "sire.io.parser.TRAJ", false]], "trajectory() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.trajectory", false]], "trajectory() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.trajectory", false]], "trajectory() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.trajectory", false]], "trajectory() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.trajectory", false]], "trajectory() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.trajectory", false]], "trajectory() (sire.system.system method)": [[31, "sire.system.System.trajectory", false]], "trajectoryiterator (class in sire.mol)": [[24, "sire.mol.TrajectoryIterator", false]], "transform (class in sire.maths)": [[22, "sire.maths.Transform", false]], "transform() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.transform", false]], "transform() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.transform", false]], "transform() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.transform", false]], "transition_metal() (sire.mol.element method)": [[24, "sire.mol.Element.transition_metal", false]], "translate() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.translate", false]], "translate() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.translate", false]], "translate() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.translate", false]], "translation_delta() (sire.maths.transform method)": [[22, "sire.maths.Transform.translation_delta", false]], "transpose() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.transpose", false]], "triangle (class in sire.maths)": [[22, "sire.maths.Triangle", false]], "triangle1() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.triangle1", false]], "triangle2() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.triangle2", false]], "triclinicbox (class in sire.vol)": [[34, "sire.vol.TriclinicBox", false]], "triple_bond() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.triple_bond", false]], "trr (class in sire.io.parser)": [[21, "sire.io.parser.TRR", false]], "truncated_octahedron() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.truncated_octahedron", false]], "try_import() (in module sire.utils)": [[33, "sire.utils.try_import", false]], "try_import_from() (in module sire.utils)": [[33, "sire.utils.try_import_from", false]], "tutorial_url (in module sire)": [[28, "sire.tutorial_url", false]], "type() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.type", false]], "typename() (sire.base.pagecache method)": [[1, "sire.base.PageCache.typename", false]], "typename() (sire.base.pagecache.handle static method)": [[1, "sire.base.PageCache.Handle.typeName", false]], "typename() (sire.base.pagecache.page static method)": [[1, "sire.base.PageCache.Page.typeName", false]], "typename() (sire.base.properties method)": [[1, "sire.base.Properties.typename", false]], "typename() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.typename", false]], "typename() (sire.cas.expression method)": [[2, "sire.cas.Expression.typename", false]], "typename() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.typename", false]], "typename() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.typename", false]], "typename() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.typename", false]], "typename() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.typename", false]], "typename() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.typename", false]], "typename() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.typename", false]], "typename() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.typename", false]], "typename() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.typename", false]], "typename() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.typename", false]], "typename() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.typename", false]], "typename() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.typename", false]], "typename() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.typename", false]], "typename() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.typename", false]], "typename() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.typename", false]], "typename() (sire.maths.transform method)": [[22, "sire.maths.Transform.typename", false]], "typename() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.typename", false]], "typename() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.typename", false]], "typename() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.typename", false]], "typename() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.typename", false]], "typename() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.typename", false]], "typename() (sire.mm.angle method)": [[23, "sire.mm.Angle.typename", false]], "typename() (sire.mm.bond method)": [[23, "sire.mm.Bond.typename", false]], "typename() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.typename", false]], "typename() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.typename", false]], "typename() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.typename", false]], "typename() (sire.mm.improper method)": [[23, "sire.mm.Improper.typename", false]], "typename() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.typename", false]], "typename() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.typename", false]], "typename() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.typename", false]], "typename() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.typename", false]], "typename() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.typename", false]], "typename() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.typename", false]], "typename() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.typename", false]], "typename() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.typename", false]], "typename() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.typename", false]], "typename() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.typename", false]], "typename() (sire.mol.atom method)": [[24, "sire.mol.Atom.typename", false]], "typename() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.typename", false]], "typename() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.typename", false]], "typename() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.typename", false]], "typename() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.typename", false]], "typename() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.typename", false]], "typename() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.typename", false]], "typename() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.typename", false]], "typename() (sire.mol.chain method)": [[24, "sire.mol.Chain.typename", false]], "typename() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.typename", false]], "typename() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.typename", false]], "typename() (sire.mol.element method)": [[24, "sire.mol.Element.typename", false]], "typename() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.typename", false]], "typename() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.typename", false]], "typename() (sire.mol.molname method)": [[24, "sire.mol.MolName.typename", false]], "typename() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.typename", false]], "typename() (sire.mol.residue method)": [[24, "sire.mol.Residue.typename", false]], "typename() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.typename", false]], "typename() (sire.mol.resname method)": [[24, "sire.mol.ResName.typename", false]], "typename() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.typename", false]], "typename() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.typename", false]], "typename() (sire.mol.segment method)": [[24, "sire.mol.Segment.typename", false]], "typename() (sire.mol.segname method)": [[24, "sire.mol.SegName.typename", false]], "typename() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.typename", false]], "typename() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.typename", false]], "typename() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.typename", false]], "typename() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.typename", false]], "typename() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.typename", false]], "typename() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.typename", false]], "u() (in module sire)": [[28, "sire.u", false]], "undefined() (sire.mol.stereochemistry static method)": [[24, "sire.mol.Stereochemistry.undefined", false]], "undefined_bond() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.undefined_bond", false]], "unit() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.unit", false]], "unlock() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.unlock", false]], "unmapped_atoms0() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.unmapped_atoms0", false]], "unmapped_atoms1() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.unmapped_atoms1", false]], "unset() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.unset", false]], "up() (sire.mol.stereochemistry static method)": [[24, "sire.mol.Stereochemistry.up", false]], "update() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.update", false]], "update() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.update", false]], "update() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.update", false]], "update() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.update", false]], "update() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.update", false]], "update() (sire.mol.chain method)": [[24, "sire.mol.Chain.update", false]], "update() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.update", false]], "update() (sire.system.system method)": [[31, "sire.system.System.update", false]], "update_property() (sire.base.properties method)": [[1, "sire.base.Properties.update_property", false]], "use_mixed_api() (in module sire)": [[28, "sire.use_mixed_api", false]], "use_new_api() (in module sire)": [[28, "sire.use_new_api", false]], "use_old_api() (in module sire)": [[28, "sire.use_old_api", false]], "uses_parallel() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.uses_parallel", false]], "v() (in module sire)": [[28, "sire.v", false]], "value() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.value", false]], "value() (sire.mol.stereochemistry method)": [[24, "sire.mol.Stereochemistry.value", false]], "value_as_double() (sire.mol.bondorder method)": [[24, "sire.mol.BondOrder.value_as_double", false]], "vdw_radius() (sire.mol.element method)": [[24, "sire.mol.Element.vdw_radius", false]], "vector (class in sire.maths)": [[22, "sire.maths.Vector", false]], "vector() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.vector", false]], "vector0() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.vector0", false]], "vector0() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.vector0", false]], "vector03() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.vector03", false]], "vector1() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.vector1", false]], "vector1() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.vector1", false]], "vector12() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.vector12", false]], "vector2() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.vector2", false]], "vector2() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.vector2", false]], "vector_on_sphere() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.vector_on_sphere", false]], "velocities() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.velocities", false]], "version() (sire.mol.molecule method)": [[24, "sire.mol.Molecule.version", false]], "view() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.view", false]], "view() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.view", false]], "view() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.view", false]], "view() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.view", false]], "view() (sire.mm.selectormangle method)": [[23, "sire.mm.SelectorMAngle.view", false]], "view() (sire.mm.selectormbond method)": [[23, "sire.mm.SelectorMBond.view", false]], "view() (sire.mm.selectormdihedral method)": [[23, "sire.mm.SelectorMDihedral.view", false]], "view() (sire.mm.selectormimproper method)": [[23, "sire.mm.SelectorMImproper.view", false]], "view() (sire.mol.cursor method)": [[24, "sire.mol.Cursor.view", false]], "view() (sire.mol.cursors method)": [[24, "sire.mol.Cursors.view", false]], "view() (sire.mol.cursorsm method)": [[24, "sire.mol.CursorsM.view", false]], "view() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.view", false]], "view() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.view", false]], "view() (sire.system.system method)": [[31, "sire.system.System.view", false]], "view2d() (sire.system.system method)": [[31, "sire.system.System.view2d", false]], "view_perturbed() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.view_perturbed", false]], "view_reference() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.view_reference", false]], "volume() (sire.vol.cartesian method)": [[34, "sire.vol.Cartesian.volume", false]], "volume() (sire.vol.periodicbox method)": [[34, "sire.vol.PeriodicBox.volume", false]], "volume() (sire.vol.triclinicbox method)": [[34, "sire.vol.TriclinicBox.volume", false]], "walltime() (sire.mol.dynamics method)": [[24, "sire.mol.Dynamics.walltime", false]], "warning() (sire.utils.console static method)": [[33, "sire.utils.Console.warning", false]], "what() (sire.base.pagecache method)": [[1, "sire.base.PageCache.what", false]], "what() (sire.base.pagecache.handle method)": [[1, "sire.base.PageCache.Handle.what", false]], "what() (sire.base.pagecache.page method)": [[1, "sire.base.PageCache.Page.what", false]], "what() (sire.base.propertymap method)": [[1, "sire.base.PropertyMap.what", false]], "what() (sire.cas.expression method)": [[2, "sire.cas.Expression.what", false]], "what() (sire.cas.lambdaschedule method)": [[2, "sire.cas.LambdaSchedule.what", false]], "what() (sire.cas.symbol method)": [[2, "sire.cas.Symbol.what", false]], "what() (sire.convert.openmm.lambdalever method)": [[3, "sire.convert.openmm.LambdaLever.what", false]], "what() (sire.convert.openmm.openmmmetadata method)": [[3, "sire.convert.openmm.OpenMMMetaData.what", false]], "what() (sire.convert.openmm.perturbableopenmmmolecule method)": [[3, "sire.convert.openmm.PerturbableOpenMMMolecule.what", false]], "what() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.what", false]], "what() (sire.io.parser.pdbx method)": [[21, "sire.io.parser.PDBx.what", false]], "what() (sire.io.parser.sdf method)": [[21, "sire.io.parser.SDF.what", false]], "what() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.what", false]], "what() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.what", false]], "what() (sire.maths.energytrajectory method)": [[22, "sire.maths.EnergyTrajectory.what", false]], "what() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.what", false]], "what() (sire.maths.rangenerator method)": [[22, "sire.maths.RanGenerator.what", false]], "what() (sire.maths.torsion method)": [[22, "sire.maths.Torsion.what", false]], "what() (sire.maths.transform method)": [[22, "sire.maths.Transform.what", false]], "what() (sire.maths.triangle method)": [[22, "sire.maths.Triangle.what", false]], "what() (sire.mm.amberangle method)": [[23, "sire.mm.AmberAngle.what", false]], "what() (sire.mm.amberbond method)": [[23, "sire.mm.AmberBond.what", false]], "what() (sire.mm.amberdihedral method)": [[23, "sire.mm.AmberDihedral.what", false]], "what() (sire.mm.amberdihpart method)": [[23, "sire.mm.AmberDihPart.what", false]], "what() (sire.mm.angle method)": [[23, "sire.mm.Angle.what", false]], "what() (sire.mm.bond method)": [[23, "sire.mm.Bond.what", false]], "what() (sire.mm.bondrestraint method)": [[23, "sire.mm.BondRestraint.what", false]], "what() (sire.mm.bondrestraints method)": [[23, "sire.mm.BondRestraints.what", false]], "what() (sire.mm.dihedral method)": [[23, "sire.mm.Dihedral.what", false]], "what() (sire.mm.improper method)": [[23, "sire.mm.Improper.what", false]], "what() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.what", false]], "what() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.what", false]], "what() (sire.mm.selectorangle method)": [[23, "sire.mm.SelectorAngle.what", false]], "what() (sire.mm.selectorbond method)": [[23, "sire.mm.SelectorBond.what", false]], "what() (sire.mm.selectordihedral method)": [[23, "sire.mm.SelectorDihedral.what", false]], "what() (sire.mm.selectorimproper method)": [[23, "sire.mm.SelectorImproper.what", false]], "what() (sire.mol.atomidx method)": [[24, "sire.mol.AtomIdx.what", false]], "what() (sire.mol.atommapping method)": [[24, "sire.mol.AtomMapping.what", false]], "what() (sire.mol.atommatch method)": [[24, "sire.mol.AtomMatch.what", false]], "what() (sire.mol.atommatchm method)": [[24, "sire.mol.AtomMatchM.what", false]], "what() (sire.mol.atomname method)": [[24, "sire.mol.AtomName.what", false]], "what() (sire.mol.atomnum method)": [[24, "sire.mol.AtomNum.what", false]], "what() (sire.mol.chainidx method)": [[24, "sire.mol.ChainIdx.what", false]], "what() (sire.mol.chainname method)": [[24, "sire.mol.ChainName.what", false]], "what() (sire.mol.element method)": [[24, "sire.mol.Element.what", false]], "what() (sire.mol.molidx method)": [[24, "sire.mol.MolIdx.what", false]], "what() (sire.mol.molname method)": [[24, "sire.mol.MolName.what", false]], "what() (sire.mol.molnum method)": [[24, "sire.mol.MolNum.what", false]], "what() (sire.mol.residx method)": [[24, "sire.mol.ResIdx.what", false]], "what() (sire.mol.resname method)": [[24, "sire.mol.ResName.what", false]], "what() (sire.mol.resnum method)": [[24, "sire.mol.ResNum.what", false]], "what() (sire.mol.segidx method)": [[24, "sire.mol.SegIdx.what", false]], "what() (sire.mol.segname method)": [[24, "sire.mol.SegName.what", false]], "what() (sire.mol.selectormol method)": [[24, "sire.mol.SelectorMol.what", false]], "what() (sire.vol.coordgroup method)": [[34, "sire.vol.CoordGroup.what", false]], "wrap() (in module sire.base)": [[1, "sire.base.wrap", false]], "wrap() (sire.mol.trajectoryiterator method)": [[24, "sire.mol.TrajectoryIterator.wrap", false]], "write_to_file() (sire.io.parser.dcd method)": [[21, "sire.io.parser.DCD.write_to_file", false]], "write_to_file() (sire.io.parser.trr method)": [[21, "sire.io.parser.TRR.write_to_file", false]], "write_to_file() (sire.io.parser.xtc method)": [[21, "sire.io.parser.XTC.write_to_file", false]], "x (in module sire.cas)": [[2, "sire.cas.x", false]], "xtc (class in sire.io.parser)": [[21, "sire.io.parser.XTC", false]], "xx() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.xx", false]], "xy() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.xy", false]], "xz() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.xz", false]], "y (in module sire.cas)": [[2, "sire.cas.y", false]], "yx() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.yx", false]], "yy() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.yy", false]], "yz() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.yz", false]], "zero() (sire.maths.matrix static method)": [[22, "sire.maths.Matrix.zero", false]], "zero_ghost_angles() (in module sire.morph)": [[25, "sire.morph.zero_ghost_angles", false]], "zero_ghost_angles() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.zero_ghost_angles", false]], "zero_ghost_bonds() (in module sire.morph)": [[25, "sire.morph.zero_ghost_bonds", false]], "zero_ghost_bonds() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.zero_ghost_bonds", false]], "zero_ghost_torsions() (in module sire.morph)": [[25, "sire.morph.zero_ghost_torsions", false]], "zero_ghost_torsions() (sire.morph.perturbation method)": [[25, "sire.morph.Perturbation.zero_ghost_torsions", false]], "zero_lj() (sire.mm.lj1264parameter method)": [[23, "sire.mm.LJ1264Parameter.zero_lj", false]], "zero_lj() (sire.mm.ljparameter method)": [[23, "sire.mm.LJParameter.zero_lj", false]], "zx() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.zx", false]], "zy() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.zy", false]], "zz() (sire.maths.matrix method)": [[22, "sire.maths.Matrix.zz", false]]}, "objects": {"": [[28, 0, 0, "-", "sire"]], "sire": [[28, 1, 1, "", "atomid"], [1, 0, 0, "-", "base"], [2, 0, 0, "-", "cas"], [28, 1, 1, "", "chainid"], [3, 0, 0, "-", "convert"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "get_max_num_threads"], [20, 0, 0, "-", "io"], [28, 1, 1, "", "load"], [28, 1, 1, "", "load_test_files"], [28, 1, 1, "", "match_atoms"], [22, 0, 0, "-", "maths"], [28, 1, 1, "", "measure"], [28, 1, 1, "", "minimum_distance"], [23, 0, 0, "-", "mm"], [24, 0, 0, "-", "mol"], [28, 1, 1, "", "molid"], [25, 0, 0, "-", "morph"], [26, 0, 0, "-", "restraints"], [28, 1, 1, "", "save"], [28, 1, 1, "", "save_to_string"], [27, 0, 0, "-", "search"], [28, 1, 1, "", "segid"], [28, 1, 1, "", "set_default_num_threads"], [28, 1, 1, "", "set_max_num_threads"], [28, 1, 1, "", "smarts"], [28, 1, 1, "", "smiles"], [28, 1, 1, "", "sqrt"], [30, 0, 0, "-", "stream"], [28, 1, 1, "", "supported_formats"], [31, 0, 0, "-", "system"], [28, 4, 1, "", "tutorial_url"], [28, 1, 1, "", "u"], [32, 0, 0, "-", "units"], [28, 1, 1, "", "use_mixed_api"], [28, 1, 1, "", "use_new_api"], [28, 1, 1, "", "use_old_api"], [33, 0, 0, "-", "utils"], [28, 1, 1, "", "v"], [34, 0, 0, "-", "vol"]], "sire.base": [[1, 2, 1, "", "PageCache"], [1, 2, 1, "", "Properties"], [1, 2, 1, "", "PropertyMap"], [1, 1, 1, "", "create_map"], [1, 1, 1, "", "wrap"]], "sire.base.PageCache": [[1, 2, 1, "", "Handle"], [1, 2, 1, "", "Page"], [1, 3, 1, "", "assert_valid"], [1, 3, 1, "", "assign"], [1, 3, 1, "", "cache_dir"], [1, 3, 1, "", "clone"], [1, 3, 1, "", "get_statistics"], [1, 3, 1, "", "is_null"], [1, 3, 1, "", "is_valid"], [1, 3, 1, "", "max_page_size"], [1, 3, 1, "", "max_resident_pages"], [1, 3, 1, "", "num_bytes"], [1, 3, 1, "", "num_pages"], [1, 3, 1, "", "page_size"], [1, 3, 1, "", "root_directory"], [1, 3, 1, "", "set_max_page_size"], [1, 3, 1, "", "set_max_resident_pages"], [1, 3, 1, "", "set_root_directory"], [1, 3, 1, "", "size"], [1, 3, 1, "", "store"], [1, 3, 1, "", "to_string"], [1, 3, 1, "", "typename"], [1, 3, 1, "", "what"]], "sire.base.PageCache.Handle": [[1, 3, 1, "", "assertValid"], [1, 3, 1, "", "assign"], [1, 3, 1, "", "clear"], [1, 3, 1, "", "clone"], [1, 3, 1, "", "fetch"], [1, 3, 1, "", "isNull"], [1, 3, 1, "", "isValid"], [1, 3, 1, "", "nBytes"], [1, 3, 1, "", "page"], [1, 3, 1, "", "parent"], [1, 3, 1, "", "reset"], [1, 3, 1, "", "size"], [1, 3, 1, "", "toString"], [1, 3, 1, "", "typeName"], [1, 3, 1, "", "what"]], "sire.base.PageCache.Page": [[1, 3, 1, "", "assertValid"], [1, 3, 1, "", "assign"], [1, 3, 1, "", "clone"], [1, 3, 1, "", "isCached"], [1, 3, 1, "", "isNull"], [1, 3, 1, "", "isResident"], [1, 3, 1, "", "isValid"], [1, 3, 1, "", "maxBytes"], [1, 3, 1, "", "nBytes"], [1, 3, 1, "", "parent"], [1, 3, 1, "", "size"], [1, 3, 1, "", "toString"], [1, 3, 1, "", "typeName"], [1, 3, 1, "", "what"]], "sire.base.Properties": [[1, 3, 1, "", "add_link"], [1, 3, 1, "", "all_metadata"], [1, 3, 1, "", "as_array"], [1, 3, 1, "", "as_boolean"], [1, 3, 1, "", "as_double"], [1, 3, 1, "", "as_integer"], [1, 3, 1, "", "as_string"], [1, 3, 1, "", "as_unit"], [1, 3, 1, "", "assert_contains_metadata"], [1, 3, 1, "", "assert_contains_property"], [1, 3, 1, "", "assign"], [1, 3, 1, "", "clear"], [1, 3, 1, "", "clone"], [1, 3, 1, "", "count"], [1, 3, 1, "", "get_links"], [1, 3, 1, "", "has_links"], [1, 3, 1, "", "has_metadata"], [1, 3, 1, "", "has_property"], [1, 3, 1, "", "is_array"], [1, 3, 1, "", "is_boolean"], [1, 3, 1, "", "is_double"], [1, 3, 1, "", "is_empty"], [1, 3, 1, "", "is_integer"], [1, 3, 1, "", "is_string"], [1, 3, 1, "", "is_unit"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "metadata"], [1, 3, 1, "", "metadata_keys"], [1, 3, 1, "", "metadata_type"], [1, 3, 1, "", "num_properties"], [1, 3, 1, "", "property"], [1, 3, 1, "", "property_keys"], [1, 3, 1, "", "property_type"], [1, 3, 1, "", "remove_all_links"], [1, 3, 1, "", "remove_all_metadata"], [1, 3, 1, "", "remove_link"], [1, 3, 1, "", "remove_metadata"], [1, 3, 1, "", "remove_property"], [1, 3, 1, "", "set_metadata"], [1, 3, 1, "", "size"], [1, 3, 1, "", "to_string"], [1, 3, 1, "", "typename"], [1, 3, 1, "", "update_property"]], "sire.base.PropertyMap": [[1, 3, 1, "", "add_prefix"], [1, 3, 1, "", "add_suffix"], [1, 3, 1, "", "assign"], [1, 3, 1, "", "clone"], [1, 3, 1, "", "get_string"], [1, 3, 1, "", "is_default"], [1, 3, 1, "", "merge"], [1, 3, 1, "", "specified"], [1, 3, 1, "", "to_dict"], [1, 3, 1, "", "to_string"], [1, 3, 1, "", "typename"], [1, 3, 1, "", "unset"], [1, 3, 1, "", "what"]], "sire.cas": [[2, 2, 1, "", "Expression"], [2, 2, 1, "", "LambdaSchedule"], [2, 2, 1, "", "Symbol"], [2, 4, 1, "", "lam"], [2, 4, 1, "", "x"], [2, 4, 1, "", "y"]], "sire.cas.Expression": [[2, 3, 1, "", "add"], [2, 3, 1, "", "assign"], [2, 3, 1, "", "base"], [2, 3, 1, "", "children"], [2, 3, 1, "", "clone"], [2, 3, 1, "", "conjugate"], [2, 3, 1, "", "cubed"], [2, 3, 1, "", "diff"], [2, 3, 1, "", "differentiate"], [2, 3, 1, "", "divide"], [2, 3, 1, "", "evaluate"], [2, 3, 1, "", "expand"], [2, 3, 1, "", "factor"], [2, 3, 1, "", "functions"], [2, 3, 1, "", "hash"], [2, 3, 1, "", "integ"], [2, 3, 1, "", "integrate"], [2, 3, 1, "", "invert"], [2, 3, 1, "", "is_complex"], [2, 3, 1, "", "is_compound"], [2, 3, 1, "", "is_constant"], [2, 3, 1, "", "is_function"], [2, 3, 1, "", "is_zero"], [2, 3, 1, "", "multiply"], [2, 3, 1, "", "negate"], [2, 3, 1, "", "pow"], [2, 3, 1, "", "root"], [2, 3, 1, "", "series"], [2, 3, 1, "", "simplify"], [2, 3, 1, "", "squared"], [2, 3, 1, "", "substitute"], [2, 3, 1, "", "subtract"], [2, 3, 1, "", "symbols"], [2, 3, 1, "", "to_open_m_m_string"], [2, 3, 1, "", "to_string"], [2, 3, 1, "", "typename"], [2, 3, 1, "", "what"]], "sire.cas.LambdaSchedule": [[2, 3, 1, "", "add_annihilate_stage"], [2, 3, 1, "", "add_charge_scale_stages"], [2, 3, 1, "", "add_decouple_stage"], [2, 3, 1, "", "add_force"], [2, 3, 1, "", "add_forces"], [2, 3, 1, "", "add_lever"], [2, 3, 1, "", "add_levers"], [2, 3, 1, "", "add_morph_stage"], [2, 3, 1, "", "add_stage"], [2, 3, 1, "", "append_stage"], [2, 3, 1, "", "assign"], [2, 3, 1, "", "charge_scaled_annihilate"], [2, 3, 1, "", "charge_scaled_decouple"], [2, 3, 1, "", "charge_scaled_morph"], [2, 3, 1, "", "clamp"], [2, 3, 1, "", "clear"], [2, 3, 1, "", "clone"], [2, 3, 1, "", "final"], [2, 3, 1, "", "get_constant"], [2, 3, 1, "", "get_constant_symbol"], [2, 3, 1, "", "get_equation"], [2, 3, 1, "", "get_forces"], [2, 3, 1, "", "get_lambda_in_stage"], [2, 3, 1, "", "get_lever_stages"], [2, 3, 1, "", "get_lever_values"], [2, 3, 1, "", "get_levers"], [2, 3, 1, "", "get_molecule_schedule"], [2, 3, 1, "", "get_stage"], [2, 3, 1, "", "get_stages"], [2, 3, 1, "", "has_force_specific_equation"], [2, 3, 1, "", "has_molecule_schedule"], [2, 3, 1, "", "initial"], [2, 3, 1, "", "insert_stage"], [2, 3, 1, "", "is_null"], [2, 3, 1, "", "lam"], [2, 3, 1, "", "morph"], [2, 3, 1, "", "num_forces"], [2, 3, 1, "", "num_levers"], [2, 3, 1, "", "num_stages"], [2, 3, 1, "", "prepend_stage"], [2, 3, 1, "", "remove_equation"], [2, 3, 1, "", "remove_force"], [2, 3, 1, "", "remove_forces"], [2, 3, 1, "", "remove_lever"], [2, 3, 1, "", "remove_levers"], [2, 3, 1, "", "remove_molecule_schedule"], [2, 3, 1, "", "remove_stage"], [2, 3, 1, "", "set_constant"], [2, 3, 1, "", "set_default_equation"], [2, 3, 1, "", "set_default_stage_equation"], [2, 3, 1, "", "set_equation"], [2, 3, 1, "", "set_molecule_schedule"], [2, 3, 1, "", "standard_annihilate"], [2, 3, 1, "", "standard_decouple"], [2, 3, 1, "", "standard_morph"], [2, 3, 1, "", "take_molecule_schedule"], [2, 3, 1, "", "to_string"], [2, 3, 1, "", "typename"], [2, 3, 1, "", "what"]], "sire.cas.Symbol": [[2, 3, 1, "", "assign"], [2, 3, 1, "", "children"], [2, 3, 1, "", "clone"], [2, 3, 1, "", "differentiate"], [2, 3, 1, "", "evaluate"], [2, 3, 1, "", "expand"], [2, 3, 1, "", "functions"], [2, 3, 1, "", "hash"], [2, 3, 1, "", "id"], [2, 3, 1, "", "integrate"], [2, 3, 1, "", "is_constant"], [2, 3, 1, "", "is_function"], [2, 3, 1, "", "is_null"], [2, 3, 1, "", "substitute"], [2, 3, 1, "", "symbols"], [2, 3, 1, "", "to_string"], [2, 3, 1, "", "typename"], [2, 3, 1, "", "what"]], "sire.convert": [[3, 1, 1, "", "biosimspace_to_sire"], [3, 1, 1, "", "gemmi_to_sire"], [3, 0, 0, "-", "openmm"], [3, 1, 1, "", "openmm_to_sire"], [3, 1, 1, "", "rdkit_to_sire"], [3, 1, 1, "", "sire_to_biosimspace"], [3, 1, 1, "", "sire_to_gemmi"], [3, 1, 1, "", "sire_to_openmm"], [3, 1, 1, "", "sire_to_rdkit"], [3, 1, 1, "", "supported_formats"], [3, 1, 1, "", "to"], [3, 1, 1, "", "to_biosimspace"], [3, 1, 1, "", "to_openmm"], [3, 1, 1, "", "to_rdkit"], [3, 1, 1, "", "to_sire"]], "sire.convert.openmm": [[3, 2, 1, "", "LambdaLever"], [3, 2, 1, "", "OpenMMMetaData"], [3, 2, 1, "", "PerturbableOpenMMMolecule"], [3, 2, 1, "", "SOMMContext"]], "sire.convert.openmm.LambdaLever": [[3, 3, 1, "", "add_lever"], [3, 3, 1, "", "add_perturbable_molecule"], [3, 3, 1, "", "add_restraint_index"], [3, 3, 1, "", "assign"], [3, 3, 1, "", "clone"], [3, 3, 1, "", "get_force_index"], [3, 3, 1, "", "get_force_type"], [3, 3, 1, "", "get_lever_values"], [3, 3, 1, "", "get_perturbable_molecule_maps"], [3, 3, 1, "", "get_restraints"], [3, 3, 1, "", "get_schedule"], [3, 3, 1, "", "has_lever"], [3, 3, 1, "", "set_constraint_indicies"], [3, 3, 1, "", "set_exception_indicies"], [3, 3, 1, "", "set_force_index"], [3, 3, 1, "", "set_lambda"], [3, 3, 1, "", "set_schedule"], [3, 3, 1, "", "typename"], [3, 3, 1, "", "what"]], "sire.convert.openmm.OpenMMMetaData": [[3, 3, 1, "", "box_vectors"], [3, 3, 1, "", "clone"], [3, 3, 1, "", "coordinates"], [3, 3, 1, "", "has_box_vectors"], [3, 3, 1, "", "has_coordinates"], [3, 3, 1, "", "has_velocities"], [3, 3, 1, "", "index"], [3, 3, 1, "", "lambda_lever"], [3, 3, 1, "", "to_string"], [3, 3, 1, "", "typename"], [3, 3, 1, "", "velocities"], [3, 3, 1, "", "what"]], "sire.convert.openmm.PerturbableOpenMMMolecule": [[3, 3, 1, "", "angles"], [3, 3, 1, "", "assign"], [3, 3, 1, "", "atoms"], [3, 3, 1, "", "bonds"], [3, 3, 1, "", "changed_angles"], [3, 3, 1, "", "changed_atoms"], [3, 3, 1, "", "changed_bonds"], [3, 3, 1, "", "changed_constraints"], [3, 3, 1, "", "changed_exceptions"], [3, 3, 1, "", "changed_torsions"], [3, 3, 1, "", "clone"], [3, 3, 1, "", "get_alphas0"], [3, 3, 1, "", "get_alphas1"], [3, 3, 1, "", "get_angle_ks0"], [3, 3, 1, "", "get_angle_ks1"], [3, 3, 1, "", "get_angle_sizes0"], [3, 3, 1, "", "get_angle_sizes1"], [3, 3, 1, "", "get_bond_ks0"], [3, 3, 1, "", "get_bond_ks1"], [3, 3, 1, "", "get_bond_lengths0"], [3, 3, 1, "", "get_bond_lengths1"], [3, 3, 1, "", "get_charge_scales0"], [3, 3, 1, "", "get_charge_scales1"], [3, 3, 1, "", "get_charges0"], [3, 3, 1, "", "get_charges1"], [3, 3, 1, "", "get_constraint_indicies"], [3, 3, 1, "", "get_epsilons0"], [3, 3, 1, "", "get_epsilons1"], [3, 3, 1, "", "get_exception_atoms"], [3, 3, 1, "", "get_exception_indicies"], [3, 3, 1, "", "get_from_ghost_idxs"], [3, 3, 1, "", "get_kappas0"], [3, 3, 1, "", "get_kappas1"], [3, 3, 1, "", "get_lever_values"], [3, 3, 1, "", "get_lj_scales0"], [3, 3, 1, "", "get_lj_scales1"], [3, 3, 1, "", "get_perturbable_constraints"], [3, 3, 1, "", "get_perturbable_constraints_with_atoms"], [3, 3, 1, "", "get_sigmas0"], [3, 3, 1, "", "get_sigmas1"], [3, 3, 1, "", "get_to_ghost_idxs"], [3, 3, 1, "", "get_torsion_ks0"], [3, 3, 1, "", "get_torsion_ks1"], [3, 3, 1, "", "get_torsion_periodicities0"], [3, 3, 1, "", "get_torsion_periodicities1"], [3, 3, 1, "", "get_torsion_phases0"], [3, 3, 1, "", "get_torsion_phases1"], [3, 3, 1, "", "is_ghost_atom"], [3, 3, 1, "", "is_null"], [3, 3, 1, "", "set_constraint_indicies"], [3, 3, 1, "", "set_exception_indicies"], [3, 3, 1, "", "to_string"], [3, 3, 1, "", "torsions"], [3, 3, 1, "", "typename"], [3, 3, 1, "", "what"]], "sire.convert.openmm.SOMMContext": [[3, 3, 1, "", "get_atom_index"], [3, 3, 1, "", "get_constraint"], [3, 3, 1, "", "get_constraints"], [3, 3, 1, "", "get_energy"], [3, 3, 1, "", "get_integrator"], [3, 3, 1, "", "get_lambda"], [3, 3, 1, "", "get_lambda_lever"], [3, 3, 1, "", "get_lambda_schedule"], [3, 3, 1, "", "get_perturbable_constraint"], [3, 3, 1, "", "get_platform"], [3, 3, 1, "", "get_platform_properties"], [3, 3, 1, "", "get_platform_property"], [3, 3, 1, "", "get_potential_energy"], [3, 3, 1, "", "set_lambda"], [3, 3, 1, "", "set_lambda_schedule"], [3, 3, 1, "", "set_platform_property"], [3, 3, 1, "", "set_pressure"], [3, 3, 1, "", "set_temperature"], [3, 3, 1, "", "to_xml"]], "sire.io": [[20, 1, 1, "", "get_coords_array"], [21, 0, 0, "-", "parser"], [20, 1, 1, "", "resolve_path"]], "sire.io.parser": [[21, 2, 1, "", "DCD"], [21, 5, 1, "", "G87"], [21, 5, 1, "", "GTOP"], [21, 5, 1, "", "MOL2"], [21, 5, 1, "", "PDB"], [21, 2, 1, "", "PDBx"], [21, 5, 1, "", "PRM"], [21, 5, 1, "", "PSF"], [21, 5, 1, "", "RST"], [21, 5, 1, "", "RST7"], [21, 2, 1, "", "SDF"], [21, 5, 1, "", "TRAJ"], [21, 2, 1, "", "TRR"], [21, 2, 1, "", "XTC"]], "sire.io.parser.DCD": [[21, 3, 1, "", "assign"], [21, 3, 1, "", "clone"], [21, 3, 1, "", "construct"], [21, 3, 1, "", "count"], [21, 3, 1, "", "disable_parallel"], [21, 3, 1, "", "enable_parallel"], [21, 3, 1, "", "error_report"], [21, 3, 1, "", "format_description"], [21, 3, 1, "", "format_name"], [21, 3, 1, "", "format_suffix"], [21, 3, 1, "", "get_frame"], [21, 3, 1, "", "has_warnings"], [21, 3, 1, "", "is_binary_file"], [21, 3, 1, "", "is_broken"], [21, 3, 1, "", "is_empty"], [21, 3, 1, "", "is_frame"], [21, 3, 1, "", "is_supplementary"], [21, 3, 1, "", "is_text_file"], [21, 3, 1, "", "is_topology"], [21, 3, 1, "", "num_atoms"], [21, 3, 1, "", "num_frames"], [21, 3, 1, "", "parse"], [21, 3, 1, "", "set_use_parallel"], [21, 3, 1, "", "size"], [21, 3, 1, "", "supported_formats"], [21, 3, 1, "", "to_string"], [21, 3, 1, "", "to_system"], [21, 3, 1, "", "typename"], [21, 3, 1, "", "uses_parallel"], [21, 3, 1, "", "what"], [21, 3, 1, "", "write_to_file"]], "sire.io.parser.PDBx": [[21, 3, 1, "", "assign"], [21, 3, 1, "", "clone"], [21, 3, 1, "", "construct"], [21, 3, 1, "", "format_description"], [21, 3, 1, "", "format_name"], [21, 3, 1, "", "format_suffix"], [21, 3, 1, "", "get_frame"], [21, 3, 1, "", "is_frame"], [21, 3, 1, "", "is_topology"], [21, 3, 1, "", "num_atoms"], [21, 3, 1, "", "num_frames"], [21, 3, 1, "", "to_lines"], [21, 3, 1, "", "to_string"], [21, 3, 1, "", "typename"], [21, 3, 1, "", "what"]], "sire.io.parser.SDF": [[21, 3, 1, "", "assign"], [21, 3, 1, "", "clone"], [21, 3, 1, "", "construct"], [21, 3, 1, "", "format_description"], [21, 3, 1, "", "format_name"], [21, 3, 1, "", "format_suffix"], [21, 3, 1, "", "get_frame"], [21, 3, 1, "", "is_frame"], [21, 3, 1, "", "is_topology"], [21, 3, 1, "", "num_atoms"], [21, 3, 1, "", "num_frames"], [21, 3, 1, "", "num_molecules"], [21, 3, 1, "", "parse_warnings"], [21, 3, 1, "", "to_string"], [21, 3, 1, "", "typename"], [21, 3, 1, "", "what"]], "sire.io.parser.TRR": [[21, 3, 1, "", "assign"], [21, 3, 1, "", "clone"], [21, 3, 1, "", "construct"], [21, 3, 1, "", "count"], [21, 3, 1, "", "format_description"], [21, 3, 1, "", "format_name"], [21, 3, 1, "", "format_suffix"], [21, 3, 1, "", "get_frame"], [21, 3, 1, "", "is_frame"], [21, 3, 1, "", "is_text_file"], [21, 3, 1, "", "num_atoms"], [21, 3, 1, "", "num_frames"], [21, 3, 1, "", "parse"], [21, 3, 1, "", "size"], [21, 3, 1, "", "to_string"], [21, 3, 1, "", "typename"], [21, 3, 1, "", "what"], [21, 3, 1, "", "write_to_file"]], "sire.io.parser.XTC": [[21, 3, 1, "", "assign"], [21, 3, 1, "", "clone"], [21, 3, 1, "", "construct"], [21, 3, 1, "", "count"], [21, 3, 1, "", "format_description"], [21, 3, 1, "", "format_name"], [21, 3, 1, "", "format_suffix"], [21, 3, 1, "", "get_frame"], [21, 3, 1, "", "is_frame"], [21, 3, 1, "", "is_text_file"], [21, 3, 1, "", "num_atoms"], [21, 3, 1, "", "num_frames"], [21, 3, 1, "", "parse"], [21, 3, 1, "", "size"], [21, 3, 1, "", "to_string"], [21, 3, 1, "", "typename"], [21, 3, 1, "", "what"], [21, 3, 1, "", "write_to_file"]], "sire.maths": [[22, 2, 1, "", "EnergyTrajectory"], [22, 2, 1, "", "Matrix"], [22, 2, 1, "", "RanGenerator"], [22, 2, 1, "", "Sphere"], [22, 2, 1, "", "Torsion"], [22, 2, 1, "", "Transform"], [22, 2, 1, "", "Triangle"], [22, 2, 1, "", "Vector"], [22, 1, 1, "", "align"], [22, 1, 1, "", "create_quaternion"], [22, 1, 1, "", "get_alignment"], [22, 1, 1, "", "kabasch"], [22, 1, 1, "", "kabasch_fit"], [22, 4, 1, "", "pi"], [22, 1, 1, "", "rotate"]], "sire.maths.EnergyTrajectory": [[22, 3, 1, "", "assign"], [22, 3, 1, "", "clear_properties"], [22, 3, 1, "", "clone"], [22, 3, 1, "", "count"], [22, 3, 1, "", "energies"], [22, 3, 1, "", "get"], [22, 3, 1, "", "get_labels"], [22, 3, 1, "", "get_labels_as_numbers"], [22, 3, 1, "", "has_property"], [22, 3, 1, "", "is_empty"], [22, 3, 1, "", "is_null"], [22, 3, 1, "", "keys"], [22, 3, 1, "", "label_keys"], [22, 3, 1, "", "labels"], [22, 3, 1, "", "labels_as_numbers"], [22, 3, 1, "", "properties"], [22, 3, 1, "", "property"], [22, 3, 1, "", "property_keys"], [22, 3, 1, "", "remove_property"], [22, 3, 1, "", "set"], [22, 3, 1, "", "set_property"], [22, 3, 1, "", "size"], [22, 3, 1, "", "times"], [22, 3, 1, "", "to_alchemlyb"], [22, 3, 1, "", "to_pandas"], [22, 3, 1, "", "to_string"], [22, 3, 1, "", "typename"], [22, 3, 1, "", "what"]], "sire.maths.Matrix": [[22, 3, 1, "", "assign"], [22, 3, 1, "", "at"], [22, 3, 1, "", "checked_offset"], [22, 3, 1, "", "clone"], [22, 3, 1, "", "column0"], [22, 3, 1, "", "column1"], [22, 3, 1, "", "column2"], [22, 3, 1, "", "covariance"], [22, 3, 1, "", "determinant"], [22, 3, 1, "", "diagonal"], [22, 3, 1, "", "diagonalise"], [22, 3, 1, "", "enforce_symmetric"], [22, 3, 1, "", "get_principal_axes"], [22, 3, 1, "", "identity"], [22, 3, 1, "", "inverse"], [22, 3, 1, "", "is_diagonal"], [22, 3, 1, "", "is_identity"], [22, 3, 1, "", "is_symmetric"], [22, 3, 1, "", "is_zero"], [22, 3, 1, "", "offset"], [22, 3, 1, "", "row0"], [22, 3, 1, "", "row1"], [22, 3, 1, "", "row2"], [22, 3, 1, "", "set_to_identity"], [22, 3, 1, "", "single_value_decomposition"], [22, 3, 1, "", "svd"], [22, 3, 1, "", "to_string"], [22, 3, 1, "", "trace"], [22, 3, 1, "", "transpose"], [22, 3, 1, "", "typename"], [22, 3, 1, "", "what"], [22, 3, 1, "", "xx"], [22, 3, 1, "", "xy"], [22, 3, 1, "", "xz"], [22, 3, 1, "", "yx"], [22, 3, 1, "", "yy"], [22, 3, 1, "", "yz"], [22, 3, 1, "", "zero"], [22, 3, 1, "", "zx"], [22, 3, 1, "", "zy"], [22, 3, 1, "", "zz"]], "sire.maths.RanGenerator": [[22, 3, 1, "", "assign"], [22, 3, 1, "", "clone"], [22, 3, 1, "", "detach"], [22, 3, 1, "", "get_state"], [22, 3, 1, "", "global"], [22, 3, 1, "", "lock"], [22, 3, 1, "", "locked_rand"], [22, 3, 1, "", "locked_rand_norm"], [22, 3, 1, "", "locked_vector_on_sphere"], [22, 3, 1, "", "nrand"], [22, 3, 1, "", "nrand_norm"], [22, 3, 1, "", "nvector_on_sphere"], [22, 3, 1, "", "rand"], [22, 3, 1, "", "rand53"], [22, 3, 1, "", "rand_bool"], [22, 3, 1, "", "rand_int"], [22, 3, 1, "", "rand_int64"], [22, 3, 1, "", "rand_norm"], [22, 3, 1, "", "seed"], [22, 3, 1, "", "seed_global"], [22, 3, 1, "", "set_state"], [22, 3, 1, "", "typename"], [22, 3, 1, "", "unlock"], [22, 3, 1, "", "vector_on_sphere"], [22, 3, 1, "", "what"]], "sire.maths.Torsion": [[22, 3, 1, "", "angle"], [22, 3, 1, "", "at"], [22, 3, 1, "", "clone"], [22, 3, 1, "", "count"], [22, 3, 1, "", "improper_angle"], [22, 3, 1, "", "line03"], [22, 3, 1, "", "line12"], [22, 3, 1, "", "point"], [22, 3, 1, "", "to_string"], [22, 3, 1, "", "triangle1"], [22, 3, 1, "", "triangle2"], [22, 3, 1, "", "typename"], [22, 3, 1, "", "vector03"], [22, 3, 1, "", "vector12"], [22, 3, 1, "", "what"]], "sire.maths.Transform": [[22, 3, 1, "", "apply"], [22, 3, 1, "", "assign"], [22, 3, 1, "", "clone"], [22, 3, 1, "", "inverse"], [22, 3, 1, "", "is_null"], [22, 3, 1, "", "is_zero"], [22, 3, 1, "", "reverse"], [22, 3, 1, "", "rotation_center"], [22, 3, 1, "", "rotation_matrix"], [22, 3, 1, "", "rotation_quaternion"], [22, 3, 1, "", "to_string"], [22, 3, 1, "", "translation_delta"], [22, 3, 1, "", "typename"], [22, 3, 1, "", "what"]], "sire.maths.Triangle": [[22, 3, 1, "", "angle"], [22, 3, 1, "", "angle0"], [22, 3, 1, "", "angle1"], [22, 3, 1, "", "angle2"], [22, 3, 1, "", "at"], [22, 3, 1, "", "clone"], [22, 3, 1, "", "count"], [22, 3, 1, "", "line0"], [22, 3, 1, "", "line1"], [22, 3, 1, "", "line2"], [22, 3, 1, "", "point"], [22, 3, 1, "", "to_string"], [22, 3, 1, "", "typename"], [22, 3, 1, "", "vector"], [22, 3, 1, "", "vector0"], [22, 3, 1, "", "vector1"], [22, 3, 1, "", "vector2"], [22, 3, 1, "", "what"]], "sire.mm": [[23, 2, 1, "", "AmberAngle"], [23, 2, 1, "", "AmberBond"], [23, 2, 1, "", "AmberDihPart"], [23, 2, 1, "", "AmberDihedral"], [23, 2, 1, "", "Angle"], [23, 2, 1, "", "Bond"], [23, 2, 1, "", "BondRestraint"], [23, 2, 1, "", "BondRestraints"], [23, 2, 1, "", "Dihedral"], [23, 2, 1, "", "Improper"], [23, 2, 1, "", "LJ1264Parameter"], [23, 2, 1, "", "LJParameter"], [23, 2, 1, "", "SelectorAngle"], [23, 2, 1, "", "SelectorBond"], [23, 2, 1, "", "SelectorDihedral"], [23, 2, 1, "", "SelectorImproper"], [23, 2, 1, "", "SelectorMAngle"], [23, 2, 1, "", "SelectorMBond"], [23, 2, 1, "", "SelectorMDihedral"], [23, 2, 1, "", "SelectorMImproper"]], "sire.mm.AmberAngle": [[23, 3, 1, "", "assign"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "hash"], [23, 3, 1, "", "k"], [23, 3, 1, "", "theta0"], [23, 3, 1, "", "to_expression"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.AmberBond": [[23, 3, 1, "", "assign"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "hash"], [23, 3, 1, "", "k"], [23, 3, 1, "", "r0"], [23, 3, 1, "", "to_expression"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.AmberDihPart": [[23, 3, 1, "", "assign"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "hash"], [23, 3, 1, "", "k"], [23, 3, 1, "", "periodicity"], [23, 3, 1, "", "phase"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.AmberDihedral": [[23, 3, 1, "", "assign"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "hash"], [23, 3, 1, "", "terms"], [23, 3, 1, "", "to_expression"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.Angle": [[23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atom0"], [23, 3, 1, "", "atom1"], [23, 3, 1, "", "atom2"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "id"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measure"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potential"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "selector"], [23, 3, 1, "", "size"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.Bond": [[23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atom0"], [23, 3, 1, "", "atom1"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "id"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "length"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measure"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potential"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "selector"], [23, 3, 1, "", "size"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.BondRestraint": [[23, 3, 1, "", "assign"], [23, 3, 1, "", "atom0"], [23, 3, 1, "", "atom1"], [23, 3, 1, "", "atoms0"], [23, 3, 1, "", "atoms1"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "is_atom_restraint"], [23, 3, 1, "", "is_centroid_restraint"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "k"], [23, 3, 1, "", "r0"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.BondRestraints": [[23, 3, 1, "", "add"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "at"], [23, 3, 1, "", "atom_restraints"], [23, 3, 1, "", "centroid_restraints"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "count"], [23, 3, 1, "", "has_atom_restraints"], [23, 3, 1, "", "has_centroid_restraints"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_restraints"], [23, 3, 1, "", "num_atom_restraints"], [23, 3, 1, "", "num_centroid_restraints"], [23, 3, 1, "", "num_restraints"], [23, 3, 1, "", "restraints"], [23, 3, 1, "", "set_name"], [23, 3, 1, "", "size"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.Dihedral": [[23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atom0"], [23, 3, 1, "", "atom1"], [23, 3, 1, "", "atom2"], [23, 3, 1, "", "atom3"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "id"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measure"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potential"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "selector"], [23, 3, 1, "", "size"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.Improper": [[23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atom0"], [23, 3, 1, "", "atom1"], [23, 3, 1, "", "atom2"], [23, 3, 1, "", "atom3"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "id"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measure"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "phi"], [23, 3, 1, "", "potential"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "selector"], [23, 3, 1, "", "size"], [23, 3, 1, "", "theta"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"]], "sire.mm.LJ1264Parameter": [[23, 3, 1, "", "a"], [23, 3, 1, "", "assert_is_lj_parameter"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "b"], [23, 3, 1, "", "b_unit"], [23, 3, 1, "", "c"], [23, 3, 1, "", "c_unit"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "dummy"], [23, 3, 1, "", "has_c"], [23, 3, 1, "", "is_dummy"], [23, 3, 1, "", "is_lj_parameter"], [23, 3, 1, "", "to_lj_pair"], [23, 3, 1, "", "to_lj_parameter"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "unit"], [23, 3, 1, "", "what"], [23, 3, 1, "", "zero_lj"]], "sire.mm.LJParameter": [[23, 3, 1, "", "a"], [23, 3, 1, "", "b"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "combine"], [23, 3, 1, "", "combine_arithmetic"], [23, 3, 1, "", "combine_geometric"], [23, 5, 1, "", "combining_rules"], [23, 3, 1, "", "dummy"], [23, 3, 1, "", "epsilon"], [23, 3, 1, "", "from_and_b"], [23, 3, 1, "", "from_r_min_and_epsilon"], [23, 3, 1, "", "from_sigma_and_epsilon"], [23, 3, 1, "", "is_dummy"], [23, 3, 1, "", "rmin"], [23, 3, 1, "", "sigma"], [23, 3, 1, "", "sqrt_epsilon"], [23, 3, 1, "", "sqrt_sigma"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "what"], [23, 3, 1, "", "zero_lj"]], "sire.mm.SelectorAngle": [[23, 3, 1, "", "add"], [23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "size"], [23, 3, 1, "", "sizes"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "view"], [23, 3, 1, "", "what"]], "sire.mm.SelectorBond": [[23, 3, 1, "", "add"], [23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "lengths"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "size"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "view"], [23, 3, 1, "", "what"]], "sire.mm.SelectorDihedral": [[23, 3, 1, "", "add"], [23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "size"], [23, 3, 1, "", "sizes"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "view"], [23, 3, 1, "", "what"]], "sire.mm.SelectorImproper": [[23, 3, 1, "", "add"], [23, 3, 1, "", "assert_contains"], [23, 3, 1, "", "assert_has_metadata"], [23, 3, 1, "", "assert_has_property"], [23, 3, 1, "", "assert_same_molecule"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "atom"], [23, 3, 1, "", "atoms"], [23, 3, 1, "", "chains"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "const_data"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cursor"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "get_link"], [23, 3, 1, "", "get_links"], [23, 3, 1, "", "has_links"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_link"], [23, 3, 1, "", "is_null"], [23, 3, 1, "", "is_same_molecule"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "metadata_type"], [23, 3, 1, "", "molecules"], [23, 3, 1, "", "move"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "num_views"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "property_type"], [23, 3, 1, "", "residues"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "segments"], [23, 3, 1, "", "select_all"], [23, 3, 1, "", "select_all_atoms"], [23, 3, 1, "", "select_all_chains"], [23, 3, 1, "", "select_all_cutgroups"], [23, 3, 1, "", "select_all_residues"], [23, 3, 1, "", "select_all_segments"], [23, 3, 1, "", "selected_all"], [23, 3, 1, "", "selection"], [23, 3, 1, "", "size"], [23, 3, 1, "", "sizes"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_selector"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "view"], [23, 3, 1, "", "what"]], "sire.mm.SelectorMAngle": [[23, 3, 1, "", "add"], [23, 3, 1, "", "apply"], [23, 3, 1, "", "apply_reduce"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "chain"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "dynamics"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "extract"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "minimisation"], [23, 3, 1, "", "molecule"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_molecules"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "residue"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "search"], [23, 3, 1, "", "segment"], [23, 3, 1, "", "size"], [23, 3, 1, "", "sizes"], [23, 3, 1, "", "smarts"], [23, 3, 1, "", "smiles"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecule_group"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_select_result"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "trajectory"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "update"], [23, 3, 1, "", "view"]], "sire.mm.SelectorMBond": [[23, 3, 1, "", "add"], [23, 3, 1, "", "apply"], [23, 3, 1, "", "apply_reduce"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "chain"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "dynamics"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "extract"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "lengths"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "minimisation"], [23, 3, 1, "", "molecule"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_molecules"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "residue"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "search"], [23, 3, 1, "", "segment"], [23, 3, 1, "", "size"], [23, 3, 1, "", "smarts"], [23, 3, 1, "", "smiles"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecule_group"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_select_result"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "trajectory"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "update"], [23, 3, 1, "", "view"]], "sire.mm.SelectorMDihedral": [[23, 3, 1, "", "add"], [23, 3, 1, "", "apply"], [23, 3, 1, "", "apply_reduce"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "chain"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "dynamics"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "extract"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "minimisation"], [23, 3, 1, "", "molecule"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_molecules"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "residue"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "search"], [23, 3, 1, "", "segment"], [23, 3, 1, "", "size"], [23, 3, 1, "", "sizes"], [23, 3, 1, "", "smarts"], [23, 3, 1, "", "smiles"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecule_group"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_select_result"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "trajectory"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "update"], [23, 3, 1, "", "view"]], "sire.mm.SelectorMImproper": [[23, 3, 1, "", "add"], [23, 3, 1, "", "apply"], [23, 3, 1, "", "apply_reduce"], [23, 3, 1, "", "assign"], [23, 3, 1, "", "chain"], [23, 3, 1, "", "clone"], [23, 3, 1, "", "count"], [23, 3, 1, "", "cutgroup"], [23, 3, 1, "", "cutgroups"], [23, 3, 1, "", "delete_all_frames"], [23, 3, 1, "", "delete_frame"], [23, 3, 1, "", "dynamics"], [23, 3, 1, "", "energies"], [23, 3, 1, "", "energy"], [23, 3, 1, "", "evaluate"], [23, 3, 1, "", "extract"], [23, 3, 1, "", "has_metadata"], [23, 3, 1, "", "has_property"], [23, 3, 1, "", "ids"], [23, 3, 1, "", "intersection"], [23, 3, 1, "", "invert"], [23, 3, 1, "", "is_empty"], [23, 3, 1, "", "is_selector"], [23, 3, 1, "", "load_frame"], [23, 3, 1, "", "measures"], [23, 3, 1, "", "metadata_keys"], [23, 3, 1, "", "minimisation"], [23, 3, 1, "", "molecule"], [23, 3, 1, "", "num_atoms"], [23, 3, 1, "", "num_chains"], [23, 3, 1, "", "num_cutgroups"], [23, 3, 1, "", "num_frames"], [23, 3, 1, "", "num_molecules"], [23, 3, 1, "", "num_residues"], [23, 3, 1, "", "num_segments"], [23, 3, 1, "", "potentials"], [23, 3, 1, "", "properties"], [23, 3, 1, "", "property_keys"], [23, 3, 1, "", "residue"], [23, 3, 1, "", "save_frame"], [23, 3, 1, "", "search"], [23, 3, 1, "", "segment"], [23, 3, 1, "", "size"], [23, 3, 1, "", "sizes"], [23, 3, 1, "", "smarts"], [23, 3, 1, "", "smiles"], [23, 3, 1, "", "to_list"], [23, 3, 1, "", "to_molecule_group"], [23, 3, 1, "", "to_molecules"], [23, 3, 1, "", "to_select_result"], [23, 3, 1, "", "to_string"], [23, 3, 1, "", "trajectory"], [23, 3, 1, "", "typename"], [23, 3, 1, "", "update"], [23, 3, 1, "", "view"]], "sire.mol": [[24, 2, 1, "", "Atom"], [24, 2, 1, "", "AtomIdx"], [24, 2, 1, "", "AtomMapping"], [24, 2, 1, "", "AtomMatch"], [24, 2, 1, "", "AtomMatchM"], [24, 2, 1, "", "AtomName"], [24, 2, 1, "", "AtomNum"], [24, 2, 1, "", "BondOrder"], [24, 2, 1, "", "Chain"], [24, 2, 1, "", "ChainIdx"], [24, 2, 1, "", "ChainName"], [24, 2, 1, "", "Cursor"], [24, 2, 1, "", "Cursors"], [24, 2, 1, "", "CursorsM"], [24, 2, 1, "", "Dynamics"], [24, 2, 1, "", "Element"], [24, 2, 1, "", "Minimisation"], [24, 2, 1, "", "MolIdx"], [24, 2, 1, "", "MolName"], [24, 2, 1, "", "MolNum"], [24, 2, 1, "", "Molecule"], [24, 2, 1, "", "ResIdx"], [24, 2, 1, "", "ResName"], [24, 2, 1, "", "ResNum"], [24, 2, 1, "", "Residue"], [24, 2, 1, "", "SegIdx"], [24, 2, 1, "", "SegName"], [24, 2, 1, "", "Segment"], [24, 2, 1, "", "SelectorMol"], [24, 2, 1, "", "Stereochemistry"], [24, 2, 1, "", "TrajectoryIterator"], [24, 1, 1, "", "get_alignment"], [24, 1, 1, "", "is_water"], [24, 1, 1, "", "selection_to_atoms"]], "sire.mol.Atom": [[24, 3, 1, "", "alternate_name"], [24, 3, 1, "", "assert_contains"], [24, 3, 1, "", "assert_contains_metadata"], [24, 3, 1, "", "assert_contains_property"], [24, 3, 1, "", "assert_has_metadata"], [24, 3, 1, "", "assert_has_property"], [24, 3, 1, "", "assert_same_molecule"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "cg_atom_idx"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "const_data"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cursor"], [24, 3, 1, "", "cutgroup"], [24, 3, 1, "", "cutgroups"], [24, 3, 1, "", "delete_all_frames"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "edit"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "get_link"], [24, 3, 1, "", "get_links"], [24, 3, 1, "", "has_links"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "index"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_link"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "is_same_molecule"], [24, 3, 1, "", "is_selector"], [24, 3, 1, "", "is_within_chain"], [24, 3, 1, "", "is_within_residue"], [24, 3, 1, "", "is_within_segment"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "metadata_type"], [24, 3, 1, "", "molecule"], [24, 3, 1, "", "move"], [24, 3, 1, "", "name"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_cutgroups"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "num_views"], [24, 3, 1, "", "number"], [24, 3, 1, "", "property_as_property"], [24, 3, 1, "", "property_as_variant"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "property_type"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "select_all"], [24, 3, 1, "", "select_all_atoms"], [24, 3, 1, "", "select_all_chains"], [24, 3, 1, "", "select_all_cutgroups"], [24, 3, 1, "", "select_all_residues"], [24, 3, 1, "", "select_all_segments"], [24, 3, 1, "", "selected_all"], [24, 3, 1, "", "selection"], [24, 3, 1, "", "selector"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_list"], [24, 3, 1, "", "to_molecules"], [24, 3, 1, "", "to_selector"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"]], "sire.mol.AtomIdx": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "null"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.AtomMapping": [[24, 3, 1, "", "align"], [24, 3, 1, "", "align_to0"], [24, 3, 1, "", "align_to1"], [24, 3, 1, "", "assert_single_molecule"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "atoms0"], [24, 3, 1, "", "atoms1"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "contains"], [24, 3, 1, "", "count"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_mapped"], [24, 3, 1, "", "is_single_molecule"], [24, 3, 1, "", "mapped_atoms0"], [24, 3, 1, "", "mapped_atoms1"], [24, 3, 1, "", "merge"], [24, 3, 1, "", "mutate"], [24, 3, 1, "", "property_map0"], [24, 3, 1, "", "property_map1"], [24, 3, 1, "", "size"], [24, 3, 1, "", "swap"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "unmapped_atoms0"], [24, 3, 1, "", "unmapped_atoms1"], [24, 3, 1, "", "what"]], "sire.mol.AtomMatch": [[24, 3, 1, "", "assert_contains"], [24, 3, 1, "", "assert_has_metadata"], [24, 3, 1, "", "assert_has_property"], [24, 3, 1, "", "assert_same_molecule"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "const_data"], [24, 3, 1, "", "cutgroup"], [24, 3, 1, "", "cutgroups"], [24, 3, 1, "", "delete_all_frames"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "get_link"], [24, 3, 1, "", "get_links"], [24, 3, 1, "", "group"], [24, 3, 1, "", "groups"], [24, 3, 1, "", "has_links"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_link"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "is_same_molecule"], [24, 3, 1, "", "is_selector"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "metadata_type"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_cutgroups"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_groups"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "num_views"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "property_type"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "select_all"], [24, 3, 1, "", "select_all_atoms"], [24, 3, 1, "", "select_all_chains"], [24, 3, 1, "", "select_all_cutgroups"], [24, 3, 1, "", "select_all_residues"], [24, 3, 1, "", "select_all_segments"], [24, 3, 1, "", "selected_all"], [24, 3, 1, "", "to_list"], [24, 3, 1, "", "to_molecules"], [24, 3, 1, "", "to_selector"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "to_unit"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.AtomMatchM": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "contains"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cutgroup"], [24, 3, 1, "", "cutgroups"], [24, 3, 1, "", "delete_all_frames"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "extract"], [24, 3, 1, "", "find"], [24, 3, 1, "", "group"], [24, 3, 1, "", "groups"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "ids"], [24, 3, 1, "", "indexes"], [24, 3, 1, "", "intersection"], [24, 3, 1, "", "intersects"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_selector"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "molecule"], [24, 3, 1, "", "molecules"], [24, 3, 1, "", "names"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_cutgroups"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_groups"], [24, 3, 1, "", "num_molecules"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "numbers"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "search"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_list"], [24, 3, 1, "", "to_molecule_group"], [24, 3, 1, "", "to_molecules"], [24, 3, 1, "", "to_select_result"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "update"], [24, 3, 1, "", "what"]], "sire.mol.AtomName": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.AtomNum": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.BondOrder": [[24, 3, 1, "", "aromatic_bond"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "double_bond"], [24, 3, 1, "", "from_rdkit"], [24, 3, 1, "", "from_s_d_f"], [24, 3, 1, "", "is_defined"], [24, 3, 1, "", "is_double"], [24, 3, 1, "", "is_single"], [24, 3, 1, "", "is_triple"], [24, 3, 1, "", "isromatic"], [24, 3, 1, "", "single_bond"], [24, 3, 1, "", "to_rdkit"], [24, 3, 1, "", "to_s_d_f"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "triple_bond"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "undefined_bond"], [24, 3, 1, "", "value"], [24, 3, 1, "", "value_as_double"]], "sire.mol.Chain": [[24, 3, 1, "", "assert_contains"], [24, 3, 1, "", "assert_contains_metadata"], [24, 3, 1, "", "assert_contains_property"], [24, 3, 1, "", "assert_has_metadata"], [24, 3, 1, "", "assert_has_property"], [24, 3, 1, "", "assert_same_molecule"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atom_idxs"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "const_data"], [24, 3, 1, "", "contains"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cursor"], [24, 3, 1, "", "cutgroup"], [24, 3, 1, "", "cutgroups"], [24, 3, 1, "", "delete_all_frames"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "edit"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "get_link"], [24, 3, 1, "", "get_links"], [24, 3, 1, "", "has_links"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "index"], [24, 3, 1, "", "intersects"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_link"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "is_same_molecule"], [24, 3, 1, "", "is_selector"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "metadata_type"], [24, 3, 1, "", "move"], [24, 3, 1, "", "name"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_cutgroups"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "num_views"], [24, 3, 1, "", "number"], [24, 3, 1, "", "property_as_property"], [24, 3, 1, "", "property_as_variant"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "property_type"], [24, 3, 1, "", "res_idxs"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "select_all"], [24, 3, 1, "", "select_all_atoms"], [24, 3, 1, "", "select_all_chains"], [24, 3, 1, "", "select_all_cutgroups"], [24, 3, 1, "", "select_all_residues"], [24, 3, 1, "", "select_all_segments"], [24, 3, 1, "", "selected_all"], [24, 3, 1, "", "selection"], [24, 3, 1, "", "selector"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_list"], [24, 3, 1, "", "to_molecules"], [24, 3, 1, "", "to_selector"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "update"]], "sire.mol.ChainIdx": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "null"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.ChainName": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.Cursor": [[24, 3, 1, "", "angle"], [24, 3, 1, "", "angles"], [24, 3, 1, "", "apply"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "bond"], [24, 3, 1, "", "bonds"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "commit"], [24, 3, 1, "", "delete"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "dihedral"], [24, 3, 1, "", "dihedrals"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "get"], [24, 3, 1, "", "get_index"], [24, 3, 1, "", "get_name"], [24, 3, 1, "", "get_number"], [24, 3, 1, "", "id"], [24, 3, 1, "", "improper"], [24, 3, 1, "", "impropers"], [24, 6, 1, "", "index"], [24, 3, 1, "", "is_angle"], [24, 3, 1, "", "is_atom"], [24, 3, 1, "", "is_bond"], [24, 3, 1, "", "is_chain"], [24, 3, 1, "", "is_dihedral"], [24, 3, 1, "", "is_improper"], [24, 3, 1, "", "is_internal"], [24, 3, 1, "", "is_molecule"], [24, 3, 1, "", "is_residue"], [24, 3, 1, "", "is_same_editor"], [24, 3, 1, "", "is_segment"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "make_whole"], [24, 3, 1, "", "molecule"], [24, 6, 1, "", "name"], [24, 3, 1, "", "num_frames"], [24, 6, 1, "", "number"], [24, 3, 1, "", "parent"], [24, 3, 1, "", "properties"], [24, 3, 1, "", "renumber"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "rotate"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "set"], [24, 3, 1, "", "set_name"], [24, 3, 1, "", "set_number"], [24, 3, 1, "", "transform"], [24, 3, 1, "", "translate"], [24, 3, 1, "", "type"], [24, 3, 1, "", "view"]], "sire.mol.Cursors": [[24, 3, 1, "", "angle"], [24, 3, 1, "", "angles"], [24, 3, 1, "", "apply"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "bond"], [24, 3, 1, "", "bonds"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "commit"], [24, 3, 1, "", "delete"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "dihedral"], [24, 3, 1, "", "dihedrals"], [24, 3, 1, "", "get"], [24, 3, 1, "", "improper"], [24, 3, 1, "", "impropers"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_same_editor"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "make_whole"], [24, 3, 1, "", "molecule"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "parent"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "rotate"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "set"], [24, 3, 1, "", "transform"], [24, 3, 1, "", "translate"], [24, 3, 1, "", "view"]], "sire.mol.CursorsM": [[24, 3, 1, "", "angle"], [24, 3, 1, "", "angles"], [24, 3, 1, "", "apply"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "bond"], [24, 3, 1, "", "bonds"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "commit"], [24, 3, 1, "", "delete"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "dihedral"], [24, 3, 1, "", "dihedrals"], [24, 3, 1, "", "get"], [24, 3, 1, "", "improper"], [24, 3, 1, "", "impropers"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "make_whole"], [24, 3, 1, "", "molecule"], [24, 3, 1, "", "molecules"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "rotate"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "set"], [24, 3, 1, "", "transform"], [24, 3, 1, "", "translate"], [24, 3, 1, "", "view"]], "sire.mol.Dynamics": [[24, 3, 1, "", "commit"], [24, 3, 1, "", "constraint"], [24, 3, 1, "", "context"], [24, 3, 1, "", "current_energy"], [24, 3, 1, "", "current_kinetic_energy"], [24, 3, 1, "", "current_potential_energy"], [24, 3, 1, "", "current_space"], [24, 3, 1, "", "current_step"], [24, 3, 1, "", "current_time"], [24, 3, 1, "", "elapsed_time"], [24, 3, 1, "", "energy_trajectory"], [24, 3, 1, "", "ensemble"], [24, 3, 1, "", "get_constraints"], [24, 3, 1, "", "get_lambda"], [24, 3, 1, "", "get_schedule"], [24, 3, 1, "", "info"], [24, 3, 1, "", "integrator"], [24, 3, 1, "", "minimise"], [24, 3, 1, "", "perturbable_constraint"], [24, 3, 1, "", "platform"], [24, 3, 1, "", "randomise_velocities"], [24, 3, 1, "", "run"], [24, 3, 1, "", "set_ensemble"], [24, 3, 1, "", "set_lambda"], [24, 3, 1, "", "set_pressure"], [24, 3, 1, "", "set_schedule"], [24, 3, 1, "", "set_temperature"], [24, 3, 1, "", "step"], [24, 3, 1, "", "step_speed"], [24, 3, 1, "", "time_speed"], [24, 3, 1, "", "timestep"], [24, 3, 1, "", "to_xml"], [24, 3, 1, "", "walltime"]], "sire.mol.Element": [[24, 3, 1, "", "actinide"], [24, 3, 1, "", "alkali_earth_metal"], [24, 3, 1, "", "alkali_metal"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "biological"], [24, 3, 1, "", "biological_element"], [24, 3, 1, "", "blue"], [24, 3, 1, "", "bond_order_radius"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "color"], [24, 3, 1, "", "color_name"], [24, 3, 1, "", "covalent_radius"], [24, 3, 1, "", "element_with_mass"], [24, 3, 1, "", "get_biological_elements"], [24, 3, 1, "", "green"], [24, 3, 1, "", "group"], [24, 3, 1, "", "halogen"], [24, 3, 1, "", "hex_color"], [24, 3, 1, "", "lanthanide"], [24, 3, 1, "", "mass"], [24, 3, 1, "", "max_bonds"], [24, 3, 1, "", "name"], [24, 3, 1, "", "noble_gas"], [24, 3, 1, "", "num_protons"], [24, 3, 1, "", "period"], [24, 3, 1, "", "rare_earth"], [24, 3, 1, "", "red"], [24, 3, 1, "", "reset_biological_elements"], [24, 3, 1, "", "set_element_is_biological"], [24, 3, 1, "", "set_element_is_not_biological"], [24, 3, 1, "", "symbol"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "transition_metal"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "vdw_radius"], [24, 3, 1, "", "what"]], "sire.mol.Minimisation": [[24, 3, 1, "", "commit"], [24, 3, 1, "", "constraint"], [24, 3, 1, "", "get_constraints"], [24, 3, 1, "", "get_log"], [24, 3, 1, "", "perturbable_constraint"], [24, 3, 1, "", "run"]], "sire.mol.MolIdx": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "null"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.MolName": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.MolNum": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "get_unique_number"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.Molecule": [[24, 3, 1, "", "assert_contains"], [24, 3, 1, "", "assert_contains_metadata"], [24, 3, 1, "", "assert_contains_property"], [24, 3, 1, "", "assert_has_metadata"], [24, 3, 1, "", "assert_has_property"], [24, 3, 1, "", "assert_same_molecule"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "const_data"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cursor"], [24, 3, 1, "", "cutgroup"], [24, 3, 1, "", "cutgroups"], [24, 3, 1, "", "delete_all_frames"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "edit"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "get_link"], [24, 3, 1, "", "get_links"], [24, 3, 1, "", "has_links"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "info"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_link"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "is_perturbable"], [24, 3, 1, "", "is_same_molecule"], [24, 3, 1, "", "is_selector"], [24, 3, 1, "", "join"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "metadata"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "metadata_type"], [24, 3, 1, "", "move"], [24, 3, 1, "", "name"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_cutgroups"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "num_views"], [24, 3, 1, "", "number"], [24, 3, 1, "", "perturbation"], [24, 3, 1, "", "properties"], [24, 3, 1, "", "property"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "property_type"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "select_all"], [24, 3, 1, "", "select_all_atoms"], [24, 3, 1, "", "select_all_chains"], [24, 3, 1, "", "select_all_cutgroups"], [24, 3, 1, "", "select_all_residues"], [24, 3, 1, "", "select_all_segments"], [24, 3, 1, "", "selected_all"], [24, 3, 1, "", "selection"], [24, 3, 1, "", "selector"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_list"], [24, 3, 1, "", "to_molecules"], [24, 3, 1, "", "to_selector"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "version"]], "sire.mol.ResIdx": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "null"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.ResName": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.ResNum": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.Residue": [[24, 3, 1, "", "alternate_name"], [24, 3, 1, "", "assert_contains_metadata"], [24, 3, 1, "", "assert_contains_property"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atom_idxs"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "contains"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cursor"], [24, 3, 1, "", "edit"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "index"], [24, 3, 1, "", "intersects"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_within_chain"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "move"], [24, 3, 1, "", "name"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "number"], [24, 3, 1, "", "property_as_property"], [24, 3, 1, "", "property_as_variant"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "selected_all"], [24, 3, 1, "", "selection"], [24, 3, 1, "", "selector"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_selector"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"]], "sire.mol.SegIdx": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "null"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.SegName": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "hash"], [24, 3, 1, "", "is_null"], [24, 3, 1, "", "map"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "what"]], "sire.mol.Segment": [[24, 3, 1, "", "assert_contains_metadata"], [24, 3, 1, "", "assert_contains_property"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "atom"], [24, 3, 1, "", "atom_idxs"], [24, 3, 1, "", "atoms"], [24, 3, 1, "", "chains"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "contains"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cursor"], [24, 3, 1, "", "edit"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "has_metadata"], [24, 3, 1, "", "has_property"], [24, 3, 1, "", "index"], [24, 3, 1, "", "intersects"], [24, 3, 1, "", "invert"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "metadata_keys"], [24, 3, 1, "", "move"], [24, 3, 1, "", "name"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "number"], [24, 3, 1, "", "property_as_property"], [24, 3, 1, "", "property_as_variant"], [24, 3, 1, "", "property_keys"], [24, 3, 1, "", "residues"], [24, 3, 1, "", "segments"], [24, 3, 1, "", "selected_all"], [24, 3, 1, "", "selection"], [24, 3, 1, "", "selector"], [24, 3, 1, "", "size"], [24, 3, 1, "", "to_selector"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"]], "sire.mol.SelectorMol": [[24, 3, 1, "", "append"], [24, 3, 1, "", "apply"], [24, 3, 1, "", "apply_reduce"], [24, 3, 1, "", "assign"], [24, 3, 1, "", "chain"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "contains"], [24, 3, 1, "", "count"], [24, 3, 1, "", "cutgroup"], [24, 3, 1, "", "cutgroups"], [24, 3, 1, "", "delete_all_frames"], [24, 3, 1, "", "delete_frame"], [24, 3, 1, "", "dynamics"], [24, 3, 1, "", "energies"], [24, 3, 1, "", "energy"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "extract"], [24, 3, 1, "", "find"], [24, 3, 1, "", "ids"], [24, 3, 1, "", "indexes"], [24, 3, 1, "", "is_empty"], [24, 3, 1, "", "is_selector"], [24, 3, 1, "", "load_frame"], [24, 3, 1, "", "minimisation"], [24, 3, 1, "", "mol_nums"], [24, 3, 1, "", "molecule"], [24, 3, 1, "", "names"], [24, 3, 1, "", "num_atoms"], [24, 3, 1, "", "num_chains"], [24, 3, 1, "", "num_cutgroups"], [24, 3, 1, "", "num_frames"], [24, 3, 1, "", "num_molecules"], [24, 3, 1, "", "num_residues"], [24, 3, 1, "", "num_segments"], [24, 3, 1, "", "numbers"], [24, 3, 1, "", "residue"], [24, 3, 1, "", "save_frame"], [24, 3, 1, "", "search"], [24, 3, 1, "", "segment"], [24, 3, 1, "", "size"], [24, 3, 1, "", "smarts"], [24, 3, 1, "", "smiles"], [24, 3, 1, "", "to_list"], [24, 3, 1, "", "to_molecule_group"], [24, 3, 1, "", "to_molecules"], [24, 3, 1, "", "to_select_result"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "trajectory"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "update"], [24, 3, 1, "", "view"], [24, 3, 1, "", "what"]], "sire.mol.Stereochemistry": [[24, 3, 1, "", "assign"], [24, 3, 1, "", "clone"], [24, 3, 1, "", "down"], [24, 3, 1, "", "from_rdkit"], [24, 3, 1, "", "from_s_d_f"], [24, 3, 1, "", "is_defined"], [24, 3, 1, "", "is_down"], [24, 3, 1, "", "is_not_stereo"], [24, 3, 1, "", "is_up"], [24, 3, 1, "", "not_stereo"], [24, 3, 1, "", "to_rdkit"], [24, 3, 1, "", "to_s_d_f"], [24, 3, 1, "", "to_string"], [24, 3, 1, "", "typename"], [24, 3, 1, "", "undefined"], [24, 3, 1, "", "up"], [24, 3, 1, "", "value"]], "sire.mol.TrajectoryIterator": [[24, 3, 1, "", "align"], [24, 3, 1, "", "apply"], [24, 3, 1, "", "current"], [24, 3, 1, "", "first"], [24, 3, 1, "", "frame_indexes"], [24, 3, 1, "", "rmsd"], [24, 3, 1, "", "smooth"], [24, 3, 1, "", "wrap"]], "sire.morph": [[25, 2, 1, "", "Perturbation"], [25, 1, 1, "", "annihilate"], [25, 1, 1, "", "create_from_pertfile"], [25, 1, 1, "", "decouple"], [25, 1, 1, "", "evaluate_xml_force"], [25, 1, 1, "", "extract_perturbed"], [25, 1, 1, "", "extract_reference"], [25, 1, 1, "", "link_to_perturbed"], [25, 1, 1, "", "link_to_reference"], [25, 1, 1, "", "match"], [25, 1, 1, "", "merge"], [25, 1, 1, "", "mutate"], [25, 1, 1, "", "repartition_hydrogen_masses"], [25, 1, 1, "", "replica_exchange"], [25, 1, 1, "", "shrink_ghost_atoms"], [25, 1, 1, "", "to_alchemlyb"], [25, 1, 1, "", "zero_ghost_angles"], [25, 1, 1, "", "zero_ghost_bonds"], [25, 1, 1, "", "zero_ghost_torsions"]], "sire.morph.Perturbation": [[25, 3, 1, "", "commit"], [25, 3, 1, "", "extract_perturbed"], [25, 3, 1, "", "extract_reference"], [25, 3, 1, "", "link_to_perturbed"], [25, 3, 1, "", "link_to_reference"], [25, 3, 1, "", "set_lambda"], [25, 3, 1, "", "to_openmm"], [25, 3, 1, "", "view"], [25, 3, 1, "", "view_perturbed"], [25, 3, 1, "", "view_reference"], [25, 3, 1, "", "zero_ghost_angles"], [25, 3, 1, "", "zero_ghost_bonds"], [25, 3, 1, "", "zero_ghost_torsions"]], "sire.restraints": [[26, 1, 1, "", "bond"], [26, 1, 1, "", "boresch"], [26, 1, 1, "", "distance"], [26, 1, 1, "", "get_standard_state_correction"], [26, 1, 1, "", "positional"]], "sire.search": [[27, 1, 1, "", "approx_equal"], [27, 1, 1, "", "approx_greater"], [27, 1, 1, "", "approx_greater_equal"], [27, 1, 1, "", "approx_less"], [27, 1, 1, "", "approx_less_equal"], [27, 1, 1, "", "approx_not_equal"], [27, 1, 1, "", "delete_all_tokens"], [27, 1, 1, "", "delete_token"], [27, 1, 1, "", "get_approx_epsilon"], [27, 1, 1, "", "get_min_protein_residues"], [27, 1, 1, "", "get_protein_residue_names"], [27, 1, 1, "", "get_token"], [27, 1, 1, "", "has_token"], [27, 1, 1, "", "set_approx_epsilon"], [27, 1, 1, "", "set_min_protein_residues"], [27, 1, 1, "", "set_protein_residue_names"], [27, 1, 1, "", "set_token"]], "sire.stream": [[30, 1, 1, "", "get_data_header"], [30, 1, 1, "", "get_header_property"], [30, 1, 1, "", "load"], [30, 1, 1, "", "save"], [30, 1, 1, "", "set_header_property"]], "sire.system": [[31, 2, 1, "", "ForceFieldInfo"], [31, 2, 1, "", "System"]], "sire.system.System": [[31, 3, 1, "", "add"], [31, 3, 1, "", "add_shared_property"], [31, 3, 1, "", "angle"], [31, 3, 1, "", "angles"], [31, 3, 1, "", "apply"], [31, 3, 1, "", "apply_reduce"], [31, 3, 1, "", "atom"], [31, 3, 1, "", "atoms"], [31, 3, 1, "", "bond"], [31, 3, 1, "", "bonds"], [31, 3, 1, "", "chain"], [31, 3, 1, "", "chains"], [31, 3, 1, "", "charge"], [31, 3, 1, "", "clear_energy_trajectory"], [31, 3, 1, "", "clone"], [31, 3, 1, "", "coordinates"], [31, 3, 1, "", "count"], [31, 3, 1, "", "cursor"], [31, 3, 1, "", "delete_all_frames"], [31, 3, 1, "", "delete_frame"], [31, 3, 1, "", "dihedral"], [31, 3, 1, "", "dihedrals"], [31, 3, 1, "", "dynamics"], [31, 3, 1, "", "energies"], [31, 3, 1, "", "energy"], [31, 3, 1, "", "energy_trajectory"], [31, 3, 1, "", "ensemble"], [31, 3, 1, "", "evaluate"], [31, 3, 1, "", "find"], [31, 3, 1, "", "has_metadata"], [31, 3, 1, "", "has_property"], [31, 3, 1, "", "improper"], [31, 3, 1, "", "impropers"], [31, 3, 1, "", "is_system"], [31, 3, 1, "", "load_frame"], [31, 3, 1, "", "make_whole"], [31, 3, 1, "", "mass"], [31, 3, 1, "", "metadata"], [31, 3, 1, "", "metadata_keys"], [31, 3, 1, "", "minimisation"], [31, 3, 1, "", "molecule"], [31, 3, 1, "", "molecules"], [31, 3, 1, "", "names"], [31, 3, 1, "", "num_atoms"], [31, 3, 1, "", "num_chains"], [31, 3, 1, "", "num_frames"], [31, 3, 1, "", "num_molecules"], [31, 3, 1, "", "num_residues"], [31, 3, 1, "", "num_segments"], [31, 3, 1, "", "numbers"], [31, 3, 1, "", "properties"], [31, 3, 1, "", "property"], [31, 3, 1, "", "property_keys"], [31, 3, 1, "", "remove"], [31, 3, 1, "", "remove_all_shared_properties"], [31, 3, 1, "", "remove_shared_property"], [31, 3, 1, "", "residue"], [31, 3, 1, "", "residues"], [31, 3, 1, "", "save_frame"], [31, 3, 1, "", "segment"], [31, 3, 1, "", "segments"], [31, 3, 1, "", "set_energy_trajectory"], [31, 3, 1, "", "set_ensemble"], [31, 3, 1, "", "set_metadata"], [31, 3, 1, "", "set_property"], [31, 3, 1, "", "set_shared_property"], [31, 3, 1, "", "set_space"], [31, 3, 1, "", "set_time"], [31, 3, 1, "", "shared_properties"], [31, 3, 1, "", "size"], [31, 3, 1, "", "smarts"], [31, 3, 1, "", "smiles"], [31, 3, 1, "", "space"], [31, 3, 1, "", "time"], [31, 3, 1, "", "to_molecule_group"], [31, 3, 1, "", "trajectory"], [31, 3, 1, "", "update"], [31, 3, 1, "", "view"], [31, 3, 1, "", "view2d"]], "sire.units": [[32, 1, 1, "", "angle"], [32, 4, 1, "", "angstrom"], [32, 1, 1, "", "clear_default_units"], [32, 1, 1, "", "convert"], [32, 1, 1, "", "length"], [32, 4, 1, "", "picometer"], [32, 1, 1, "", "set_default_unit"], [32, 1, 1, "", "set_default_units"], [32, 1, 1, "", "set_energy_unit"], [32, 1, 1, "", "set_internal_units"], [32, 1, 1, "", "set_length_unit"], [32, 1, 1, "", "set_mass_unit"], [32, 1, 1, "", "set_quantity_unit"], [32, 1, 1, "", "set_si_units"], [32, 1, 1, "", "set_time_unit"]], "sire.utils": [[33, 2, 1, "", "Console"], [33, 2, 1, "", "NullProfiler"], [33, 2, 1, "", "Profiler"], [33, 2, 1, "", "Table"], [33, 1, 1, "", "assert_imported"], [33, 1, 1, "", "have_imported"], [33, 1, 1, "", "try_import"], [33, 1, 1, "", "try_import_from"]], "sire.utils.Console": [[33, 3, 1, "", "debug"], [33, 3, 1, "", "debugging_enabled"], [33, 3, 1, "", "error"], [33, 3, 1, "", "info"], [33, 3, 1, "", "panel"], [33, 3, 1, "", "print"], [33, 3, 1, "", "print_exception"], [33, 3, 1, "", "redirect_output"], [33, 3, 1, "", "rule"], [33, 3, 1, "", "save"], [33, 3, 1, "", "set_debugging_enabled"], [33, 3, 1, "", "set_theme"], [33, 3, 1, "", "supports_emojis"], [33, 3, 1, "", "warning"]], "sire.utils.Profiler": [[33, 3, 1, "", "child_total"], [33, 3, 1, "", "is_null"], [33, 3, 1, "", "name"], [33, 3, 1, "", "start"], [33, 3, 1, "", "stop"], [33, 3, 1, "", "total"]], "sire.utils.Table": [[33, 3, 1, "", "add_column"], [33, 3, 1, "", "add_row"], [33, 3, 1, "", "to_string"]], "sire.vol": [[34, 2, 1, "", "Cartesian"], [34, 2, 1, "", "CoordGroup"], [34, 2, 1, "", "PeriodicBox"], [34, 2, 1, "", "TriclinicBox"]], "sire.vol.Cartesian": [[34, 3, 1, "", "assign"], [34, 3, 1, "", "beyond"], [34, 3, 1, "", "box_matrix"], [34, 3, 1, "", "calc_angle"], [34, 3, 1, "", "calc_dihedral"], [34, 3, 1, "", "calc_dist"], [34, 3, 1, "", "calc_dist2"], [34, 3, 1, "", "calc_dist_vector"], [34, 3, 1, "", "calc_dist_vectors"], [34, 3, 1, "", "calc_inv_dist"], [34, 3, 1, "", "calc_inv_dist2"], [34, 3, 1, "", "change_volume"], [34, 3, 1, "", "clone"], [34, 3, 1, "", "get_box_center"], [34, 3, 1, "", "get_copies_within"], [34, 3, 1, "", "get_images_within"], [34, 3, 1, "", "get_minimum_image"], [34, 3, 1, "", "get_random_point"], [34, 3, 1, "", "is_cartesian"], [34, 3, 1, "", "is_periodic"], [34, 3, 1, "", "make_whole"], [34, 3, 1, "", "maximum_cutoff"], [34, 3, 1, "", "minimum_distance"], [34, 3, 1, "", "set_volume"], [34, 3, 1, "", "to_string"], [34, 3, 1, "", "typename"], [34, 3, 1, "", "volume"]], "sire.vol.CoordGroup": [[34, 3, 1, "", "aabox"], [34, 3, 1, "", "assert_same_size"], [34, 3, 1, "", "assert_valid_index"], [34, 3, 1, "", "assign"], [34, 3, 1, "", "clone"], [34, 3, 1, "", "edit"], [34, 3, 1, "", "is_empty"], [34, 3, 1, "", "maybe_different"], [34, 3, 1, "", "to_string"], [34, 3, 1, "", "to_vector"], [34, 3, 1, "", "typename"], [34, 3, 1, "", "what"]], "sire.vol.PeriodicBox": [[34, 3, 1, "", "assign"], [34, 3, 1, "", "beyond"], [34, 3, 1, "", "box_matrix"], [34, 3, 1, "", "calc_angle"], [34, 3, 1, "", "calc_dihedral"], [34, 3, 1, "", "calc_dist"], [34, 3, 1, "", "calc_dist2"], [34, 3, 1, "", "calc_dist_vector"], [34, 3, 1, "", "calc_dist_vectors"], [34, 3, 1, "", "calc_inv_dist"], [34, 3, 1, "", "calc_inv_dist2"], [34, 3, 1, "", "change_volume"], [34, 3, 1, "", "clone"], [34, 3, 1, "", "dimensions"], [34, 3, 1, "", "get_box_center"], [34, 3, 1, "", "get_copies_within"], [34, 3, 1, "", "get_images_within"], [34, 3, 1, "", "get_minimum_image"], [34, 3, 1, "", "get_random_point"], [34, 3, 1, "", "is_cartesian"], [34, 3, 1, "", "is_periodic"], [34, 3, 1, "", "make_whole"], [34, 3, 1, "", "max_coords"], [34, 3, 1, "", "maximum_cutoff"], [34, 3, 1, "", "min_coords"], [34, 3, 1, "", "minimum_distance"], [34, 3, 1, "", "set_dimensions"], [34, 3, 1, "", "set_volume"], [34, 3, 1, "", "to_string"], [34, 3, 1, "", "typename"], [34, 3, 1, "", "volume"]], "sire.vol.TriclinicBox": [[34, 3, 1, "", "alpha"], [34, 3, 1, "", "assign"], [34, 3, 1, "", "beta"], [34, 3, 1, "", "beyond"], [34, 3, 1, "", "box_matrix"], [34, 3, 1, "", "calc_angle"], [34, 3, 1, "", "calc_dihedral"], [34, 3, 1, "", "calc_dist"], [34, 3, 1, "", "calc_dist2"], [34, 3, 1, "", "calc_dist_vector"], [34, 3, 1, "", "calc_dist_vectors"], [34, 3, 1, "", "calc_inv_dist"], [34, 3, 1, "", "calc_inv_dist2"], [34, 3, 1, "", "cell_matrix"], [34, 3, 1, "", "clone"], [34, 3, 1, "", "cubic"], [34, 3, 1, "", "gamma"], [34, 3, 1, "", "get_box_center"], [34, 3, 1, "", "get_copies_within"], [34, 3, 1, "", "get_images_within"], [34, 3, 1, "", "get_minimum_image"], [34, 3, 1, "", "get_random_point"], [34, 3, 1, "", "is_cartesian"], [34, 3, 1, "", "is_periodic"], [34, 3, 1, "", "is_reduced"], [34, 3, 1, "", "is_rotated"], [34, 3, 1, "", "minimum_distance"], [34, 3, 1, "", "reduce"], [34, 3, 1, "", "rhombic_dodecahedron_hexagon"], [34, 3, 1, "", "rhombic_dodecahedron_square"], [34, 3, 1, "", "rotate"], [34, 3, 1, "", "rotation_matrix"], [34, 3, 1, "", "set_volume"], [34, 3, 1, "", "to_string"], [34, 3, 1, "", "truncated_octahedron"], [34, 3, 1, "", "typename"], [34, 3, 1, "", "vector0"], [34, 3, 1, "", "vector1"], [34, 3, 1, "", "vector2"], [34, 3, 1, "", "volume"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data", "5": "py:attribute", "6": "py:property"}, "terms": {"": [0, 22, 23, 24, 25, 28, 31, 36, 39, 40, 41, 42, 43, 46, 51, 52, 53, 57, 58, 65, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 101, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "00": [66, 67, 71, 80, 101, 104, 105, 107, 109, 111, 114], "000": 67, "0000": [109, 111, 112], "00000": 67, "000000": [39, 40, 53, 90, 92, 107, 109, 111, 112, 114], "000040": 67, "00007776856795": 85, "0000ff": 42, "0001": 38, "000200": 67, "000210": 67, "000241348": 102, "000410": 67, "000479184": 87, "000509377": 87, "000653": 111, "000726": 90, "00073": 90, "000853": 107, "001": 24, "001040": 67, "0010697": 86, "00115906": 87, "00122144": 58, "0013": 111, "001306": 111, "001630": 114, "001707": 107, "0018364": 87, "001870": 67, "001875": 92, "00189494": 87, "001960": 111, "001996": 90, "002": [67, 114], "0021": 51, "002520": 90, "002560": 107, "0026": 111, "002613": 111, "00277097": 58, "00296": 86, "00301807": 58, "00308134": 82, "003413": 107, "003635": 111, "003672e": 53, "00386": 90, "0039": 111, "004": 67, "0041": 83, "00493017": 91, "005": 38, "00512262": 87, "0052": 111, "00521955": 87, "005647": 90, "005697": 94, "005927": 58, "006034": [40, 53, 92], "0060e": 114, "00618047": 82, "007": [93, 98], "007010": 92, "007170": 90, "007270": 111, "00734048": 87, "00756073": 102, "007979": 90, "008": [58, 80, 81, 105], "00815709": 58, "00846": 90, "008463": 90, "00857782": 91, "008645": 92, "00876339": 102, "008768": 107, "009025": 92, "009153": 114, "009332126465953": 104, "009359": 92, "0094": 112, "00951136": 58, "009867": 53, "009903": 90, "00ff00": 42, "01": [58, 66, 71, 72, 73, 80, 81, 82, 84, 85, 99, 105, 107, 109, 111, 114], "010": 67, "010000000000000002": 95, "0100e": 114, "010126": 90, "0101503": 91, "010268": 90, "0103": 112, "010526": 92, "01065": 93, "0107": 89, "010757": 40, "0108097": 58, "010830": 92, "010905": 111, "011": 98, "0113127": 87, "011406": 90, "011481": 53, "011507e": 53, "0117127": 58, "0118": 89, "011865": 90, "0119421": 58, "0120518": 91, "012299": 91, "012541": 90, "0125766": 58, "012715": 90, "012783": 53, "01281": 90, "012815": 90, "013085": 92, "0131": 90, "01314": 90, "013711": 53, "0138062": 58, "013967": 90, "014213": 90, "0143": 112, "0143363": 91, "014466": 94, "014540": 111, "0147076": 86, "015085": 111, "015341": 111, "015366": 92, "015537": 94, "0157": [58, 81], "015767": 94, "016608": 90, "016654": 90, "016740": 67, "016808": 102, "0168112": 58, "017446": [40, 53, 92], "0177259": 58, "018089": 90, "018104": 87, "0182352": 102, "0183852": 58, "018425": 58, "0185456": 58, "0187": 112, "019": 67, "019010": 90, "0190426": 82, "0191": 90, "019119": 53, "01916": 90, "019160": 90, "0192e": 114, "0195": 83, "01p": 99, "02": [66, 71, 72, 73, 80, 97, 105, 107, 111, 114], "020026": 92, "0200458": 51, "020368e": 53, "0203835": 58, "02085": 90, "020981": 53, "021098": 90, "02181e": 111, "022": [90, 105], "022091": 53, "02247": 90, "0225591": 58, "0229222": 58, "0229536": 58, "0234049": 88, "023439": [40, 53, 92], "023460": 67, "023485": 53, "0234e": 114, "0236023": 58, "023607": 107, "02388": 90, "02394": 90, "024480": 107, "025154": 90, "025353": 107, "025646": 114, "026227": 107, "0269803": 58, "027": 90, "0270237": 91, "02707": [82, 102], "0271": [106, 109], "027100": 107, "0275995": 58, "0279068": 58, "027917e": 53, "028096": 90, "0284179": 58, "0287": 100, "029406": 53, "029775": 40, "03": [24, 53, 71, 72, 73, 79, 80, 82, 97, 98, 102, 107, 111, 114], "03011": 90, "030114": 90, "030188": 90, "0304617": 102, "0306092": 86, "030683": 111, "03112": 90, "03145": 100, "031625": 90, "032": 105, "032015": 90, "0325111": 91, "033194": 90, "033346": 53, "0334647": 106, "03346470588235294": 106, "033465": 109, "033499": 90, "033563": 53, "0337": [81, 82, 112], "033885": 90, "034265": 53, "034371": 114, "034407": 90, "034752": 53, "0348": 93, "03505": [58, 84], "0353552": 88, "035907": 90, "035920": 67, "0362": 112, "036311": 90, "0365": 83, "036615": 92, "036705": 90, "036707": 94, "03679": 90, "036896": 53, "037819": 94, "037879": 90, "038025": 90, "038343": 101, "038681": 90, "038938": 90, "039": 94, "03905": 93, "039444": 90, "0395e": 114, "039843": 90, "04": [71, 72, 73, 80, 97, 107, 109, 111, 114], "0401": 90, "040398": 90, "041413": 90, "04142": 102, "0414449": 91, "041783": 90, "041887": 53, "041907": 92, "042046": 90, "04215": 90, "042161": 90, "04229": 90, "0422992": 86, "042487": 90, "042506": 90, "042897": 90, "043079": 94, "043125": 94, "043305": 94, "043430": 90, "043633": 90, "043674": 53, "043834": 90, "043966": 94, "044": 81, "04427": 90, "044481": 90, "046024": 111, "04634": 87, "0464": 102, "046408": 94, "0464e": 114, "0468198": 58, "04702": 93, "0479": 112, "048626": 53, "0489166": 91, "049796": 90, "0498": 90, "05": [24, 36, 41, 51, 53, 71, 72, 73, 75, 82, 88, 89, 90, 94, 97, 98, 99, 102, 104, 109, 114], "0505938": 58, "051": 102, "051194": 104, "05127": 90, "0513": [58, 81, 84, 93], "051780": 67, "052065": 92, "052632": 114, "054478": 53, "054636": 94, "055": 67, "055070": 92, "0555": 90, "05558": 90, "055585": 90, "0563e": 85, "056471": 53, "056742": 107, "056823": 53, "056832": 90, "057615": 107, "057685": 53, "0584583": 58, "058489": 107, "058775": 92, "059362": 107, "059552": 90, "05971": 90, "05975": 93, "059819": 90, "059858": 92, "05p": 114, "06": [41, 66, 71, 72, 73, 80, 97, 105, 109, 111, 114], "06000": 110, "06019": [58, 84], "060214": 40, "060235": [107, 109], "06023529411764705": 106, "0602353": 106, "0603": [81, 112], "060627": 94, "060742": 90, "061035": 90, "061152e": 53, "061365": 111, "0619792": 87, "0621": 112, "06217": 90, "062467": [40, 53, 92], "062557": 90, "062578848992636": 100, "062594": 90, "0626": 103, "062654": 90, "062705": 111, "063358": 111, "063463": 90, "063749": 90, "06375": 90, "064012": 111, "0640e": 114, "0643": 93, "064665": 111, "064670198487246": 100, "065318": 111, "06535e": 85, "065570": 90, "0655e": 114, "065689": [109, 112], "0656e": 114, "065850": 67, "065931": 90, "065959": 94, "066688": 90, "06674592039289437": 88, "0669": 93, "0674": 89, "067480": 90, "068": 105, "068442": 53, "06847": 90, "068533": 92, "068816": 90, "06908": 58, "0694e": 114, "07": [24, 41, 53, 71, 72, 73, 88, 97, 102, 109, 111], "071224": 53, "071368": 92, "0725": 83, "07281": 90, "072818": 90, "073444": 94, "0737e": 114, "073824": 92, "074039": 90, "07407": 90, "074165": 90, "074595": 92, "074686": 53, "076160": 67, "076241": 94, "077092": 53, "0774e": 114, "0781e": 114, "0791381": 58, "08": [51, 53, 55, 58, 72, 73, 75, 80, 81, 84, 102, 106, 107, 109, 111], "081234": 53, "081250": 53, "081922": 107, "082150": 53, "0823": [81, 112], "082416": 92, "082775": 107, "083489": 90, "083629": 107, "083724": 53, "084482": 107, "084501": 90, "084804": 92, "085335": [107, 109], "08533529411764705": 106, "0853353": 106, "085566": 107, "085797": 107, "086": [58, 81], "086011": 90, "086027": 107, "086258": 107, "086695": 92, "088796970412663": 100, "0888": 103, "0893536": 91, "089916": [53, 92], "089917": 40, "09": [39, 58, 71, 72, 73, 80, 84, 85, 89, 92, 99, 101, 102, 105, 109, 111], "090167": 90, "092179": 111, "092219e": 53, "0927e": 114, "092862": 94, "092928": 92, "093081": 92, "093390": 94, "0934184": 88, "093643": 90, "094045": 92, "09435": 100, "094675": 101, "094789": 90, "09479": 90, "09482e": 85, "095689": 90, "096167": 92, "097": 86, "09756e": 39, "0976": [58, 81], "097859": 114, "099334": 92, "0995291": 91, "0a": 36, "0x10283da10": 95, "0x102c698c0": 95, "0x102c69af0": 95, "0x102c69bd0": 95, "0x102c69cb0": 95, "0x102c69d90": 95, "0x102c69e00": 95, "0x102c6a180": 95, "0x102c6a1f0": 95, "0x102c6a340": 95, "0x102c6a3b0": 95, "0x14e95b510": 95, "0x14e9ee220": 95, "0x2846e5a70": 38, "0x2846e5cb0": 38, "0x2846e5ce0": 38, "0x2846e5d40": 38, "0x295a07cc0": 38, "1": [0, 2, 3, 21, 22, 23, 24, 25, 26, 28, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 51, 53, 55, 58, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116], "10": [24, 26, 34, 36, 38, 39, 40, 41, 42, 44, 45, 51, 52, 53, 58, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 90, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 109, 110, 111, 112, 114, 116], "100": [24, 26, 38, 39, 40, 41, 53, 69, 71, 72, 80, 90, 92, 94, 99, 101, 102, 103, 104, 105, 111, 113, 115, 116], "1000": [42, 69, 71, 73, 105], "10000": 24, "100000": 71, "100342": 104, "1004": 114, "1005": 71, "100m": 41, "100p": [38, 111, 113], "101": [2, 3, 40, 90, 105, 107, 111], "10138": [58, 84], "1014": [71, 114], "1016": 114, "102": [36, 71, 72, 80, 90], "1021": [36, 114], "1022": 114, "1023": 71, "1024": 114, "1025": 114, "1027": 71, "1029": 114, "10296": 91, "102960": 94, "102964": 94, "103": [36, 86, 90], "1032": 114, "10339": 114, "1035": [93, 102, 114], "103546": 90, "1038": 71, "103966": [40, 53, 92], "104": [73, 80, 86, 89, 90], "105": [73, 90, 104, 105], "105159": 114, "1052": 114, "10522": 93, "105263": 114, "105670": 92, "1057": 114, "105879": 86, "106": [36, 90], "1061": 114, "1062": 114, "1063": 51, "106471": 91, "106908": 112, "107": [71, 72, 90, 102], "107477": 107, "107708": 107, "10774": 72, "10792": 80, "10793": 80, "107939": 107, "10794": 80, "10795": 80, "10796": 80, "10797": 80, "1079e": 114, "108": 90, "108112": 114, "10816": 72, "108169": 107, "1084": [106, 109], "108400": 107, "108536": 111, "10886": 72, "109": [85, 90], "109161": 94, "1094": [58, 81, 82], "1096": 80, "10969": [106, 107, 109, 110], "10969000000000001": 106, "109793": 58, "10a": 36, "10p": [38, 99, 101, 102, 103], "10th": [40, 71], "10\u00b5": 41, "11": [24, 36, 40, 41, 44, 52, 53, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 109, 110, 111, 112], "110": [71, 86, 90, 94], "1101": 103, "110140410311534": 100, "110188": 53, "1103": 114, "110359": 92, "11085": 80, "11088": 80, "11091": 80, "11093": 80, "11094": 80, "11095": 80, "11096": 80, "11097": 80, "11098": 80, "11099": 80, "111": 90, "11102": 80, "11103": 80, "11104": 80, "11105": 80, "11106": 80, "11115": 80, "11116": 80, "11117": 80, "11118": 80, "11119": 80, "11120": 80, "1114e": 114, "111583": 90, "112": [86, 90], "11201": 114, "1123": [58, 81], "112378": 91, "11247": 72, "113": 90, "113170": 111, "1135": 112, "1136": 93, "113608": 91, "113659": 92, "113811": 53, "114": [86, 90, 93], "114108": 53, "114670198487243": 100, "115": [90, 94], "115083": 87, "115236": 90, "11524": 90, "11530": 71, "115377": 104, "11555": 71, "11573": 71, "11574": 71, "116": [90, 105], "116134": 86, "11623": [71, 72], "11624": [71, 72], "11625": [71, 72], "11626": 72, "11627": 72, "11628": 71, "11629": 71, "11630": 71, "11635": 71, "11636": 71, "11637": 71, "11644": 71, "11645": 71, "11646": 71, "11651": 71, "11652": 71, "11653": 71, "11654": 71, "11655": 71, "11656": 71, "11657": 71, "11658": 71, "11659": 71, "11660": 71, "11662": 73, "11664": 73, "11667": 73, "1167": 100, "11688": 73, "11689": 73, "11692": 73, "116947": 92, "11698": 73, "11699": 73, "117": [72, 73, 90], "11700": 73, "11701": 73, "11705": 71, "11706": 71, "11708": 71, "11709": 71, "11712": 71, "11721": 73, "11722": 73, "11723": 73, "11724": 73, "11725": 73, "11726": 73, "11727": 71, "11728": [57, 71, 75], "11729": 71, "11730": 71, "117300": 67, "11731": 71, "11732": 71, "11777": 90, "117770": 90, "118": [73, 90], "118048": [40, 53], "118281": 88, "119": [73, 90, 99], "1190": 65, "119361": 92, "119488": 92, "119507": 53, "1197": 102, "11982": 90, "119825": 90, "11999999997": 106, "11p": 101, "12": [23, 24, 36, 39, 40, 52, 53, 58, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112], "120": [73, 90, 94, 105], "120511": 91, "12065": 114, "120770": 67, "121": [73, 90], "121443": 94, "121478": 90, "12148": 90, "121532": 114, "12167": [100, 101, 104], "121679": 94, "122": [71, 73, 90], "122124": 53, "123": [73, 86, 90, 94], "12332": 91, "123591": 90, "124": 90, "124129": 86, "124729": [40, 53, 92], "1248": 111, "124897": 92, "1249": 90, "125": [36, 90, 94], "125256": 53, "1255": [53, 76], "125554": 92, "1256": [53, 76], "125648": 85, "1257": [53, 76], "1258": [53, 76], "125851": 86, "125882372721225": 100, "1259": [53, 76, 103], "126": [73, 87, 90, 102], "1260": [53, 76], "1261": 111, "126219": [40, 53], "127": 90, "127199": 94, "127388": 92, "1274": 111, "1274e": 114, "128": [36, 40, 71, 90], "128510": 67, "1287": 111, "128832": 107, "129": 90, "129184": 104, "12925": 114, "129553": 90, "13": [24, 36, 40, 52, 53, 58, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 101, 102, 105, 106, 109, 110, 111, 112], "130": 36, "1300": 111, "130151": 94, "13044": 90, "130710": 101, "1307e": 114, "131392": 90, "131481": [40, 53, 92], "131482": 92, "132": 83, "13314": 90, "133144": 90, "1335": 90, "135": 89, "1356": 53, "1357": 53, "1358": 53, "1359": 53, "1360": 53, "1361": 53, "1362": 53, "1363": 53, "1364": [53, 71], "1365": [53, 71], "1366": [53, 71], "1367": 71, "13672": 93, "1368": 71, "1369": 71, "137": [36, 74], "1370": 53, "137251": 92, "137252": 92, "137583": 92, "13788": 114, "137904": 114, "138": 71, "138171": 114, "13839927824877": 100, "1384": 103, "138719": 111, "139": [53, 71, 94], "139431e": 53, "14": [3, 24, 25, 36, 39, 40, 53, 58, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 96, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115], "140": 53, "141": 90, "14159": [58, 84], "141592653589793": 22, "141830": 67, "141862": 104, "142": 53, "142252": 53, "142445": 114, "1426": [71, 112], "143": 53, "1435": 93, "143589": 92, "144": [53, 81, 90], "144230": 67, "144469": 92, "14453270521631": 100, "145": 53, "145310": 92, "146": 53, "14651": 114, "14664": 90, "146644": 90, "147": 36, "147355": 91, "147805": 90, "1479": 90, "148": 89, "148629": 90, "1489": [71, 72], "149": [58, 81], "1490": [71, 72], "1491": [71, 72], "1492": [71, 72], "1493": [71, 72], "1494": [71, 72], "149639": 90, "1498": [81, 83], "15": [0, 24, 38, 39, 41, 53, 58, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 101, 102, 104, 106, 109, 110, 111, 112, 114], "150": [26, 72, 94, 102, 103, 104], "1500": 36, "15000000000000002": 104, "150792": 94, "1509e": 114, "151": 72, "1512": 71, "151461": 90, "15149": 90, "151492": 90, "1516": 111, "151760": 94, "1518": [26, 57, 75], "152": [72, 105], "152031": 92, "1521": [58, 81, 84, 93], "152490": 92, "152540": 67, "1525e": 114, "1527": 111, "153": 72, "15308": 91, "1531": 91, "153213": 40, "153215": 111, "153361": 90, "1537": 111, "15375": [106, 107, 109, 110], "15375000000000003": 106, "1538": 26, "154": 72, "1540": 26, "154284": 114, "154732": 94, "155": 72, "155093": 90, "15512": 114, "1554": 102, "155600": 92, "1561": 111, "156124": 53, "156298": 90, "156756": 53, "157": [71, 73], "157224": 90, "157295": 90, "1574": 102, "1576": 102, "157895": 114, "157968": 53, "158": 73, "1583": 111, "1586": 90, "159": 73, "1591": 111, "159753e": 53, "16": [23, 24, 39, 40, 52, 53, 58, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 97, 98, 101, 102, 105, 106, 109, 110, 112, 115], "160": [51, 73, 80], "160251": 40, "1604": 80, "161": 90, "1611": 111, "161409": 92, "161684": 94, "1617": 80, "161720": 92, "162": 80, "162127": 92, "1624": [80, 111], "162451": 90, "162834": 101, "163": 94, "163054e": 53, "163073": 101, "163214": 94, "1635": 92, "1637": 80, "16372": 114, "164": [36, 67], "164251": 90, "1644": 93, "1648e": 114, "165016": 101, "165851": 40, "166": 36, "166730e": 53, "167": 67, "167273": 92, "1679": 65, "168": 36, "16827": 90, "1682e": 114, "168300": 111, "1695": 90, "169596": 104, "17": [24, 40, 53, 58, 66, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 97, 98, 99, 101, 102, 106, 107, 109, 110, 112], "170": [36, 102], "170080": 40, "170306": 53, "170655": 114, "171437": 92, "171668": 90, "171748": 101, "172479": 92, "172513": 90, "172684": [40, 53, 92], "1728": 114, "173": 67, "1736": [90, 92], "173632": 92, "173648": 93, "174": 90, "174159": 90, "174160": 53, "174206": 92, "1742e": 114, "175605": 40, "175960": 101, "176": [36, 81], "176550": 67, "1769": 80, "177": [36, 90], "17723": 86, "177437": 90, "17744": 90, "1775": [26, 102], "1781": 80, "1782": 80, "17844": 93, "178556": 94, "1794": 80, "179525": 85, "18": [0, 24, 53, 58, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 97, 98, 101, 102, 110, 111, 112], "180": [34, 102], "1800": 80, "180337": 53, "1804": 116, "180433": 92, "180669": 101, "1809": 80, "18119": 93, "1812": 80, "1813": 80, "1822": [80, 116], "182338": 92, "1825": [80, 81, 112], "182746": 94, "183": 80, "184101": 92, "18423": 102, "184597": 114, "18497e": 85, "185": [36, 80], "185094": 90, "185263": 53, "185275": 53, "186": 71, "186179": 91, "1862": 90, "1866": [81, 87, 88], "186998316374265": 104, "187011": 114, "187961": 53, "188025": 94, "188059": 94, "18828": 93, "1885": 83, "188547": 53, "1892": 102, "189213": 85, "1893": 102, "1894": 102, "1897": 102, "1898": [75, 76, 77, 98], "1899": [76, 77, 98], "19": [24, 53, 58, 66, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 101, 102, 107, 109, 110, 111, 112], "1900": [77, 98, 102], "1901": [75, 76, 77, 98], "1902": [76, 77, 98], "1903": [77, 98, 102], "190370": [40, 53, 92], "1904": [53, 75, 76, 77, 98], "1905": [76, 77, 98], "1906": [53, 76, 77, 98, 102], "1907": [53, 75, 76, 77, 98, 102], "1908": [53, 76, 77, 98, 102], "1909": [53, 76, 77, 98, 102], "1910": [53, 75, 76, 77, 98], "1911": [53, 76, 77, 98], "1912": [40, 53, 68, 75, 76, 77, 95, 98], "1915": 102, "191511": 92, "191512": 92, "192": [73, 90], "192312": 53, "192988": 53, "193": 73, "1933": [58, 81, 84, 93], "19397": 102, "194": 73, "194532705216307": 100, "194598": 92, "195": 73, "195551": 40, "195995": 114, "195998": 112, "196": 73, "196087": 53, "196341": 104, "1965": 98, "1966": 90, "1969": 91, "197": [73, 90], "1974": 98, "197530": 67, "197920": [40, 53], "198": 90, "1983": 93, "1984": 98, "198475": 53, "199": [36, 90], "1993": 98, "19937": 0, "199611": 53, "19969848": 51, "1997": 0, "1998": 0, "1999": 0, "199997": [40, 53, 92], "1e": [36, 41, 45, 80], "1f": [38, 39, 53, 102, 104, 105, 113, 114, 115, 116], "1mol": 67, "1n": 38, "1p": [38, 53, 99, 101, 104, 105, 113, 114], "2": [0, 2, 3, 22, 23, 24, 25, 26, 31, 34, 35, 38, 39, 40, 41, 42, 45, 48, 51, 53, 55, 58, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116], "20": [24, 34, 36, 39, 40, 41, 51, 52, 53, 58, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 90, 92, 93, 97, 101, 102, 104, 105, 110, 112, 113, 114, 116], "200": [90, 96, 116], "2000": 0, "200000": [40, 53, 92], "2002": [0, 98], "2003": [0, 102], "2007": 0, "200x": 36, "201": [72, 80, 90], "2012": [0, 26, 102], "201226": 92, "2013": [0, 71], "201397": 53, "2014": [45, 71, 93], "2015": 71, "2016": [36, 71], "2017": [36, 52, 71], "2018": [36, 71], "201860": 90, "2019": [36, 52], "202": [36, 72, 90], "2020": 36, "2021": 36, "2022": [36, 52], "2023": [35, 47, 48, 52, 102], "2024": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "202503": 51, "203": [72, 80, 90], "20317e": 111, "203389": 114, "204": [72, 90], "2045": 41, "2047": 83, "205": [72, 90], "205031": 92, "205034": 92, "205520": 67, "205784": 104, "206": 90, "206198": 94, "206761": 94, "2068": 93, "207": 90, "20708e": 111, "20729": 90, "207670198487243": 100, "207715": 53, "208": [67, 90], "20803": [85, 89], "2083": 116, "2084": 116, "2085": 93, "208598": 92, "2087": 116, "209": 90, "20919e": 111, "2094": 116, "209679": 101, "20a": 116, "20f": 101, "20p": 53, "20th": 90, "21": [24, 45, 52, 53, 58, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 90, 91, 92, 93, 94, 97, 102, 104, 109, 110, 112], "210": 90, "210188": 101, "210526": 114, "210905": 101, "211": 90, "2115": 116, "2119": 116, "212": 90, "212016": 53, "212266": 53, "2125": 116, "213": 90, "2132": 116, "214": 90, "214334": 90, "2149": [58, 81, 84, 93], "214994": [40, 53, 92], "215584": 92, "215898": 94, "216013": 114, "216024": 87, "216122": 90, "216253": 90, "216410": 67, "217581": 87, "218503": 53, "218850": 92, "219032": 101, "219765": 114, "22": [24, 36, 40, 52, 53, 58, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 97, 102, 105, 110, 112, 116], "220004": 92, "220005": 92, "2202087996265908e": 105, "220497": 94, "2206": 103, "22062162179178": 100, "221010": 94, "221193": 104, "2214": 88, "2221": 89, "222260": 92, "2227": 93, "22282": 93, "223413": 92, "223427": 92, "223444": 92, "223720": 67, "223964": [40, 53, 92], "22497": 53, "224970": [40, 53, 92], "22503902796385": 100, "225835": 92, "226": [71, 72], "226096": 40, "226935": 53, "227257": 104, "227511": 53, "22857e": 85, "229": [58, 84], "229707": 40, "22a": 116, "23": [53, 71, 72, 73, 75, 76, 77, 78, 80, 82, 89, 90, 92, 93, 94, 98, 100, 103, 105, 110], "2311e": 114, "231417": 86, "2317": 90, "23199": 114, "233858": 114, "2343": 90, "235": 67, "235105": 88, "23544": 91, "236168": 114, "236196": 94, "237779": 101, "238097": 104, "239": 102, "2390": 41, "239223087953487": 105, "2395": 98, "2399": 102, "24": [24, 26, 41, 53, 66, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 90, 92, 93, 94, 97, 98, 99, 100, 102, 103, 105, 109, 110], "2400": [41, 112], "24037": 91, "2407": 90, "2419": 98, "242185": 94, "2421e": 114, "242855": 92, "24294": 89, "243": 87, "2430": 98, "2434": 93, "243423": 94, "243683": 101, "24385": 89, "244": 90, "244352": 94, "245213": 92, "245588": 53, "246": 94, "246059065416177": 87, "24605e": 111, "2463": 98, "246476": 114, "246601": 104, "247033": 92, "247135": 112, "2471e": 85, "2475": 98, "247532705216308": 100, "247922": 40, "24812": 93, "248563": 53, "248816": 92, "249": 90, "2495": 36, "25": [23, 24, 31, 36, 38, 41, 42, 53, 71, 72, 73, 75, 76, 77, 78, 80, 90, 92, 93, 94, 98, 99, 100, 102, 103, 104, 105, 110, 111, 114], "250": [72, 90, 105], "250071": 101, "250565": 85, "250956": 53, "251": 72, "251273": 53, "251793": [106, 107, 109], "251952": 90, "252": 72, "252520": 114, "252589": 92, "253": 72, "2531": 83, "253447": 94, "2539": 103, "253932968775896": 100, "253948": 92, "254": 72, "254053": 90, "254290": 92, "254415": 53, "254438": 101, "255": [24, 42, 72, 90], "255331": [40, 53, 92], "255705": 90, "256mb": 40, "257258": 111, "257463": 90, "2577": 93, "258177": 92, "2583": 114, "2587718667371606": 105, "2588": 102, "259": 80, "2597e": 114, "25km": 36, "25oc": [38, 53, 101, 102, 103, 104, 105, 111], "25p": [36, 104, 105], "26": [24, 53, 57, 66, 71, 72, 74, 75, 76, 77, 80, 82, 90, 92, 93, 94, 98, 100, 102, 103, 104, 105, 109, 110], "260509": 92, "261": 80, "262639": 53, "2627": 93, "263": 80, "263158": 114, "2632": 90, "263291": 94, "264": 80, "26434": 102, "264953": [109, 112], "264990": 92, "265": 80, "2651": 107, "265345": 40, "265484": 53, "266": 80, "266409": 53, "26643e": 111, "267": 80, "267230": 94, "26777": 87, "268": 80, "268087": 94, "268408": [40, 53, 92], "268919": 114, "269847": 114, "27": [40, 53, 71, 72, 73, 76, 77, 80, 81, 83, 90, 92, 93, 94, 97, 98, 104, 109, 110], "271": 80, "271105": 53, "2712e": 114, "271354": 92, "2719": [58, 81, 112], "27197": 105, "272158": 92, "272231": 53, "272544": 92, "2747": 112, "274884": 53, "275522": 104, "275560": 90, "276305": 94, "27636": 83, "2764": 80, "276564": 94, "276592": 107, "276646": [106, 107, 109], "277": 71, "277433": 92, "2775": 36, "27753": 86, "27779": 85, "278": 71, "278286": 40, "278842594581429": 105, "279": [40, 80, 83, 105], "279122": 94, "28": [26, 53, 71, 72, 73, 76, 77, 80, 90, 92, 93, 98, 102, 110], "280": 80, "280017": 94, "280482": 92, "280865": 53, "280940": 67, "281": [80, 87], "281060": 67, "281249": 94, "281272": 90, "2813e": 114, "281457": 90, "2816e": 114, "281803": 90, "282168": 92, "2822": 92, "282872": 94, "283": [80, 92], "283565": 40, "283597": 101, "283616": 107, "2847": 102, "284961": 94, "285": [67, 71], "285078": [91, 94], "285305": 114, "28589": 93, "286994": 53, "287022": 94, "2872": 103, "28721210369622": 100, "287372": 114, "2874": [58, 81, 84, 93], "287623": 94, "287670": 92, "288": 94, "289841": 92, "289923": 92, "29": [24, 36, 40, 52, 53, 66, 71, 72, 73, 75, 76, 77, 80, 82, 90, 92, 93, 97, 98, 99, 101, 102, 105, 110], "290544": 92, "291006": 94, "293046": 92, "293104": 92, "293878": 92, "294": 80, "294772": 53, "294830": 94, "2952e": 114, "295320": [90, 94], "295992": 112, "296": 80, "296250": 67, "296511": 114, "297": 80, "297191": 94, "29758": 93, "297820": 53, "297987": 94, "298": [26, 38, 41, 80, 102], "298863": 94, "299": 80, "2a": 110, "2d": [31, 36, 37, 50, 53, 55, 60, 65, 95], "2f": [104, 105, 111], "2p": [104, 105], "2to3": 0, "2x": [114, 115], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "30": [0, 52, 53, 71, 72, 73, 75, 76, 77, 80, 90, 94, 98, 101, 104, 105, 110, 114], "300": [24, 26, 41, 80, 114], "3000": 41, "300294": 101, "300661": 92, "300869": 94, "301": 80, "301014": 92, "301673": 114, "301822": 92, "301905": 111, "302": [80, 112], "3027026336540715": 105, "303": [80, 112], "3031": 26, "303707": 53, "304": [80, 112], "3041": [88, 90], "304187": 40, "304294": 94, "30445": 93, "304641": 53, "305": [80, 112], "305274": 92, "305975": 53, "306": [72, 80, 112], "3062": 90, "306430": 111, "306436": 92, "306437": 92, "306832": 92, "307": [80, 112], "308": 112, "308098": 94, "308505": 104, "309": [80, 112], "309043": 92, "309371": 92, "31": [24, 53, 58, 71, 72, 73, 77, 80, 83, 84, 86, 90, 94, 98, 102, 110, 111], "310": 112, "310039": 114, "310871": 92, "311": 112, "31125": 53, "311255": [40, 53, 92], "311827": 53, "312": [80, 112], "313": 112, "313832": 90, "314": 112, "314379": 90, "3147": 92, "31498": 88, "315": [80, 112], "315789": 114, "315842": 87, "31649": 90, "3165": 93, "316508": 53, "317": [58, 84, 93], "317239": 92, "317341": 90, "317684": 94, "317703": 101, "317903": 94, "317985": 90, "318006": 114, "3193": 90, "319345": 104, "319428": 90, "31950": 105, "32": [22, 53, 58, 71, 72, 73, 76, 77, 80, 81, 84, 86, 90, 91, 94, 97, 98, 101, 109, 110], "320326": 53, "321": 94, "32140": 105, "321516": 111, "3217": 90, "322190": 53, "323617": 53, "324323": 53, "3244": 93, "324644": 101, "324706": 101, "324784": 90, "324959": 92, "325000": 112, "325505": 114, "326211": 94, "3263": 38, "326716": 40, "326823": 101, "327064": [40, 53, 92], "327241": 94, "327286": 87, "327498": 94, "327720": 92, "327772": 53, "327967": 94, "32807": 105, "329": [106, 107, 109], "3293": 93, "329641": 53, "329925": 92, "32bit": 22, "33": [24, 53, 58, 71, 72, 73, 75, 76, 77, 80, 82, 84, 86, 90, 92, 94, 98, 102, 105, 110], "330": 107, "331": [90, 107], "332": 107, "332422": 111, "33301": [58, 81, 84, 93], "333270": 40, "333344": 53, "334115": 92, "334118": 92, "335": 93, "335519": 92, "335720": 92, "337": [58, 84], "3373": 93, "33741": 101, "3375": 83, "3376e": 114, "338358": 92, "338535": 86, "339087": [40, 53, 92], "339333": [40, 53, 92], "33939": 93, "339605": 92, "339967": [109, 112], "34": [24, 36, 40, 53, 58, 71, 72, 73, 75, 77, 80, 82, 84, 86, 90, 92, 94, 98, 102, 110, 111], "340": [58, 84], "3400": 112, "340617": 53, "3407": [58, 81, 84, 91, 93], "34130": 105, "341345": 114, "3414": 89, "341576": 92, "342441": 92, "34450": 105, "3447": 114, "345331": 114, "345364": 92, "345863": 92, "347161": 94, "3472": 109, "34753270521631": 100, "3479": 112, "348065": 111, "348159": 40, "348710": 92, "348883": 90, "348963": 111, "349259": 92, "3493": 92, "3493e": 114, "349405": 90, "35": [24, 39, 40, 41, 53, 58, 71, 72, 73, 75, 76, 77, 80, 82, 84, 86, 90, 92, 94, 97, 98, 102, 104, 110, 114], "3506": [90, 93], "3509": [58, 81, 84, 93], "3514": [58, 81, 84, 86, 87, 88, 93], "351857": 53, "352": 72, "352134": 94, "3525": [58, 81, 84, 93], "352598": 111, "353": 102, "353054e": 53, "354": 102, "3542": 93, "355": 102, "355054": [40, 53], "3558": 93, "356": 102, "356098": 92, "356142": 40, "356233": 111, "356887": [40, 53, 92], "357": 102, "3571": 93, "357558": 92, "3575e": 114, "357904": 104, "358": 102, "358399": 94, "359": [67, 90], "359296": 101, "3594": 80, "3595": 80, "3596": [80, 93], "3597": 80, "3598": 80, "359824": 112, "359868": 111, "3599": [80, 96], "36": [40, 53, 58, 71, 72, 73, 76, 77, 78, 84, 86, 87, 90, 92, 94, 98, 115], "360": [34, 93], "3601": 80, "3602": 80, "3603": 80, "360323": 114, "3604": 80, "3605": 80, "3606": 80, "3607": 80, "3608": 80, "3609": 80, "3610": 80, "3611": 80, "3612": 80, "3614": 80, "361446": 94, "3615": 80, "3616": 80, "3617": 80, "3618": 80, "3622": 80, "362271": 53, "3623": 80, "3624": 80, "3625": 80, "3626": 80, "3627": [80, 112], "3628": 80, "3629": 80, "363": 94, "3630": 80, "3631": 80, "3633": 80, "3634": 80, "3634e": 114, "3635": 80, "363503": 111, "3636": 80, "3637": 80, "3638": 80, "364056": 94, "3641": 90, "364316": 90, "364667": 94, "364851": 92, "365337": 101, "365638": [40, 53, 92], "3659": 93, "365931": 86, "3662": [58, 81], "366888": 94, "367": 92, "3678e": 114, "368": 90, "368146": 92, "368421": 114, "368579": 92, "3686": 102, "368620": 53, "3691": 93, "3698": 102, "36x36": 115, "37": [24, 40, 45, 53, 58, 71, 72, 73, 77, 78, 79, 80, 82, 84, 87, 90, 92, 94, 97, 98, 102, 111], "370160": 94, "370172": 94, "370186": 94, "3702": 91, "3704": 102, "3705": 93, "3717": 90, "37208": 104, "37234": 104, "37268": 104, "37269": 104, "37276": 104, "373": 71, "373022": 92, "37332": 104, "373809": 92, "374": [71, 90], "374869": 90, "375": [71, 90], "375049": 53, "375934": 92, "375989": 53, "376": 71, "377": 71, "377196": 53, "378": 71, "378153": 90, "378243": 90, "37844": 53, "37848": 53, "37850": 53, "378594": 92, "3786": 99, "378688": 101, "378849": 86, "379": 91, "379187": 92, "3796": 93, "379715": 111, "38": [58, 71, 72, 73, 74, 78, 80, 84, 87, 90, 92, 94, 98, 111], "380162": 40, "380889": 40, "38123": 0, "38160": 53, "38172": 53, "38175": 53, "38354": 53, "383591": 114, "38363": 53, "38366": 53, "383852": [40, 53, 92], "383908": 40, "385": 107, "3854": 112, "386": 107, "386336": 101, "386399": 92, "38659": 53, "386670198487245": 100, "38676": 53, "38677": 53, "387": [83, 106, 107], "38727": 101, "3873": 83, "38732": 104, "38733": 104, "38743": 101, "387490": 40, "388107": 92, "3886": [58, 81, 84, 85, 86, 87, 88, 93], "388795": 92, "388935": 53, "38936": 91, "38937": 102, "38950": 104, "38982": 104, "389970": 67, "39": [24, 53, 58, 71, 72, 73, 75, 76, 77, 78, 80, 82, 84, 87, 90, 94, 98, 102, 105], "39006": 41, "3905": 90, "3906681555655": 100, "39067": 53, "3907": 103, "39086262536239597": 88, "390863": 88, "39092": 53, "39094": 53, "3909e": 114, "391193": 94, "39231": 104, "39232": 104, "392733": 104, "39300": 104, "39301": 104, "3934": 93, "393885": 92, "393889": 92, "394078": 92, "394975": 94, "3952e": 88, "395386": 101, "396": 100, "396176": 40, "396877": 92, "39720": 53, "39740": 53, "39743": 53, "39773": 114, "398213": 92, "39824e": 85, "398546": 87, "398933": 92, "39967": [58, 81, 82], "399821": 53, "39983": 91, "3c00139": 36, "3d": [22, 28, 34, 36, 37, 41, 51, 89, 90, 95, 96, 106, 109], "3f": 116, "3nss": [36, 42, 65, 95], "3x3": [22, 24], "4": [22, 23, 24, 25, 26, 35, 38, 39, 40, 41, 43, 45, 48, 51, 53, 55, 57, 58, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115], "40": [40, 53, 58, 71, 72, 73, 75, 78, 80, 83, 84, 87, 90, 92, 94, 98, 104, 114], "400": [24, 71, 99], "400000": [40, 53, 92], "400002": [40, 53, 92], "400939": 53, "402": 86, "402629": 92, "403285": 94, "40392": 53, "40448": 53, "40449": 53, "4046": 90, "4048e": 114, "405149": 53, "405155": 53, "4054": [100, 104], "40561": 93, "405917": 92, "406235": 94, "4064": 91, "407233": 92, "407315": 90, "407583": 92, "4076": 92, "40763": 101, "40764": 101, "40828": 101, "40855": 101, "40868": 101, "40869": 101, "40890": 101, "40891": 101, "40892": 101, "408932": 114, "40928": 101, "40947": 101, "409475": 94, "40948": 101, "40949": 101, "409696": 53, "40994": [58, 81, 84, 93], "40997": 101, "41": [24, 40, 53, 58, 71, 72, 73, 75, 78, 80, 82, 84, 87, 90, 91, 92, 94, 109], "41019": 101, "41020": 101, "41027": 101, "41046": 101, "41063": 101, "41064": 101, "410744": 53, "41090": 101, "41091": 101, "412": 71, "41201": 101, "412484": 92, "41276": 93, "41282": 101, "412892": 94, "413": 71, "41306": 101, "413449": 94, "414": 71, "414145": 94, "4147": 26, "414929": 92, "415": 71, "4157": [81, 112], "41589": 93, "415993": 53, "416": 71, "416321": 94, "416578": 94, "41676": 53, "41678": 101, "41684": 53, "41685": 53, "416899": 40, "417": 71, "41724": 101, "417398": 92, "417971": 53, "418": [67, 71], "418229": 92, "4184e": 114, "419": 71, "419098": 92, "419100": 92, "42": [40, 53, 66, 71, 72, 73, 75, 80, 90, 92, 94, 105, 109], "420695": 53, "421053": 114, "42131": 93, "422320": 92, "422485": 104, "4231e": 114, "42404": 101, "42405": 101, "4241": 93, "424470": 92, "42466": 101, "424758": 114, "4247e": 114, "425": [90, 103], "425045597240814": 100, "425605": 92, "42569": 105, "426": 71, "4265": 93, "426522": 101, "426949": 53, "427": 71, "427854": 90, "428": 71, "428450": 94, "429617": 53, "43": [24, 36, 40, 53, 71, 72, 73, 75, 79, 80, 82, 90, 92, 94, 97, 98, 102, 105], "430135": 53, "430144": 90, "430299": 40, "430617": 53, "430686": 114, "43076": [58, 81, 84, 93], "4309": 114, "430994": 40, "431110": 94, "431376": 107, "431575": 114, "432": 99, "43210": 101, "43211": 101, "432695": 91, "43335": 53, "43348": 53, "43351": 53, "433697": 53, "433834": 53, "433986": 90, "434": [58, 84, 102], "434050": 90, "434253": 92, "434525": 104, "435": 102, "435093": 101, "4351": 103, "43511653656108": 100, "435594": 53, "436018": 92, "43644": 101, "4365": [58, 81, 84, 85, 86, 87, 93], "437424": 94, "43761": 93, "438198": 94, "4384": 106, "438400": 107, "438605": 92, "439": 99, "44": [24, 40, 53, 66, 71, 73, 74, 75, 76, 77, 78, 80, 82, 83, 89, 90, 91, 92, 94, 97, 102, 105, 109], "440": 99, "4402": 101, "4407": 92, "440735": 90, "440781": 53, "440864": 94, "441039027963846": 100, "441049": 92, "44143": [87, 88], "441489": 87, "442": 67, "442291": 53, "442352": 40, "442886": 94, "443253": 114, "44371": 93, "444502": 92, "444933": 92, "445042": 94, "4458": 90, "446259": 92, "446533": 94, "446705": 94, "446977": 92, "4477": 71, "447723": 94, "4478": 71, "4479": [71, 90], "4480": 71, "4481": 71, "44815": [58, 81, 84, 93], "448164": 94, "4482": 71, "44823": [58, 81, 84, 85, 86, 87, 88, 93], "448702": 53, "448833": 40, "449": [58, 84, 90], "45": [24, 36, 40, 53, 71, 72, 73, 75, 76, 77, 78, 80, 82, 90, 92, 94, 97, 98, 102, 104, 105, 109, 114], "4509": 103, "45094936681738": 100, "451575": 53, "452924": 92, "453053": 53, "4532": [58, 81, 84, 85, 86, 87, 93], "453372": 53, "454505": 92, "454670": [40, 53, 92], "455": 41, "45509": 101, "4559": 93, "456": [90, 93], "4561": 90, "45641": 85, "456752": 94, "4568": 90, "4571": 93, "457730": [109, 112], "458": 74, "458050": 92, "458051": 92, "4583": 89, "459": 74, "459349": 92, "459645": 111, "46": [71, 72, 80, 90, 91, 92, 93, 94], "460": 74, "460435": 92, "46062": 53, "46064": 53, "46066": 53, "460664": 90, "4606e": 114, "460866": 53, "461": 74, "461269": 40, "461966": 92, "462": 74, "462340": 101, "462497": 92, "462885": 94, "463": 74, "463535": 90, "463628": 94, "463890": 53, "464": [74, 93], "465": 111, "465191": 92, "466132": 101, "466133": 53, "466528": 92, "466972": 104, "467360": 94, "467384": 53, "468399": 53, "4689": 93, "469": 111, "469532": 90, "47": [40, 53, 71, 72, 73, 80, 90, 92, 94], "470122": 94, "470519": [40, 53, 92], "470944": 101, "470977": 101, "471265": 92, "47135": 58, "471396": 53, "472406": 92, "472728": 94, "472748": 92, "472768": 111, "473684": 114, "4737e": 114, "474": 111, "474039027963848": 100, "474372": 92, "4745e": 114, "476611": 104, "476675": 40, "4771e": 114, "477344": 91, "4777": 26, "4777e": 114, "478025": 53, "47803": [81, 83], "478095": 92, "478942": 90, "479": 111, "48": [24, 38, 40, 41, 53, 71, 72, 73, 75, 80, 82, 90, 92, 94, 97, 98, 102], "48035": 93, "4805": [58, 81, 84, 86, 87, 88, 93], "481467": [40, 53], "481881": 94, "4827e": 114, "4828280872953": 41, "4833e": 114, "483867": 53, "483966": [40, 53, 92], "484": 111, "4845": 102, "484615": 94, "484710": 114, "484783": 114, "48479": 53, "485229": 104, "485350": 94, "485492": 94, "4855": 91, "485502": 94, "485545": [40, 53, 92], "48557": 53, "485933": 92, "485999": 53, "486087": 92, "48613": 53, "4862": 73, "486411": [40, 53, 92], "48642": 102, "48645": 53, "48664": 53, "48687": 53, "48694": 53, "48726": 53, "48737": 105, "487378": [40, 53, 92], "48739": 53, "48750": 53, "4876": 73, "4877": 73, "48771": 53, "48773": 53, "48778e": [39, 81], "4878": 73, "48781": 53, "487893": 104, "4879": 73, "48792": 53, "48796": 53, "48797": 53, "4880": 73, "48802": 53, "48804": 53, "48806": 53, "4881": 73, "488109": 111, "48815": 53, "488247": 92, "488562": 92, "488730": 53, "489374": 94, "49": [24, 40, 71, 72, 73, 75, 76, 77, 78, 80, 82, 83, 90, 92, 94, 97, 102, 105, 109], "491": 89, "492886": 111, "493": 90, "493204": 90, "49423": [58, 81, 84, 85, 86, 87, 93], "494743": 92, "495": [40, 53, 90, 92], "49529e": 111, "496": [40, 53, 90, 92], "49653e": 111, "497": [40, 53, 90, 92], "498": [40, 53, 90, 92, 105], "499": [40, 53, 90, 92], "499764": [40, 53], "499993": 92, "4_coulomb": [40, 53, 91, 92, 94], "4_lj": [40, 53, 91, 92, 94], "4e": 41, "4e0c": 71, "4f": [36, 38, 53, 99, 101, 102, 103, 105], "4p": 105, "5": [1, 2, 24, 25, 26, 38, 39, 40, 41, 42, 44, 48, 51, 53, 55, 58, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115], "50": [24, 39, 40, 41, 42, 58, 71, 74, 75, 80, 84, 90, 92, 94, 99, 105, 111, 114], "500": [24, 40, 53, 69, 90, 92], "5000": [24, 115], "500329": 90, "500p": 36, "501": 90, "50102": [89, 102], "501087": 92, "5011": 93, "5014e": 114, "5018e": 114, "5028": 93, "503451": 111, "504175": 104, "504405": 101, "505": 93, "505327": 101, "506350": 101, "5067": 89, "508": 93, "508370": 53, "5084e": 114, "509407e": 53, "5095": 90, "5098": 90, "509838": [40, 53, 92], "50984": 53, "50p": 99, "51": [36, 40, 71, 73, 80, 90, 92, 94, 105, 112], "5108": 102, "511": 83, "511116": [40, 53, 92], "512": [36, 105], "512625": 53, "512649": 92, "512745": 90, "513222": 94, "513301": 53, "513348": 114, "513597": 92, "5136": [91, 93], "513861": 94, "514858": 94, "515447": 90, "515561": 92, "515619": 90, "5163": 90, "516672": 101, "5169": 114, "517530": [40, 53, 92], "518": 67, "518190": [40, 53, 92], "5185": 103, "518792": 111, "519219": 92, "52": [40, 66, 71, 73, 75, 80, 90, 92, 94, 101, 112], "5206e": 114, "5208": 53, "520806": [40, 53], "5212": 102, "521915": 90, "522": [58, 84], "52335": 85, "524174": 90, "524346": 94, "524609": [40, 53, 92], "525": 67, "525535": 92, "526": 109, "526316": 114, "528": 80, "529": 80, "52934": 102, "53": [66, 71, 72, 73, 75, 80, 89, 90, 92, 94, 102, 109, 112], "530": 80, "530186": 101, "530233": [40, 53, 92], "531651": 53, "531686": 92, "531951": 92, "531954": 94, "5321": 93, "532292": 94, "532341": 94, "532405": 94, "532486": 94, "532587": 94, "53259": [87, 91], "532594": 94, "532710": 94, "532783": 40, "532859": 94, "533042": 94, "533046": 90, "533266": 94, "5333": 92, "533540": 92, "533543": 94, "533581": 92, "5337": 93, "533890": 94, "5340e": 114, "534133": 111, "5343e": 114, "534494": 92, "534787": 111, "534830": [40, 53, 92], "535940": 90, "53625": 105, "536769": 92, "5371": [82, 102], "537132": 85, "53769": 93, "537702": 40, "538100": 94, "539": 86, "539061": 40, "539157": 53, "54": [24, 53, 71, 72, 73, 75, 79, 82, 90, 92, 94, 97, 98, 102, 105, 112], "540158": 92, "540432": 92, "541341": 92, "5424e": 114, "542712": 53, "543340": 94, "54343e": 111, "544252": 90, "546395": 92, "54643": [85, 102], "5471": [89, 102], "547407": 90, "547672": [40, 53], "547695": 53, "548039027963846": 100, "54821": [85, 91, 94], "548210": 94, "548335": 94, "5485": 91, "548714": 53, "548776": 114, "548897": [40, 53, 92], "549050633182624": 100, "5491": 103, "54928": 90, "5494e": 114, "54971": [58, 81, 84, 86, 87, 88, 93], "55": [24, 26, 53, 71, 72, 73, 75, 80, 82, 90, 94, 97, 98, 102, 105, 112, 114], "550181": 92, "550336": 92, "5556": 83, "5565": 93, "5569": 26, "557": 93, "557224": 114, "5585": 83, "558625": 90, "559201": 86, "56": [40, 71, 72, 73, 74, 75, 80, 90, 92, 102, 105, 112], "5600": 90, "56012": 114, "560527": 90, "5617": 90, "562": 102, "5635": 40, "563842": 53, "5639": 103, "56394874111798": 100, "563988": 53, "5644": 40, "565213": 92, "566346": 90, "5668": 40, "56699e": 85, "5675": 40, "56761": 93, "5679": [81, 112], "568284": 53, "568473": 92, "568694": 101, "568741": 92, "5691": 53, "569147": 53, "57": [71, 72, 73, 75, 80, 90, 92, 105, 109, 111, 112], "570": [58, 84], "570059": [40, 53, 92], "57006": 53, "570195": 92, "5703": 40, "570392": 92, "57051": 90, "570638": 40, "5707": 92, "5716": 92, "571905": 92, "572910": 92, "5737": 92, "5743": 92, "574954402759186": 100, "575": [75, 103], "5750e": 114, "575444": 92, "576": 75, "577": 75, "577232": 53, "5778": 92, "578": [72, 75], "578640": 101, "5786e": 114, "578779": 92, "578785": 53, "578947": 114, "5789e": 114, "579": 75, "579061": 53, "579309e": 53, "579977": 94, "58": [45, 53, 71, 72, 73, 80, 90, 92, 97, 99, 101, 112], "580": 75, "580161": 53, "580996": 90, "5812": 83, "581280": 92, "581449": 53, "5815e": 114, "582148": 94, "5824": 73, "5825": 73, "5826": [73, 93], "582622": 90, "5827": 73, "582732": 101, "5828": 73, "583037": 92, "583408": 53, "583812": 92, "584": 72, "5840": 40, "584092": [40, 53, 92], "5841": 40, "5851": [40, 86], "5851034416908067": 86, "585470": 92, "5855": 99, "586104": 53, "586671": 40, "586764": 92, "586899": 53, "5878e": 114, "588398": 53, "588454": 92, "58901": 53, "5892": 40, "5894": 112, "5896": 40, "58977": 53, "59": [24, 26, 53, 71, 73, 75, 80, 82, 90, 92, 97, 99, 102, 112], "59022": [58, 81, 84, 93], "59062": 91, "5907": 91, "5915": 83, "59169": 53, "5917": 92, "5919": 92, "59192": 53, "59240": 53, "592486": 36, "59250": 53, "5927": 93, "59270": 53, "5928": 92, "593": 72, "59380": 53, "59388": 53, "59405": 53, "59410": 53, "59418": 53, "59423": 53, "59424": 53, "594240": 92, "594252": 94, "59450": 53, "59452": 53, "59466": 53, "59480": 53, "59483": 53, "595075": 92, "595345": 94, "596027": [40, 53, 92], "5968": 92, "5972": [58, 81], "5973": [81, 112], "597333": 92, "597360": 92, "5974": [92, 99], "597537": 92, "5976": 99, "598631": 92, "5988": 100, "59964": 87, "599998": [40, 53, 92], "5a": [36, 113, 114], "5e": 41, "5e10": 41, "5f": [38, 105], "5p": [53, 99, 105], "6": [23, 24, 25, 26, 36, 39, 40, 41, 45, 51, 53, 55, 58, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115], "60": [53, 71, 72, 73, 80, 89, 90, 99, 104, 112, 114], "6000": 114, "600000": [40, 53, 92], "6001": 114, "6010": 99, "601877": 53, "6020": 99, "60207e": 85, "6021": 99, "6031": 114, "603571979020907e": 85, "60357e": 85, "603762": 104, "605072": 94, "605298": 94, "606076": 92, "6071": 99, "607594": 94, "607753": [40, 53, 92], "6081": 99, "609020": 104, "6094": 103, "60943815695771": 100, "609576": 91, "609644": 53, "60992": 83, "609999": 92, "61": [53, 71, 72, 73, 74, 80, 90, 92, 94, 98, 99, 105, 112], "6105": 101, "6111": 93, "612861": 111, "613490": 92, "614100": 104, "614215": 53, "614328": 53, "614500": 92, "614774": [40, 53, 92], "615627": 94, "616773": 92, "616962": 40, "617061": 53, "617496": [40, 53, 92], "618827": 104, "618866": 90, "62": [24, 53, 72, 73, 74, 80, 82, 90, 92, 97, 98, 112], "620760": 53, "620810": 94, "621487": 40, "6219": 101, "6223": 92, "622346": 92, "623": [0, 102], "623007": 94, "623215": 92, "623493": 92, "624047": 94, "624385": 101, "624612": 114, "624766": 40, "624932": 92, "625": [53, 75, 76, 77, 98, 102], "625135": [40, 53, 92], "625918": 114, "626": [53, 75, 76, 77, 98, 102], "62609": 93, "627": [53, 75, 76, 77, 98, 102], "627241": 114, "62748": 91, "62760": 41, "628": [53, 75, 76, 77, 98, 102], "628546": 92, "629": [53, 75, 76, 77, 98, 102], "629923": [40, 53, 92], "629979": 114, "63": [24, 53, 71, 72, 73, 74, 75, 80, 82, 90, 97, 102, 111, 112], "630": [53, 75, 76, 77, 98, 102], "630107": 92, "630416": 86, "631": [40, 53, 68, 73, 75, 76, 77, 95], "631579": 114, "631658": 92, "631707": 111, "632": [53, 75, 76, 77], "63293": [58, 81, 84, 93], "633": [40, 53, 68, 75, 95], "633297": [40, 53], "6333": 91, "633975": 53, "634": 95, "634133": 92, "63481": 93, "635": 95, "636": 95, "6362e": 114, "636585": 104, "636738": 92, "636824": 94, "637": 95, "6374e": 114, "63753270521631": 100, "637974": 94, "638": [72, 73, 95], "6382e": 114, "638965": 101, "639": [72, 95], "639254": 53, "6397": 93, "64": [22, 45, 52, 53, 71, 72, 73, 74, 75, 80, 90, 112], "640": 95, "640600": 53, "641": [24, 95], "642": 95, "643": 95, "64338": 93, "643486": 114, "644253": 92, "645588": 94, "645928": 94, "64597": 91, "646": 72, "646145": 53, "646386": 92, "646778": 90, "647": [87, 90], "647357e": 53, "647435": 114, "647957": 111, "648526": 92, "64857": 93, "64953": [58, 81], "649792": 92, "64bit": 22, "65": [53, 66, 71, 72, 73, 74, 75, 80, 83, 90, 94, 98, 102, 104, 112, 114], "6504": 40, "6507": 93, "65144e": 85, "652": 72, "652061": 92, "652433": 94, "653841": 94, "6555": 92, "655505": 90, "65553270521631": 100, "6557": 40, "656993": 90, "657": [72, 90], "658": [67, 90], "6582": 40, "658280": 90, "658877": 94, "6589": [89, 102], "66": [53, 66, 71, 72, 73, 74, 80, 83, 90, 94, 109, 112], "6600": 40, "660062": 92, "6601": 99, "661027": 92, "662": 72, "663454": [53, 92], "663455": 40, "6635": 101, "6636": 40, "663906": 104, "66419": 93, "66444": 93, "664555": 90, "664572": 101, "665343": 92, "6656": 93, "665994": [40, 53, 92], "666": 72, "668": 72, "668075": 92, "669": 90, "669248": 53, "669273": 92, "6692e": 114, "66944": 110, "6695": 93, "669535": 53, "67": [71, 72, 73, 80, 90, 105, 109, 112], "671509": 92, "671683": [40, 53], "672": 90, "6724": 40, "67356": 91, "674494": 94, "675": 86, "675099": 92, "6756": 93, "677129": 114, "678519": 53, "6794": 40, "679549": 94, "68": [24, 71, 72, 73, 80, 82, 90, 97, 102], "680": 72, "680069": 92, "6807": 101, "681088": 90, "68127": 90, "681272": 90, "681590": 53, "681610": 40, "6821": 83, "6828": 40, "683203": 90, "683430": 104, "6838": 40, "684035": 92, "684211": 114, "684468": 94, "684798": 104, "685": 72, "685484": 90, "685638": 92, "685671": 101, "6861": 40, "686331": 92, "6869": 91, "687": 26, "6874": [58, 81, 84, 93], "6893": 114, "689491": 53, "6897": 90, "689858": 111, "69": [24, 71, 72, 75, 80, 82, 90, 101, 111], "691": 72, "6911e": 114, "691739": 92, "691981": 94, "692": 72, "69218": 93, "692395": 92, "6929": 114, "692972": [40, 53, 92], "693": 72, "693474": 92, "694": 72, "6942": 101, "695": 72, "696405": 92, "696436": 94, "696463": 94, "6984": 65, "698455": [40, 53, 92], "6992": [106, 109], "699200": 107, "699613": [40, 53, 92], "6h": 98, "6h3": 98, "6th": 71, "7": [24, 26, 36, 38, 40, 45, 51, 53, 55, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 116], "70": [58, 71, 72, 73, 80, 84, 90, 104, 114], "700127": 40, "700506": [40, 53, 92], "7006": 101, "701328046505673e": 105, "7019": 101, "70208e": 111, "70237": 93, "703143": 92, "7031e": 114, "703528": 53, "704160": 92, "7045": 93, "7061e": 114, "706210": 53, "706224": 107, "707174": 104, "707237": 94, "708305": 92, "7086": 101, "708655": 111, "709678": 91, "7098": 101, "71": [24, 71, 73, 80, 81, 90, 105, 109], "7101e": 114, "7112": 101, "711280": 112, "7121": 101, "71245": 102, "712628": 53, "71278789630378": 100, "7128": [88, 103], "713393": 53, "7140": 101, "714725": 91, "715126": 92, "715959": 40, "716": 90, "7164e": 114, "717000": 90, "7172": 101, "7173": 101, "7174": 101, "71803": 93, "718473": 94, "718841": 90, "72": [58, 67, 71, 72, 73, 80, 82, 90], "720195": 101, "7207": 102, "7211": 101, "721110": 114, "721723": 92, "721804": 90, "7226": 101, "7229": 101, "72327": 91, "7234": 101, "723457": 101, "723982": 53, "7243": 101, "72437": 114, "725": 94, "7270": 101, "727158": 53, "727370": 101, "727556": 94, "727824": 114, "729581": 101, "73": [24, 67, 71, 72, 73, 75, 80, 82, 90, 97, 101, 102], "7301": 93, "7305": 101, "7306": 101, "731143": 94, "7314": 101, "7322": 93, "732604": 114, "733043": 94, "733258": 53, "733607": 53, "7337": [58, 81, 84, 93], "7341": 112, "734178": 90, "734309": 92, "734847": 114, "735": 90, "7354": 91, "736126": 92, "7365": 80, "7366": 80, "7367": 80, "7368": 80, "736842": 114, "73685e": 111, "7369": 80, "7370": 80, "737759": 104, "737847": 92, "739347": 101, "739457": 53, "739679": 94, "74": [65, 66, 67, 71, 72, 80, 90, 102], "7406": 80, "7407": 80, "740783": 94, "7408": 80, "7409": 80, "7410": 80, "7411": 80, "741190": 53, "741916": 92, "742225": 40, "742254": 94, "742510": 92, "742696": 92, "743051": 92, "7435": 71, "7436": 71, "7437": 71, "743725": 40, "7438": 71, "7439": 71, "7440": 71, "744039027963847": 100, "744563": 92, "744566": 92, "746067031224108": 100, "7461": 103, "747050": 92, "747455": 94, "7475": 93, "749354": 101, "75": [72, 80, 90, 92, 104, 105, 109, 111, 114], "750665": 104, "750x300": 42, "750x600": 42, "751753": 90, "752940": 90, "754576": 94, "7549": 102, "756056": 94, "756986": 87, "757596": 53, "758041": 92, "7584": [87, 88], "76": [71, 72, 73, 75, 80, 82, 90, 91, 101], "760592": 90, "760728": 101, "761051": 40, "761385": 92, "761769": 94, "762": 67, "762106": 92, "765132": 92, "765545": 92, "766": 67, "766103": 94, "766169": 53, "766382": 114, "767061": 90, "767366": 94, "767577": 94, "768052": 94, "768444": 92, "7685": [26, 102], "768998": [40, 53, 92], "77": [71, 72, 90, 92], "770": 72, "770508": 90, "771": 72, "771207": 53, "771940": 92, "772": 72, "772173": 92, "773": 72, "773525": 53, "774": 72, "774003": 101, "774262": 92, "775": [72, 89], "775387": 92, "7754": 92, "775454": 40, "7755": 114, "7757": 90, "7759": 90, "776295": [40, 53, 92], "776379": 53, "778": 90, "778752": 101, "778984": 94, "779484690731437": 100, "7795": 103, "7799": 99, "78": [38, 71, 73, 80, 90, 105, 109, 111], "780169": 92, "780763": 92, "781193": 94, "781567": 94, "781670198487245": 100, "782235": 104, "782723": 92, "782760": 101, "782813": 40, "783208": 92, "783374": 92, "7833e": 114, "784041": 101, "7852e": 114, "785520e": 53, "785874": [53, 92], "785875": 40, "786": 86, "787857": 90, "788035": 53, "789": 90, "789097": 90, "789474": 114, "79": [75, 80, 90, 94, 99, 102], "791583": 92, "79189": [86, 91], "791894": 94, "7923": [26, 102], "793606": 92, "794168": 86, "796036": 101, "79671": 89, "7971": 99, "797178": 90, "797462": 92, "797944": 90, "798": [58, 81, 84, 93], "799090": 40, "799376": 53, "7996e": 114, "7h": 98, "7sa1": [57, 75, 83], "8": [0, 24, 36, 39, 40, 42, 53, 58, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115], "80": [24, 58, 71, 73, 75, 80, 82, 84, 90, 94, 97, 99, 102, 104, 114], "800000": [40, 53, 92], "800003": [40, 53, 92], "80034": 53, "800343": [40, 53, 92], "800847": 53, "801": 73, "801076": [40, 53, 92], "801767": 53, "8019": 93, "802": 94, "8029e": 114, "803": 73, "803028": 111, "803215": 114, "804292": 94, "804882": 92, "805074": 53, "8053": 102, "805673": 91, "805813": 94, "806361": 90, "8065e": 114, "806703": 53, "806890": 40, "807": 90, "8070966851826593": 86, "807238": 90, "808384": 92, "808935": 90, "809064": [40, 53, 92], "809601": 90, "81": [24, 53, 66, 71, 79, 80, 82, 90, 97, 98, 102, 112], "810351": 92, "810452": [40, 53, 92], "8105": 53, "811": 67, "811189": 94, "812": [82, 102], "812486": 90, "8125": 90, "812753": 94, "813341": 94, "813593": 90, "814718": [40, 53, 92], "815839e": 53, "815961": 114, "816": 92, "817883": 90, "818": 102, "8182e": 114, "818511": 90, "819129": 92, "819417": 53, "819473": 101, "82": [71, 72, 73, 80, 90, 94, 101, 112], "820047": 92, "8204": [26, 102], "820661": 92, "820779": 53, "821351": 92, "82426": 88, "824760": 92, "825": 40, "825062": 94, "825340e": 53, "827": [80, 83], "827007": 90, "82722": 99, "827446": 40, "827783": 92, "828126": 92, "828136": 90, "828605": 53, "829": [53, 92], "829589": 53, "829930": 101, "83": [24, 53, 71, 75, 80, 82, 90, 97, 98, 102, 109], "830": 53, "830321": 92, "830962": 94, "831": [36, 53, 80], "831925": 104, "832": [53, 80], "832609": 53, "833": [53, 80], "833333": [38, 58, 84], "833780": 92, "833982": 94, "834074": 94, "8341": [58, 81, 84, 93], "83498": 87, "835": 53, "836": 53, "83634": 93, "836463": 53, "836895e": 53, "837": [53, 80], "837995": 94, "838": [40, 53, 80], "838181": 53, "838422": 53, "838606": 92, "839": [53, 80], "8393e": 114, "84": [71, 72, 75, 90, 98, 99], "840": 53, "841": 53, "841436": [40, 53, 92], "8416": 92, "842": 92, "842105": 114, "842352": 92, "843168": 94, "8435": 91, "844028": 92, "8445": 102, "844606": 92, "844615": 114, "844929": 111, "845": 53, "8455": 93, "845992": 94, "846281": 90, "8465": 111, "846805": [40, 53, 92], "846993": 94, "847": 90, "8471895210066125": 87, "84719": 87, "84748": 93, "847938": 94, "847973": 90, "85": [58, 71, 72, 73, 80, 90, 94, 104, 114], "8500e": 114, "850485": 101, "850748": 90, "851": 40, "85177": 93, "851858": 90, "8521": 93, "852145": 94, "852774": [40, 53, 92], "8534": 111, "853984": 107, "854d": 71, "855330": 92, "855355": 90, "855642": 90, "855937": 92, "856": 114, "85613": 90, "8585": 93, "859426": 53, "859784": 94, "86": [90, 105], "860013": 92, "860815": 92, "86089": 91, "861008": 107, "861278": 94, "8614": 91, "8616": 103, "86160072175123": 100, "8617": 114, "861715": 90, "861870": 111, "862433": [40, 53, 92], "862524": 92, "8626": [26, 102], "863389": 91, "865778": 40, "865922": 92, "866246": 90, "866311": 92, "866319": [40, 53, 92], "8666": 93, "866713": 94, "866724": 92, "867677": 92, "8686": 111, "87": [80, 90, 97, 105], "870466": 92, "870863": 101, "870887": 92, "8715": 93, "872254": 94, "8741": 103, "87411762727878": 100, "874906": 92, "8750": 111, "875548": 94, "875671": 86, "875872": [40, 53, 92], "877039027963846": 100, "877224": 91, "877626": [106, 107, 109], "878013": 107, "878155": 90, "878366": [40, 53, 92], "878401": 107, "878640": 112, "878785": 53, "878788": 107, "879": 107, "879143": 114, "879176": 107, "879364": 94, "87955": 93, "879551": 90, "879910": 94, "88": [24, 58, 71, 72, 75, 80, 82, 84, 90, 97, 102, 109], "88047": 93, "8805": 91, "880519": 94, "880770": 104, "881119": 94, "881634": 53, "881839": 92, "882135": 92, "88331": 91, "883830": 92, "8847": 91, "885102": 94, "8851e": 114, "885362": 92, "885470": 53, "886": [90, 92], "8863": 111, "8872": 111, "887233": 92, "888000": 94, "88803": 114, "888535": 53, "8888": 52, "889": 86, "889372": [40, 53, 92], "8894": 111, "8895": 111, "8898": 111, "88985958968847": 100, "8899": 103, "889959": 90, "89": [24, 71, 80, 90, 91, 99, 105], "890": 92, "8908": 111, "891062": 94, "891111": 53, "8914": 111, "891585": 114, "89289": 93, "892950": 104, "8936": 93, "894323": 90, "894737": 114, "8949": 111, "895": [40, 71], "89526": 93, "8953": 91, "895676": 94, "896125": 92, "896407": 101, "896560": 101, "897328": [40, 53, 92], "897562": 53, "898056": 92, "898571": 90, "898634": 90, "89895": 91, "899": 40, "899257": 92, "8993": 92, "899327": 53, "8999e": 114, "8f": 105, "8s9dz": 102, "9": [0, 24, 36, 39, 40, 42, 53, 58, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 104, 105, 109, 110, 111, 112, 114, 116], "90": [24, 71, 72, 80, 90, 101, 104, 114], "900": 67, "900181": 90, "900211": 94, "901393": 53, "901480": 92, "901951": 94, "902056": 92, "902059": 92, "903129": 114, "903695": 92, "903734": 94, "903780": 92, "90428": 91, "905": 73, "90568e": 111, "905869": 91, "906": [73, 92], "9061": 93, "906496": 90, "907": [92, 114], "907295": 90, "907480": 94, "907750": 92, "907880": 101, "908117": [40, 53, 92], "908280": 53, "909": 90, "9098": 93, "909819": 92, "91": [40, 71, 73, 80, 90, 105], "910358": 92, "910379": 53, "910475": 101, "910901": 114, "911014": 94, "91114": [58, 84], "911262": 40, "9115": 103, "911542134040474": 100, "911613": 92, "911765": 92, "912": 92, "912373": 53, "9125e": 114, "913012": 40, "913235": 94, "913551": 101, "914063": 53, "914822": 107, "915": 40, "915210": 107, "915247": 90, "915597": 107, "915985": 107, "916": 40, "916013": 90, "916372": [106, 107], "916957": 92, "91791": 93, "9183": 102, "919": 92, "92": [72, 73, 90, 97, 101, 102], "920036": 101, "92025": 88, "92034": 91, "920343": 94, "920920": 53, "921264": 101, "922": 40, "923033": 92, "923522": 114, "9243": 93, "9264": [81, 83], "926489": 101, "92681": 90, "926811": 90, "926889": 53, "927851": 53, "928": 40, "928689": 40, "929": 83, "93": [71, 72, 73, 75, 90], "9304": 93, "930932": 53, "930998": 101, "932": 73, "932310": 53, "934648": 101, "9353": 93, "935577e": 53, "9359": 26, "9361": 93, "93668": [58, 81, 84, 93], "937170": 92, "9375": 103, "937516": 101, "93752746353058": 100, "937622": 94, "938": 105, "938171": 101, "938407": 94, "939363": 101, "94": [24, 53, 71, 72, 73, 75, 82, 90, 94, 97, 98, 101, 105], "940040": 53, "940301": 94, "940949": 92, "941": 73, "941213": 92, "94164": 93, "9417": 65, "942263": 101, "9428": [58, 81, 84, 93], "942912": 92, "94306": 90, "9437": 102, "9443e": 114, "944653": 101, "945670198487242": 100, "945872": 40, "946": 89, "946217": 109, "946295": 114, "946776": 92, "94698": 90, "947316": 94, "947368": 114, "947445": 40, "9477": 114, "948842": 92, "949": 92, "95": [71, 72, 73, 80, 90, 104, 109, 111, 114], "950": 105, "950224": 90, "950609": 92, "950679": 91, "9526": 93, "9535": 102, "953834": 94, "955": 73, "955030": 101, "9551": 102, "955313": 90, "9570e": 114, "958": 40, "958099": 111, "9594": 90, "96": [24, 73, 75, 80, 82, 90, 94, 101, 107, 111], "960": 73, "9606": 51, "961059": 92, "962": 67, "962069": 101, "962216": 94, "9626": [58, 81, 84, 93], "964084": 92, "9650e": 114, "965713": 92, "9659e": 114, "966007": 53, "966370": 40, "966376": 104, "966568": 90, "96806": 93, "968491": 92, "968531e": 53, "969358": 92, "969359": 114, "969441": 53, "969876": 40, "969899": 92, "9699": 93, "97": [71, 73, 80, 90, 97, 107, 111], "97075": 93, "9708": 93, "970833": 53, "971": 73, "971205": 114, "9717": 53, "971886": 92, "972": 93, "9721": 53, "9723": 93, "9727": 90, "972916": 114, "973497": 94, "974279": 90, "97428": 90, "974929": 92, "975309": 53, "9761399609273567": 105, "976172": 53, "976288": [40, 53, 92], "977": [40, 73], "978": 73, "979311": 114, "979606": 90, "979680": 92, "98": [24, 40, 53, 66, 71, 72, 73, 75, 76, 77, 78, 80, 82, 90, 98, 101, 102, 107, 111], "980": 73, "980140": 90, "980451221216327": 105, "980599": 94, "98086": 90, "980860": 90, "981": 73, "981224": 94, "9818": [58, 81, 84, 85, 86, 87, 88, 93], "981879": 90, "982": [73, 114], "982017": 94, "982462": 90, "982953": 90, "983": 73, "983872": [40, 53, 92], "984": 73, "98437": 90, "984808": 93, "985": 73, "98505": 93, "9851": 53, "9852": 93, "985261": 114, "9854": 53, "9857": 53, "986925": 90, "9871e": 114, "9879": 53, "98831": 93, "9886": 53, "988778": 53, "99": [36, 40, 53, 71, 72, 73, 90, 92, 104, 105, 107, 109, 111], "99007": 93, "990231": 101, "990282": 94, "990427": 92, "99157": 90, "991572": 90, "9915e": 114, "992328": 53, "9924": 53, "992494": 90, "9926": 53, "993019": 92, "993368": 53, "9935": 53, "9936": 53, "9939": [53, 93], "993921": 114, "9939e": 114, "994574": 40, "9947": 53, "994749": 92, "995": 73, "9950": 53, "9955": 53, "9957": 53, "996": 73, "996188": 92, "9967": 53, "997": 73, "997195": 53, "9972763590251836": 105, "997407": 53, "997531": 53, "9976": 53, "997e": 85, "998": 73, "99815": 91, "998281": 90, "9986": 53, "999": [73, 98], "999562": 92, "9996": 92, "999742": 90, "A": [0, 1, 2, 3, 22, 23, 24, 25, 26, 28, 31, 34, 36, 39, 40, 41, 42, 45, 50, 57, 66, 71, 73, 74, 75, 76, 77, 78, 79, 90, 95, 98, 99, 100, 102, 106, 108], "AND": 0, "AS": 0, "ASE": 114, "And": [0, 40, 53, 72, 76, 90, 95, 104, 105, 112, 114, 116], "As": [0, 24, 34, 36, 39, 42, 45, 64, 70, 71, 74, 88, 89, 91, 92, 93, 94, 102, 105, 106, 107, 109, 111, 113, 114, 115], "At": [0, 38, 39, 52, 75, 93, 101, 104, 105, 106, 114], "BE": 0, "BUT": 0, "BY": 0, "Be": [24, 52, 54, 71, 72, 73, 74, 102, 104], "Being": 43, "But": [0, 39, 45, 48, 86, 87, 88, 111, 112], "By": [1, 23, 24, 28, 36, 38, 41, 42, 45, 81, 90, 96, 99, 102, 103, 105, 106, 107, 108, 109, 112, 113, 114], "FOR": 0, "For": [0, 3, 4, 23, 24, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 53, 58, 65, 69, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115], "IF": 0, "IN": [0, 36], "If": [0, 1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 65, 68, 75, 76, 77, 78, 79, 81, 89, 90, 92, 93, 94, 95, 97, 101, 102, 104, 109, 111, 113, 114], "In": [0, 1, 2, 24, 28, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 52, 58, 62, 63, 65, 67, 69, 71, 72, 73, 74, 75, 79, 80, 81, 83, 84, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "It": [0, 24, 28, 31, 33, 36, 38, 39, 40, 41, 45, 47, 48, 51, 52, 54, 65, 68, 71, 72, 73, 74, 76, 80, 82, 85, 86, 87, 88, 90, 91, 95, 99, 101, 102, 105, 106, 107, 108, 109, 110, 114, 116], "NO": 0, "NOT": [0, 36, 48], "No": [0, 71], "Not": [45, 52, 74], "OF": 0, "ON": 0, "OR": 0, "On": [36, 47, 105], "One": [42, 61, 66, 70, 71, 105, 109], "Or": [36, 39, 40, 42, 48, 53, 82, 85, 89, 93, 95, 102, 105], "SUCH": 0, "Such": 24, "THAT": 47, "THE": [0, 47], "TO": 0, "The": [0, 1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 58, 59, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "Then": [42, 45, 114], "There": [2, 3, 24, 36, 39, 41, 42, 47, 48, 52, 53, 65, 66, 71, 72, 75, 77, 78, 79, 80, 82, 89, 92, 94, 95, 98, 99, 101, 104, 105, 108], "These": [0, 4, 22, 23, 24, 26, 31, 36, 38, 39, 40, 41, 42, 45, 47, 48, 52, 57, 62, 65, 69, 80, 81, 84, 89, 90, 94, 100, 101, 102, 104, 106, 108, 111, 114], "To": [26, 34, 36, 39, 40, 42, 44, 45, 47, 52, 53, 58, 65, 69, 71, 80, 81, 82, 83, 89, 90, 93, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114], "With": [45, 116], "_": [114, 115], "_1": 51, "_5": 51, "__": 57, "__1": 3, "__all__": [36, 45], "__fixed__atoms__": 71, "__fixed__getitem__": [71, 74], "__from_select_result": 74, "__init__": [71, 74], "__is_chain_class": 71, "__len__": [23, 24], "__orig__atom": 71, "_atom": 95, "_infer_bo_and_charg": 0, "_mm": 26, "_modulestub": 33, "_name": 95, "_phi_": 115, "_residu": 95, "_system": 26, "_unit": 26, "a0a538r8y3": 65, "aabox": 34, "aabox0": 34, "aabox1": 34, "aarch64": 47, "ab": [107, 115], "abbrevi": [39, 44], "abi": 36, "abil": [36, 60, 96, 109], "abl": [24, 36, 52, 63, 82, 102, 105], "abort": 36, "about": [0, 22, 23, 24, 36, 39, 43, 45, 48, 71, 90, 93, 94, 95, 97, 102, 104, 105, 109], "abov": [0, 1, 22, 23, 24, 26, 31, 36, 39, 40, 42, 45, 47, 52, 54, 58, 59, 68, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116], "absolut": [25, 28, 36, 41, 50, 62, 101, 102, 104, 107, 111], "absolute_mass": 94, "absolute_numb": 94, "abstract": 51, "abus": 43, "abyu": 116, "abyu_spher": 116, "ac": [0, 36, 40, 53, 58, 65, 68, 74, 75, 76, 77, 78, 79, 82, 84, 92, 95], "acceler": [0, 23, 24, 31, 36, 50, 51, 53, 62, 95, 99], "accept": [23, 24, 25, 36, 41, 43, 44, 45, 46, 47, 48, 65, 94, 105, 109], "access": [0, 1, 3, 24, 28, 33, 36, 38, 42, 47, 57, 58, 66, 69, 72, 73, 74, 75, 80, 83, 84, 85, 89, 97, 98, 100, 101, 104, 106], "accessmodifieroffset": 44, "accident": [22, 45, 52], "accompani": [41, 47], "accord": [2, 3, 23, 24, 31, 34, 40, 48, 94, 102], "account": [28, 36, 39, 42, 43, 52, 109], "accumul": [33, 114], "accur": [33, 63, 102, 105], "accuraci": [63, 104], "achiev": [25, 34, 36, 38, 45, 75, 94, 105, 108, 113, 114], "acid": [39, 72, 75], "acm": 0, "across": [24, 28, 31, 33, 34, 36, 37, 39, 42, 45, 47, 50, 53, 55, 58, 59, 75, 76, 82, 104, 106], "act": [23, 31, 35, 36, 38, 43, 75, 101, 102, 107], "actinid": 24, "action": [0, 36, 43, 45, 47, 52], "activ": [36, 45, 47, 48, 52, 55, 56, 95, 109, 114], "actual": [1, 3, 23, 24, 28, 36, 39, 40, 42, 85, 89, 95, 103, 109], "acut": [22, 34], "ad": [0, 1, 2, 23, 24, 28, 35, 36, 38, 42, 44, 45, 46, 47, 48, 67, 69, 82, 83, 90, 92, 93, 101, 103, 108, 112, 113, 114, 116], "adapt": [36, 43, 105, 115], "add": [1, 2, 3, 23, 24, 25, 28, 31, 33, 36, 42, 44, 45, 46, 49, 52, 60, 61, 80, 82, 83, 85, 90, 95, 96, 101, 102, 110, 111, 112, 114, 115, 116], "add_annihilate_stag": 2, "add_charge_scale_stag": [2, 101], "add_column": 33, "add_decouple_stag": 2, "add_forc": 2, "add_hydrogen": [28, 97], "add_lev": [2, 3], "add_link": 1, "add_morph_stag": [2, 101], "add_perturbable_molecul": 3, "add_prefix": 1, "add_restraint_index": 3, "add_row": 33, "add_shared_properti": [31, 36], "add_stag": [2, 103], "add_suffix": 1, "addannihilatestag": 2, "addbond": 116, "addchargescalestag": 2, "addcollectivevari": 116, "adddecouplestag": 2, "added_mol": 44, "added_molecul": 44, "addedmol": 44, "addforc": [2, 114, 115, 116], "addglobalparamet": [115, 116], "addit": [3, 23, 24, 25, 26, 31, 33, 36, 40, 41, 42, 45, 52, 69, 73, 81, 85, 86, 87, 88, 90, 93, 94, 99, 101, 106, 112, 113, 116], "addition": [28, 42], "addlev": [2, 3], "addlink": 1, "addmorphstag": 2, "addperbondparamet": 116, "addperturbablemolecul": 3, "addprefix": 1, "address": [34, 43], "addrestraintindex": 3, "addstag": 2, "addsuffix": 1, "addtors": 115, "adjust": [36, 110], "adopt": [36, 105], "adrian": 51, "advanc": [37, 43, 62], "advantag": [90, 113, 114], "advic": 45, "advis": 0, "af": 65, "affect": [0, 2, 36, 39, 80, 101, 102, 104, 105, 107], "after": [0, 3, 20, 24, 25, 33, 36, 44, 45, 52, 69, 93, 94, 105, 106, 115, 116], "ag": 43, "again": [3, 36, 39, 45, 47, 65, 76, 77, 78, 79, 83, 84, 91, 98, 99, 101, 105, 114], "against": [22, 23, 24, 31, 36, 39, 40, 42, 45, 48, 90, 94, 109], "againt": 40, "agre": 36, "agreement": [104, 105], "aid": [25, 105, 110], "aim": [28, 36, 45, 47, 48, 88], "aip": 51, "akma": [32, 36, 41], "al": [39, 71], "ala": [24, 28, 39, 40, 42, 53, 58, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 112, 113, 114, 115], "ala49": 24, "ala49_0": 24, "ala_mol": 45, "aladdin": 0, "aladip": [39, 42, 58, 75, 76, 77, 78, 79, 84, 89, 91, 92, 93, 96], "alanin": [39, 40, 55, 63, 74, 83, 95, 102, 112, 113, 114], "albeit": [23, 24], "alchem": [36, 50, 51, 53, 55, 62, 102, 104, 105], "alchemistri": 104, "alchemlyb": [22, 25, 31, 36, 53, 105], "alder": [55, 63], "alert": 36, "algebra": [2, 4, 51, 84, 85, 86, 87, 88], "algorithm": [0, 24, 25, 36, 38, 42, 51, 80, 94, 96, 104, 106, 109, 112], "alia": [21, 23, 64], "align": [0, 3, 9, 22, 23, 24, 31, 34, 36, 37, 43, 90, 95, 109, 112], "align_mol_shap": 109, "align_to0": 24, "align_to1": 24, "alignto0": 24, "alignto1": 24, "aliphat": [39, 53, 98], "alkali": 24, "alkali_earth_met": 24, "alkali_met": 24, "alkaliearthmet": 24, "alkalimet": 24, "all": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 52, 53, 54, 57, 58, 59, 66, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116], "all_ala49": 24, "all_metadata": 1, "allman": 44, "allmetadata": 1, "alloc": [3, 36], "allow": [0, 1, 2, 4, 22, 24, 28, 36, 38, 52, 63, 80, 90, 95, 101, 102, 104, 105, 109, 113, 114], "allowshortifstatementsonasinglelin": 44, "almost": [36, 41, 47, 102, 104, 115], "alon": 91, "along": [34, 36, 41, 61, 71, 93, 104, 113, 114, 115, 116], "alongsid": [36, 114], "alpha": [3, 34, 36, 101, 107, 108, 109, 111], "alpha0": [109, 111, 112], "alpha1": [109, 111, 112], "alpha_i": 108, "alpha_j": 108, "alphafold": 20, "alreadi": [1, 24, 25, 28, 31, 32, 36, 45, 47, 48, 52, 54, 65, 75, 80, 82, 89, 97, 112, 113, 114], "also": [0, 1, 2, 3, 23, 24, 26, 28, 31, 33, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 53, 58, 59, 60, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116], "alter": 0, "altern": [24, 41, 45, 82, 96, 101, 102, 109], "alternate_nam": [24, 109], "alternatenam": 24, "although": [24, 45], "alwai": [24, 36, 39, 41, 48, 52, 70, 71, 75, 89, 95, 102, 103, 108, 113], "am": [22, 34], "amazingli": 0, "amber": [0, 23, 34, 36, 38, 40, 50, 51, 58, 69, 70, 84, 95, 114, 116], "amberangl": [10, 23], "amberbond": [10, 23], "amberdihedr": [10, 23], "amberdihpart": [10, 23], "amberinpcrdfil": 114, "amberparam": 58, "amberprm": [21, 36], "amberprm7": 36, "amberprmtopfil": [114, 116], "amberrst": [21, 36, 40], "amberrst7": 21, "ambertool": [36, 51, 116], "ambertraj": [21, 40], "ambertyp": [36, 58, 82, 84, 106], "ambertype0": 106, "ambertype1": 106, "ambigu": [36, 42, 97], "ambit": 36, "amd": 52, "amid": [79, 88], "amino": [39, 72, 75], "amongst": 57, "amount": [22, 23, 24, 31, 33, 42, 64, 70, 81, 94, 99, 105, 107, 108], "amp": 41, "amper": 41, "amu": 25, "an": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 53, 56, 57, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 85, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116], "anaconda": [36, 45, 47, 48, 55, 56], "anaconda_upload": 52, "analys": [36, 53, 55, 90, 94, 104, 114], "analyse_freenrg": 36, "analysi": [25, 34, 36, 40, 51, 90, 93, 104, 114], "analyt": [36, 102, 111], "anchor": 102, "andersen": [36, 38], "angl": [3, 10, 17, 22, 23, 24, 25, 26, 28, 31, 32, 34, 36, 38, 40, 41, 50, 53, 55, 57, 58, 59, 82, 84, 85, 87, 88, 91, 92, 99, 102, 105, 106, 107, 109, 110, 111, 115], "angle0": [22, 106], "angle1": [22, 106], "angle2": 22, "angle_k": [107, 111], "angle_s": 107, "angleid": [23, 77], "angstrom": [1, 17, 22, 32, 34, 36, 38, 41, 80, 85, 89, 90, 93, 94, 113, 116], "ani": [0, 1, 2, 4, 20, 21, 23, 24, 25, 26, 28, 31, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115], "ani2x": 114, "ani2xeml": 114, "anim": 42, "annihil": [2, 12, 25, 36, 55, 62, 108], "annot": 109, "announc": 47, "anoth": [1, 22, 24, 25, 34, 36, 39, 52, 60, 61, 70, 71, 72, 73, 74, 75, 76, 80, 81, 90, 93, 97, 98, 99, 108, 109, 111], "answer": [42, 43], "anticip": 36, "antonia": 51, "anyon": [0, 24, 44, 54], "anyth": [0, 3, 22, 23, 24, 28, 31, 33, 36, 41, 47, 54, 76, 77, 78, 79, 104, 105], "anywher": [34, 54], "apach": [0, 46], "apart": [25, 102], "api": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 36, 37, 45, 54, 101], "app": [71, 74, 114, 115, 116], "appear": [3, 24, 36, 43, 45, 48, 71, 85, 97, 101, 108, 110], "append": [2, 23, 24, 101, 102, 104, 105, 116], "append_stag": [2, 101], "appendix": 34, "appendstag": 2, "appl": 36, "appli": [3, 22, 23, 24, 25, 28, 31, 36, 38, 43, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 99, 102, 105, 107, 111, 113], "applic": [0, 36, 95], "apply_reduc": [23, 24, 31, 36, 81, 91], "appoint": 43, "appreci": [0, 44], "approach": [34, 99, 102, 113, 115, 116], "appropri": [0, 25, 30, 32, 36, 40, 43, 47, 74, 95], "approx": 45, "approx_equ": [14, 27, 39], "approx_great": [14, 27, 39], "approx_greater_equ": [14, 27, 39], "approx_less": [14, 27, 39], "approx_less_equ": [14, 27, 39], "approx_not_equ": [14, 27, 39], "approxim": [37, 41, 80], "approximatlei": 39, "ar": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 52, 53, 54, 56, 57, 58, 59, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "arbitrari": [36, 66, 72, 73, 74, 89, 107], "arch": 36, "archiv": [36, 52], "arcsin": 2, "area": 107, "aren": [23, 24, 31, 36, 38, 42, 44, 94, 105], "arent": 34, "arg": [22, 23, 24, 25, 26, 28, 31, 33, 39, 42, 72, 75, 80, 90], "arg0": [2, 24], "arg1": [1, 2, 3, 21, 22, 23, 24, 34], "argument": [22, 23, 24, 25, 26, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 45, 52, 57, 58, 65, 67, 68, 71, 72, 73, 74, 75, 81, 90, 93, 95, 96, 101, 102, 105, 109, 110, 112, 113, 114, 115, 116], "argv": 33, "aris": 0, "arithmet": [2, 23, 38, 58, 84], "arm": 0, "arm64": [36, 45, 47, 52], "aromat": [24, 42], "aromatic_bond": 24, "aromaticbond": 24, "around": [22, 34, 35, 36, 41, 42, 78, 87, 88, 93, 94, 96, 101, 102, 105, 113, 114, 116], "arrai": [1, 3, 20, 22, 24, 30, 34, 36, 90], "arrang": [57, 88, 104], "articl": 51, "as_arrai": 1, "as_boolean": 1, "as_doubl": 1, "as_integ": 1, "as_new_molecul": [24, 25, 111, 112], "as_search": [23, 24, 97, 98], "as_str": 1, "as_unit": 1, "asa": 44, "asaboolean": 1, "asadoubl": 1, "asanarrai": 1, "asaninteg": 1, "asastr": 1, "asaunit": 1, "ascend": 105, "ascii": [34, 36, 40, 70], "ash": [75, 80], "ask": [44, 45, 48, 51, 55, 71, 81, 90, 97, 101, 105], "asn": [72, 75, 80], "asp": [39, 42, 72, 73, 75, 80], "aspect": 55, "assert": [1, 23, 24, 33, 34, 45], "assert_contain": [23, 24], "assert_contains_metadata": [1, 24], "assert_contains_properti": [1, 24], "assert_has_metadata": [23, 24], "assert_has_properti": [23, 24], "assert_import": [18, 33], "assert_is_lj_paramet": 23, "assert_same_molecul": [23, 24], "assert_same_s": 34, "assert_single_molecul": 24, "assert_valid": 1, "assert_valid_index": 34, "assertcontain": [23, 24], "assertcontainsmetadata": [1, 24], "assertcontainsproperti": [1, 24], "asserthasmetadata": [23, 24], "asserthasproperti": [23, 24], "assertisljparamet": 23, "assertsamemolecul": [23, 24], "assertsames": 34, "assertsinglemolecul": 24, "assertvalid": 1, "assertvalidindex": 34, "assig": 82, "assign": [1, 2, 3, 21, 22, 23, 24, 25, 34, 36, 42, 45, 50, 58, 71, 72, 73, 74, 75, 82, 105], "assignstereochemistryfrom3d": 42, "associ": [1, 2, 4, 20, 21, 24, 25, 31, 36, 41, 45, 50, 58, 85, 86, 87, 88, 95, 102, 106, 107], "assum": [2, 22, 23, 24, 26, 30, 31, 34, 36, 38, 40, 48, 52, 55, 56, 75, 95, 103, 112, 113], "assumpt": 36, "atm": [38, 41], "atmospher": [36, 41], "atom": [3, 4, 11, 21, 22, 23, 24, 25, 26, 28, 31, 32, 34, 36, 37, 38, 40, 41, 42, 44, 50, 53, 55, 57, 58, 59, 61, 62, 65, 66, 67, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100, 105, 106, 107, 111, 112, 113, 114, 115, 116], "atom0": [23, 24, 85, 86, 87, 88, 105, 109], "atom1": [23, 24, 85, 86, 87, 88, 105, 109, 116], "atom2": [23, 86, 87, 88, 116], "atom3": [23, 87, 88], "atom_align": 109, "atom_fram": 90, "atom_idx": 24, "atom_map_hydrogen": 109, "atom_restraint": 23, "atomcharg": [58, 98, 100, 106], "atomchir": 98, "atomcoord": [44, 58, 81, 84, 93, 100], "atomcoordmatch": 36, "atomeditor": 24, "atomel": [58, 98, 100], "atomfloatproperti": [58, 82], "atomhybrid": 98, "atomic_numb": 114, "atomid": [4, 23, 24, 28, 71, 76, 77, 78, 79, 109], "atomidmatch": [25, 28], "atomidx": [11, 23, 24, 26, 36, 39, 71, 75, 76, 77, 78, 79, 109, 116], "atomindex": 42, "atomintproperti": 98, "atomlj": 58, "atommap": [11, 23, 24, 25, 28, 31, 36, 40, 112], "atommass": [58, 98], "atommatch": [11, 24, 25, 28, 39, 53, 97, 98], "atommatchm": [11, 24, 39, 98], "atommcsmatch": [25, 28], "atomnam": [11, 24, 39, 44, 71, 72, 73, 74, 76, 77, 78, 79, 94, 109], "atomnum": [11, 24, 39, 71, 76, 77, 78, 79, 116], "atompair": [106, 110], "atompdbresidueinfo": 36, "atomproperti": [24, 36, 81], "atomradii": [36, 58], "atomrestraint": 23, "atoms0": [23, 24, 26, 102, 103], "atoms1": [23, 24, 26, 102, 103], "atomselect": [23, 24], "atomstringproperti": [58, 82], "atomtyp": [36, 39, 58, 82, 84, 106], "atomtype0": 106, "atomtype1": 106, "atomveloc": 58, "attach": [24, 28, 104, 111], "attack": 43, "attain": 36, "attempt": [2, 3, 23, 24, 31, 33, 36, 39], "attent": 43, "attr": 3, "attribut": 3, "aug": 36, "aunit": 23, "author": [0, 1, 2, 21, 22, 23, 24, 34, 44, 51], "authoris": 47, "auto": [0, 1, 2, 3, 23, 24, 31, 36, 38, 41, 45, 68, 99], "auto_add": 1, "auto_align": 94, "auto_bonds_factor": 36, "auto_bzip": 33, "auto_commit": [25, 36], "auto_constraints_factor": 38, "auto_fix_minimis": 24, "auto_reduc": [23, 34], "auto_rot": 34, "auto_unzip": 20, "autoc": 41, "autoformat": [36, 44], "autoformatt": [44, 45], "autograd": 114, "autom": [36, 42, 47, 51, 109], "automat": [0, 1, 2, 20, 23, 24, 25, 28, 31, 34, 36, 38, 40, 41, 42, 45, 47, 48, 50, 52, 57, 67, 68, 74, 90, 91, 93, 94, 95, 96, 97, 99, 101, 104, 105, 110], "autowrap": 24, "avail": [0, 21, 28, 33, 36, 38, 42, 43, 45, 47, 48, 51, 52, 65, 69, 71, 72, 73, 74, 82, 95, 99, 101, 104, 107, 108, 109, 114], "averag": [23, 24, 31, 40, 42, 90, 105], "avoid": [0, 28, 34, 36, 39, 44, 45, 94, 108], "avx": [0, 36], "awai": [24, 36, 92, 106, 110], "awar": 109, "ax": [22, 90, 107, 111], "axi": [0, 22, 24, 34, 89, 93, 107], "azur": [0, 36], "b": [23, 34, 36, 44, 45, 73, 102, 104, 105], "b_unit": 23, "back": [2, 3, 23, 24, 26, 31, 36, 40, 41, 45, 47, 48, 75, 81, 82, 88, 91, 95, 99, 106, 114], "backbon": 42, "backend": [95, 113, 114, 116], "background": [23, 24, 28, 36, 37], "backgroundcolor": 42, "backslash": 71, "backward": [36, 47, 48, 100, 104], "bad_alloc": 36, "balanc": 40, "ball": 42, "ball_and_stick": [23, 24, 42], "ban": 43, "bank": 70, "bar": [36, 41, 104, 105], "bariami": 51, "barn": 0, "barostat": [23, 24, 31, 38], "barostat_frequ": [23, 24, 31, 38], "base": [0, 1, 2, 3, 4, 23, 24, 25, 28, 29, 31, 34, 36, 38, 39, 40, 41, 42, 44, 47, 48, 50, 53, 58, 63, 68, 70, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 96, 99, 101, 105, 108, 109, 113], "basedonstyl": 44, "basi": 34, "basic": [39, 93], "bath": 102, "bbox_to_anchor": [90, 107], "bbsrc": 0, "bear": 44, "becaus": [36, 39, 40, 41, 42, 48, 52, 68, 71, 72, 73, 74, 75, 80, 81, 82, 84, 89, 90, 91, 92, 94, 95, 97, 102, 104, 105, 106, 109, 110, 111, 114], "becom": [36, 40, 47, 48, 101, 105, 109], "been": [1, 2, 3, 21, 22, 24, 25, 28, 31, 33, 34, 35, 36, 42, 45, 47, 48, 52, 53, 54, 63, 65, 67, 69, 71, 74, 75, 80, 84, 85, 86, 87, 88, 89, 90, 93, 97, 99, 101, 102, 105, 106, 112], "befor": [23, 24, 36, 39, 44, 45, 46, 47, 48, 71, 92, 93, 94, 95, 97, 98, 102, 105, 111, 112, 115], "began": 36, "bege": 36, "begin": [36, 53], "begun": 36, "behav": [36, 58, 72, 73, 74, 75, 80, 81, 83, 105], "behavior": 43, "behaviour": [36, 40, 69, 74, 97], "behind": [4, 45], "being": [0, 24, 28, 31, 34, 36, 38, 39, 41, 42, 45, 47, 48, 63, 71, 94, 95, 99, 100, 102, 103, 111], "bellememan": 36, "belong": [39, 72, 73, 74], "below": [0, 28, 36, 38, 39, 41, 44, 45, 49, 104, 114, 115, 116], "ben": 111, "benefici": 114, "benefit": [0, 90, 105], "benzen": 111, "best": [39, 40, 41, 43, 76, 77, 78, 79, 82, 86, 87, 88, 102, 105, 108, 109], "beta": 34, "better": [36, 39, 45, 80, 94, 101, 108, 114, 115], "between": [0, 2, 3, 4, 22, 23, 24, 25, 26, 28, 31, 34, 36, 38, 39, 40, 41, 42, 47, 51, 53, 59, 60, 61, 62, 71, 76, 77, 78, 79, 84, 90, 92, 94, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116], "beyond": 34, "bfactor": 42, "bgcolor": [23, 24, 36, 42], "bgf": 36, "bia": 34, "bias": [34, 113, 115], "bias_torsion_phi": 115, "bias_torsion_psi": 115, "big": 24, "big_molecul": 44, "bigmolecul": 44, "bin": [45, 52], "binari": [0, 1, 4, 21, 30, 36, 40, 52, 70, 100], "bind": [25, 36, 62, 101, 102, 112, 114], "bio": 39, "bioinformat": 95, "biolog": [24, 36, 39], "biological_el": 24, "biologicalel": 24, "biomolecular": [50, 51, 95], "biosim": [0, 36], "biosimspac": [3, 36, 37, 45, 47, 50, 51, 52, 60, 100, 104, 105, 106], "biosimspace_system": [100, 104, 106, 107], "biosimspace_to_sir": [3, 7], "bit": [40, 50, 90, 100, 109], "bla": 36, "black": [23, 24, 42, 44, 45], "blank": 44, "bld": [47, 52], "bleed": 48, "blob": 52, "block": [28, 36, 40, 99, 101, 104, 115], "block1": 40, "block2": 40, "block3": 40, "blog": [0, 35, 46, 98], "blow": [36, 102], "blue": [24, 42], "boa": [36, 52], "bodi": [36, 43, 47], "bohr": 41, "boltzmann": [24, 104], "bond": [3, 10, 13, 23, 24, 25, 26, 28, 31, 36, 37, 38, 40, 42, 50, 53, 55, 57, 58, 59, 75, 80, 82, 84, 86, 87, 88, 89, 91, 92, 96, 97, 98, 99, 105, 106, 107, 108, 109, 110, 111, 114, 116], "bond0": 106, "bond1": [106, 116], "bond2": 116, "bond_cursor": 94, "bond_fram": 90, "bond_k": 107, "bond_length": 107, "bond_order_radiu": 24, "bondi": 58, "bondid": [23, 24, 76], "bondord": [11, 24, 36, 85], "bondorderradiu": 24, "bondrestraint": [10, 23, 102, 103], "bonds_fram": 90, "bonu": 47, "bool": [1, 2, 3, 21, 22, 23, 24, 25, 27, 28, 31, 32, 33, 34], "boolean": [25, 38, 82, 106], "boost": [3, 22, 34, 36], "boresch": [13, 26, 36], "boresch_restraint": 102, "boresch_restraint_1": 102, "boreschrestraint": [26, 102], "bosisio": 51, "both": [0, 3, 24, 25, 26, 28, 36, 39, 40, 41, 42, 43, 51, 68, 71, 72, 73, 74, 75, 80, 89, 90, 92, 94, 100, 101, 105, 106, 108, 111], "bottleneck": 36, "bottom": [26, 36, 42], "bound": [72, 83, 114], "boundari": [4, 24, 28, 31, 34, 36, 39, 42], "bounding_spher": 83, "box": [23, 24, 28, 31, 34, 36, 37, 38, 40, 90, 100, 111, 114, 116], "box0": 34, "box1": 34, "box_angl": 36, "box_matrix": 34, "box_vector": 3, "boxmatrix": 34, "boxvector": 3, "bracket": [36, 39, 41], "bradlei": 36, "branch": [36, 44, 46, 47, 48, 52], "bratholm": 0, "break": [34, 36, 45, 48, 62], "breakbeforebrac": 44, "bridg": 39, "bring": 0, "bristol": [0, 36], "broken": [2, 21, 24, 31, 42, 52, 106], "brownian": 38, "browser": [42, 45], "bruno": 0, "bsd": [0, 46], "bsd3": 0, "bsl": 0, "bss": [41, 52, 95, 100, 106, 107], "bss_mol": 95, "bss_sy": 95, "bss_system": 95, "bubbl": 102, "buffer": [33, 36], "bug": [0, 36, 40, 45, 46, 47, 48, 54], "bugfix": [36, 48], "build": [24, 28, 36, 40, 45, 47, 48, 56, 80, 104], "build_sir": 52, "built": [0, 2, 36, 39, 40, 41, 44, 45, 47, 51, 52, 61, 80, 84, 90, 95, 96, 112], "bundl": [0, 36], "bunit": 23, "burden": 45, "burman": 51, "busi": 0, "button": [40, 42, 92], "bw": 115, "bypass": 114, "byte": [1, 40], "bz2": [28, 52, 65, 68, 74], "bzip2": 20, "c": [1, 2, 3, 4, 21, 22, 23, 24, 27, 28, 32, 34, 36, 37, 38, 39, 40, 42, 46, 47, 50, 51, 53, 58, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 104, 105, 109, 111, 112, 114], "c1": [71, 94, 95, 97, 98, 105, 109, 110], "c10": 98, "c1ccccc1": 97, "c1oc": 95, "c2": [71, 94, 95, 97, 98, 105, 106, 107, 109, 110, 111], "c3": [71, 73, 97, 109, 110, 111], "c4": [71, 73, 97, 106, 107, 109, 110, 111], "c4d51f89": 71, "c5": [71, 73, 97, 98, 109, 110, 111], "c6": [71, 73, 97, 98, 111], "c7": 98, "c_compil": 52, "c_unit": 23, "ca": [2, 4, 23, 24, 29, 31, 36, 39, 53, 58, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 92, 94, 97, 98, 101, 102, 103, 108, 111, 112], "cach": [0, 1, 28, 36, 40], "cache_dir": 1, "cache_root": 40, "cachedir": 1, "cadenc": 48, "caffein": 28, "cairosvg": [42, 96], "cal": 41, "calabro": 51, "calc_angl": 34, "calc_dihedr": 34, "calc_dist": 34, "calc_dist2": 34, "calc_dist_vector": 34, "calc_inv_dist": 34, "calc_inv_dist2": 34, "calcangl": 34, "calcdihedr": 34, "calcdist": 34, "calcdist2": 34, "calcdistvector": 34, "calcinvdist": 34, "calcinvdist2": 34, "calcium": 24, "calcul": [0, 3, 4, 22, 24, 25, 26, 28, 31, 34, 35, 36, 37, 38, 39, 42, 50, 53, 59, 61, 62, 63, 81, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 104, 105, 106, 108, 109, 111, 113, 115, 116], "calculate_rmsd": 0, "calendar": 48, "call": [1, 2, 3, 4, 22, 23, 24, 25, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 45, 47, 52, 53, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112], "callabl": 113, "callback": [36, 113, 114, 115], "calori": 41, "came": 0, "camelcas": 45, "camera": 42, "can": [0, 1, 2, 3, 4, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "cancel": 108, "cannot": [3, 22, 24, 28, 32, 33, 38, 39, 69, 97], "canon": [23, 24, 31, 38], "cap": 36, "capabl": [36, 47, 90, 96, 115], "capit": 81, "capitalcas": 36, "captur": [23, 24], "carbon": [36, 39, 40, 42, 53, 58, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98, 100, 102, 105, 109], "care": [24, 36, 71, 72, 73, 74, 102, 104, 105, 108, 111], "carlo": 25, "cartesian": [19, 23, 24, 28, 31, 34, 38, 104], "cartoon": [23, 24, 36, 42], "case": [1, 2, 24, 28, 32, 34, 36, 38, 39, 41, 42, 45, 48, 52, 53, 65, 67, 68, 69, 71, 74, 75, 76, 79, 80, 81, 83, 84, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "case_sensit": 28, "cast": 1, "castxml": [0, 36], "catals": 116, "catch": 36, "caus": [0, 3, 25, 36, 39, 52, 85, 86, 87, 88, 97, 101, 102, 105, 106], "cb": [24, 53, 58, 71, 72, 73, 74, 76, 78, 80, 82, 84, 85, 86, 87, 90, 92, 98, 102, 112], "cbx": 74, "cc": 0, "cc1ccccc1": 95, "ccp": [0, 36], "cd": [0, 45, 48, 52, 71, 73, 80, 114], "cd1": [71, 72, 73], "cd2": 71, "ce": [71, 80], "ce1": 71, "ce2": 71, "ce3": 71, "cell": [34, 42, 71, 72, 74], "cell_matrix": 34, "cellmatrix": 34, "celsiu": [36, 38, 41], "center": [22, 23, 24, 31, 33, 34, 36, 37, 38, 39, 40, 77, 81, 83, 88, 89, 90, 93, 94, 102, 113, 114, 115], "center_of_geometri": 89, "center_of_mass": 83, "centimet": 41, "central": [2, 34, 42, 77, 78, 79, 88, 94, 97, 100, 106, 109], "centralcach": 36, "centroid": 23, "centroid_restraint": 23, "centroidrestraint": 23, "certain": [34, 69], "cfg": 36, "cg": 71, "cg1": [71, 72, 73], "cg2": [71, 72, 73], "cg_atom_idx": 24, "cgatomidx": [24, 36], "cgid": [23, 24], "ch": 39, "ch2": 71, "ch3": [24, 53, 58, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 92, 97, 98, 102], "ch4": 109, "chain": [11, 23, 24, 28, 31, 36, 37, 55, 57, 58, 66, 72, 76, 77, 78, 79, 80, 85, 112, 116], "chaineditor": 24, "chainid": [4, 23, 24, 28, 73], "chainidx": [11, 24, 39, 73, 76, 77, 78, 79], "chainnam": [11, 24, 39, 73], "chainproperti": 24, "chainpropertyproperti": 83, "challeng": 101, "chamber": 36, "chang": [0, 1, 2, 3, 23, 24, 31, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 52, 61, 69, 82, 85, 89, 91, 93, 94, 95, 97, 101, 104, 105, 107, 109, 110, 112, 113, 114], "change_length": 94, "change_s": 94, "change_volum": 34, "changed_angl": [3, 106, 109, 111], "changed_atom": [3, 106, 109, 111, 112], "changed_bond": [3, 106, 107, 109, 111], "changed_constraint": [3, 106, 110], "changed_except": [3, 106], "changed_tors": [3, 106, 109, 110, 111], "changelog": 47, "changevolum": 34, "channel": [36, 45, 47, 52, 114], "chapter": [34, 36, 58, 59, 60, 61, 62, 71, 82, 85, 86, 87, 106, 107], "char": [1, 2, 3, 21, 22, 23, 24, 34], "characterist": 43, "charcoal": 82, "charg": [1, 2, 3, 31, 32, 36, 37, 41, 42, 50, 58, 81, 82, 84, 96, 97, 100, 101, 105, 106, 107, 108, 109, 111, 113, 114, 116], "charge0": [100, 106, 109, 110, 111, 112], "charge1": [100, 106, 109, 110, 111, 112], "charge_scal": 107, "charge_scaled_annihil": 2, "charge_scaled_decoupl": 2, "charge_scaled_morph": 2, "charges_mm": [113, 114], "charmm": [36, 40, 50, 70], "charmmpsf": [21, 36], "charnlei": 0, "cheap": 63, "cheat": 36, "cheatsheet": [23, 24, 31, 90], "check": [21, 23, 24, 26, 28, 36, 41, 45, 47, 54, 69, 101, 105, 107, 109, 112], "check_for_h_by_ambertyp": 38, "check_for_h_by_el": 38, "check_for_h_by_mass": 38, "check_for_h_by_max_mass": 38, "checked_offset": 22, "checkedoffset": 22, "checkout": [45, 47, 52], "chem": [95, 97, 102], "chemic": [24, 37, 51, 75, 76, 77, 78, 79, 88, 98, 105], "cheminformat": 95, "cheml": 114, "chemrxiv": 102, "chg": 1, "child": [2, 33, 36], "child_tot": 33, "children": [2, 36], "chiral": [36, 97, 98], "chlorid": 96, "chlorin": 39, "choic": [38, 41, 95, 96, 99, 109, 116], "chol": 67, "cholesterol": [65, 67, 68, 85], "choos": [23, 24, 31, 36, 37, 39, 40, 47, 50, 52, 95, 99, 100, 101, 105, 106, 114, 116], "chosen": [32, 34, 38, 41, 42, 95, 100, 104, 105, 106], "christoph": [1, 2, 21, 22, 23, 24, 34, 51], "chryswood": [36, 47, 49], "ci": [0, 36, 45, 48], "cif": [57, 65, 70, 95], "circular": [28, 36], "circumst": 43, "cit": [72, 73], "cite": 51, "cl": [36, 39, 80], "claim": 0, "clamp": 2, "clang": [36, 44, 52], "clangxx": 52, "clarifi": 43, "clark": 51, "clash": [45, 94], "class": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 28, 31, 33, 34, 36, 39, 40, 41, 45, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 89, 91, 95, 100, 101, 106, 109], "clean": [36, 40, 52], "cleaner": 52, "clear": [1, 2, 31, 32, 33, 36, 41, 44, 45], "clear_default_unit": [17, 32, 41], "clear_energy_trajectori": 31, "clear_properti": 22, "clearli": 92, "clearproperti": 22, "click": [42, 92], "client": 52, "clj": [23, 107, 111], "cljff": 1, "cljnbpair": [58, 84], "cljparamet": 23, "clockwis": 34, "clone": [1, 2, 3, 21, 22, 23, 24, 31, 34, 36, 48, 52, 114], "close": [0, 34, 36, 42, 102, 108, 115, 116], "closer": [37, 115], "closest": [24, 34, 36, 37], "cloud": 36, "cluster": 0, "cmake": 52, "cmakelist": 36, "cmmotionremov": 38, "cnc": [39, 53, 97], "co": [0, 36, 58, 84], "code": [0, 1, 20, 21, 23, 24, 28, 32, 33, 38, 40, 41, 42, 46, 47, 48, 51, 54, 57, 82, 90, 95, 96, 97, 101, 104, 105, 109, 115, 116], "codebas": 36, "cofactor": 72, "coher": 34, "coku": 0, "collaborative_cal": 36, "collaps": 90, "collect": [1, 3, 4, 21, 23, 24, 35, 36, 38, 39, 40, 42, 45, 51, 66, 72, 73, 74, 75, 81, 85, 86, 87, 88, 93, 95, 96, 97, 99, 101, 105, 106, 107, 109, 116], "collinear": 102, "colnam": [90, 92], "colon": 42, "color": [23, 24, 36, 37, 82], "color_nam": [24, 82], "colour": [24, 36], "column": [3, 22, 28, 33, 36, 40, 42, 71, 92, 104, 107, 109, 111], "column0": 22, "column1": 22, "column2": 22, "columnlimit": 44, "com": [0, 36, 47, 52, 105, 114], "com_reset_frequ": [23, 24, 31, 38], "combin": [1, 3, 23, 28, 36, 37, 39, 40, 45, 48, 51, 63, 71, 72, 73, 74, 75, 80, 81, 90, 101, 107, 114, 116], "combine_arithmet": 23, "combine_geometr": 23, "combinearithmet": 23, "combinegeometr": 23, "combining_rul": [23, 38, 58, 84], "combiningrul": 23, "come": [1, 28, 36, 38, 44, 51, 105, 109], "comma": 74, "command": [44, 45, 47, 52, 64, 65, 90, 95], "comment": [43, 45], "commerci": 0, "commit": [24, 25, 36, 38, 43, 46, 47, 53, 82, 83, 85, 86, 87, 88, 93, 94, 99, 101, 102, 103, 104, 105, 109, 116], "common": [25, 28, 40, 41, 43, 45, 68, 70, 72, 80, 81, 82, 91, 95, 101, 109], "commonli": [39, 41, 81, 102], "commun": [36, 43, 51, 52, 54], "compact": 40, "compani": 51, "compar": [24, 36, 38, 39, 42, 45, 47, 52, 99, 115], "comparison": [34, 37, 80, 82, 99], "compat": [0, 1, 3, 22, 25, 28, 36, 40, 41, 46, 47, 48, 52, 53, 85, 86, 87, 88, 90, 100, 104, 110], "compens": 105, "compil": [36, 41, 45, 95, 114], "complain": 32, "complaint": 43, "complement": 84, "complet": [1, 2, 4, 24, 25, 31, 36, 39, 40, 45, 46, 47, 48, 51, 52, 53, 68, 81, 91, 95, 99, 101, 104, 113], "complex": [2, 39, 42, 50, 62, 76, 77, 78, 79, 82, 104, 105, 108], "complexvalu": 2, "compli": 34, "compliant": [36, 44, 45], "complic": 39, "compon": [0, 22, 24, 34, 36, 51, 53, 81, 89, 92, 93, 95, 99, 109], "componenta": 109, "componenta_to_componentb": 109, "componentb": 109, "compos": 36, "compound": 2, "comprehens": [36, 50], "compress": [20, 21, 28, 40, 68, 70], "compris": [36, 76, 77, 78, 79, 85, 86, 87, 88, 111], "compuat": 36, "comput": [0, 4, 23, 24, 28, 31, 36, 41, 46, 47, 51, 52, 54, 63, 65, 84, 102, 103, 104, 105, 114, 115, 116], "concat": 104, "concept": [36, 39, 62, 75, 100, 106], "concurr": 52, "conda": [0, 33, 36, 45, 47, 51, 54, 65, 90, 95, 96, 104, 109, 114], "condit": [0, 4, 21, 28, 34, 44], "conduct": [24, 25, 38, 46, 48, 51, 54], "conect": 36, "confid": 36, "confidenti": 43, "config": 52, "configur": [36, 45, 52, 59, 99], "confirm": 54, "conflict": [45, 47, 52], "conform": [24, 42, 45, 55, 63, 102], "conftest": 45, "confus": [24, 36, 39], "conjug": 2, "connect": [36, 39, 42, 58, 77, 78, 79, 82, 84, 85, 86, 87, 88, 94, 95, 98, 106, 107, 110], "connelli": 0, "consequenti": 0, "conserv": 102, "consid": [24, 36, 39, 43, 57, 113, 116], "consider": 0, "consist": [34, 36, 39, 44, 45, 104], "consol": [0, 18, 33, 36, 64], "consolid": 36, "const": [1, 2, 3, 21, 22, 23, 24, 34], "const_data": [23, 24], "constant": [2, 23, 24, 26, 36, 38, 48, 102, 106, 107, 110, 114, 116], "constdata": [23, 24], "constitu": [76, 77, 78, 79, 91], "constrain": [3, 23, 24, 25, 36, 38, 99, 102, 105, 106], "constraint": [3, 23, 24, 25, 31, 34, 36, 38, 99, 102, 106, 110, 113, 114, 115, 116], "constraint_idx": 3, "construct": [1, 3, 21, 24, 28, 41, 43, 57, 76, 77, 78, 79, 82, 83, 89, 101, 111, 112], "constructor": [36, 90], "consum": [24, 36], "contact": 43, "contain": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 40, 42, 45, 47, 48, 53, 57, 58, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 112, 113, 114, 115, 116], "content": 31, "context": [3, 24, 25, 36, 38, 95, 101, 102, 107, 113, 114], "contigu": [36, 74, 102], "continu": [24, 36, 44, 54, 95, 99, 107], "contract": [0, 37], "contrain": 105, "contrast": [40, 88], "contribt": 36, "contribut": [0, 43, 45, 49, 52, 95, 96, 108, 114], "contributor": [0, 43, 44, 46, 51], "control": [1, 2, 3, 23, 24, 31, 36, 38, 40, 41, 42, 45, 75, 90, 94, 95, 96, 97, 102, 103, 108, 110], "conveni": [24, 25, 36, 72, 85, 86, 87, 88, 96, 97, 99, 100, 114, 116], "convent": [28, 34, 36, 45, 64, 81, 104], "converg": [24, 36, 104, 105], "convergence_plot": 104, "convers": [3, 32, 36, 37, 48, 60, 95, 108, 109], "convert": [0, 1, 3, 4, 17, 21, 22, 23, 24, 25, 28, 29, 31, 32, 36, 37, 38, 50, 51, 53, 55, 60, 74, 75, 85, 86, 87, 88, 90, 93, 96, 97, 99, 101, 102, 104, 106, 109, 111], "convieni": 101, "cool": [36, 71], "cooper": 36, "coord": [34, 44, 81], "coordgroup": [19, 34], "coordgrouparrai": 34, "coordgroupbas": 34, "coordgroupeditor": 34, "coordin": [1, 2, 3, 20, 21, 23, 24, 26, 28, 31, 34, 36, 38, 39, 40, 42, 44, 50, 53, 58, 61, 68, 70, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 113, 114], "coordinates0": [100, 106], "coordinates1": [100, 106], "coords2": 36, "coords_mm": 114, "coords_qm": 114, "cope": 36, "copi": [2, 22, 24, 25, 31, 34, 36, 42, 45, 48, 50, 75, 82, 100, 102, 112, 115, 116], "copil": 36, "copy_structure_select": 95, "copyabl": 22, "copyright": 0, "core": [0, 28, 36, 52, 57, 101, 107, 108, 110, 115], "corespond": [113, 114, 115], "correct": [0, 23, 24, 26, 31, 36, 38, 40, 42, 43, 44, 52, 102, 111, 114], "correctli": [36, 41, 47, 109, 111], "correl": 113, "correspond": [2, 20, 23, 25, 34, 36, 39, 52, 77, 78, 79, 81, 82, 89, 90, 91, 101, 109, 112, 113], "corrspond": 36, "corrupt": 36, "cosin": [38, 58, 84], "cost": [36, 40, 63, 102, 105], "could": [0, 26, 31, 36, 38, 39, 40, 42, 43, 45, 48, 52, 53, 54, 59, 68, 71, 72, 75, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113], "couldn": [36, 68], "coulomb": [3, 23, 24, 25, 31, 32, 38, 40, 41, 53, 58, 84, 92, 107, 108], "coulomb_pow": [23, 24, 31, 38, 101, 108], "couloumb": 36, "count": [1, 21, 22, 23, 24, 31, 36, 37, 75, 90, 96, 108, 111], "cours": [23, 24, 31, 65, 90, 114], "coval": [24, 82], "covalent_radiu": [24, 82], "covalentradiu": 24, "covari": 22, "coven": 43, "cover": [82, 106, 111], "cpp": [24, 36, 45], "cpu": [36, 38, 113, 114, 115, 116], "cpu_pm": 38, "crash": [36, 108], "crd": [24, 28, 40, 42, 53, 58, 68, 70, 75, 76, 77, 78, 79, 83, 84, 89, 91, 93, 94, 95, 96, 97, 98, 99, 102, 113, 114, 115], "crd7": 70, "creat": [1, 3, 4, 22, 24, 25, 26, 28, 31, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55, 58, 59, 60, 62, 68, 71, 72, 73, 74, 75, 80, 82, 83, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112], "create_engin": 113, "create_from_pertfil": [12, 25, 36, 110], "create_map": [1, 5, 36], "create_quaternion": [9, 22], "createmixedsystem": 114, "createsystem": 114, "creation": [23, 24, 31, 36, 60, 62, 101], "cresset": [0, 36], "criteria": 82, "criterion": 39, "critic": 43, "cross": [4, 36], "crystal": 36, "crystallograph": 95, "crystallographi": 95, "css": 42, "ct": 58, "cube": 2, "cubic": 34, "cuda": [23, 24, 31, 38, 114], "cuda_device_id": [23, 24, 31], "cumbersom": 106, "cunit": 23, "current": [1, 2, 3, 22, 23, 24, 26, 28, 31, 32, 33, 37, 39, 40, 45, 47, 52, 68, 80, 89, 93, 95, 101, 102, 106, 113, 114, 116], "current_energi": 24, "current_kinetic_energi": 24, "current_potential_energi": 24, "current_spac": 24, "current_step": 24, "current_tim": 24, "cursor": [11, 23, 24, 31, 36, 55, 58, 83, 85, 86, 87, 88, 94], "cursorsm": [11, 24, 36], "curv": [0, 23], "custom": [2, 25, 36, 37, 42, 82, 90, 92, 107, 108, 111], "custombondforc": [107, 108, 114, 116], "customcppforceimpl": 36, "customcvforc": 116, "customis": [36, 55, 114], "customnonbondedforc": [107, 108], "customtorsionforc": 115, "cut": 36, "cutgroup": [23, 24, 34, 36], "cutoff": [1, 23, 24, 31, 34, 36, 38, 99, 105, 113, 114, 115], "cutoff_typ": [23, 24, 31, 38, 99, 105, 116], "cv": 116, "cv0": 116, "cv1": 116, "cv_val": 116, "cx": 82, "cxx_compil": 52, "cy": [72, 75, 80], "cycl": [36, 104, 115, 116], "cyx": [75, 80], "cz": 71, "cz2": 71, "cz3": 71, "d": [34, 36, 38, 39, 45, 53, 73, 99, 101, 102, 103, 104, 105, 107, 111, 113, 114, 115, 116], "d2": 99, "d_delta_f": 105, "da27affe1baf": 71, "daemon": 42, "dai": [24, 41, 99, 101, 104, 105], "dalton": 41, "damag": 0, "dat": 36, "data": [0, 1, 3, 4, 21, 23, 24, 28, 30, 31, 33, 34, 36, 40, 42, 50, 52, 59, 69, 70, 95, 100, 107], "data_sir": 95, "databas": 65, "datafram": [0, 2, 3, 22, 24, 25, 28, 31, 36, 53, 90, 92, 101, 104, 105, 106, 109, 111, 114], "datastream": 36, "date": [24, 36, 47, 52], "dcd": [8, 21, 36, 40, 69, 70, 90, 115, 116], "dcd_file": [115, 116], "dcdfile": [115, 116], "deactiv": 45, "deadlock": 36, "deal": [38, 95], "dealloc": 36, "debat": 44, "debug": [3, 24, 28, 33, 36, 40], "debugging_en": 33, "decemb": 48, "decharg": [2, 101, 108], "decharge_nam": 2, "decid": [25, 38, 47, 52, 106, 109], "declar": 24, "decompos": [36, 39], "decomposit": [22, 36], "decor": 45, "decoupl": [2, 12, 25, 36, 55, 62, 101, 102, 108], "dedic": 52, "deem": 43, "deep": 36, "deepcopi": [45, 115, 116], "deeper": 62, "def": [42, 45, 113], "default": [1, 2, 3, 22, 23, 24, 25, 26, 28, 31, 32, 36, 37, 38, 39, 40, 42, 45, 70, 73, 80, 81, 82, 83, 85, 89, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_valu": 1, "defin": [4, 23, 24, 25, 34, 36, 39, 43, 45, 46, 62, 74, 79, 88, 102, 112, 114, 116], "definit": [2, 24, 34, 36, 39], "degre": [22, 23, 24, 26, 31, 34, 36, 41, 93, 94, 102], "del": 82, "delet": [1, 23, 24, 25, 31, 36, 39, 40, 52, 69, 80, 101], "delete_all_fram": [23, 24, 31], "delete_all_token": [14, 27, 39], "delete_fram": [23, 24, 31, 90], "delete_token": [14, 27, 39, 80], "deleteallfram": [23, 24], "deletefram": [23, 24], "delta": [34, 36, 38, 94, 108], "delta_": 108, "delta_f_": [104, 105], "demand": [36, 52], "demonstr": [36, 83, 91], "demostr": 47, "densiti": 115, "dep": 52, "depend": [21, 23, 24, 28, 31, 36, 39, 40, 45, 48, 52, 72, 75, 89, 94, 95, 99, 104], "deploi": 47, "deploy": 36, "deprec": 36, "deproton": 39, "depth": 23, "der": [24, 31, 101, 107], "deriv": [0, 1, 23, 38, 39, 41, 45, 50, 57, 58, 83, 88, 96, 97, 105, 114], "derogatori": 43, "descal": 2, "describ": [0, 21, 22, 24, 28, 34, 35, 36, 38, 39, 40, 42, 44, 45, 47, 52, 53, 54, 65, 71, 90, 110, 113], "descript": [21, 22, 24, 36, 40, 47], "design": [0, 3, 4, 24, 34, 36, 40, 42, 45, 55, 56, 61, 70, 95, 100, 113], "desir": [23, 24, 31, 38, 42, 45, 52, 89, 90, 105, 114], "desktop": 52, "despit": 40, "destroi": 108, "detach": 22, "detail": [0, 36, 38, 39, 43, 45, 47, 48, 50, 53, 54, 69, 71, 80, 82, 84, 90, 95, 99, 102, 104, 113, 114], "detect": [36, 38, 40, 96], "determin": [22, 24, 25, 40, 42, 43, 90, 96], "deutsch": 0, "dev": [36, 47, 48, 52], "devel": [36, 44, 45, 46, 47, 48, 52], "develop": [0, 35, 36, 44, 46, 47, 49, 51, 52, 63, 95, 109], "deviat": [22, 90, 94], "devic": [23, 24, 31, 38, 114, 115, 116], "df": [3, 90, 101, 104, 105, 107, 111], "dft": 115, "dg_solv": 105, "dg_vac": 105, "diagon": [22, 104], "diagonalis": 22, "dial": 105, "dialanine_pmf": 115, "diari": 51, "dict": [3, 23, 24, 25, 26, 28, 31], "dictionari": [1, 3, 23, 24, 25, 26, 28, 31, 36, 38, 41, 42, 58, 71, 82, 90, 91, 99, 109, 112], "did": [36, 72, 85, 90, 92, 94, 112], "didn": 36, "diel": [55, 63], "dielectr": 38, "diff": [2, 44], "differ": [0, 1, 3, 4, 22, 23, 24, 25, 26, 28, 31, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 52, 53, 59, 61, 68, 72, 74, 75, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114], "differec": 36, "differenti": 2, "difficult": [40, 42, 47, 106, 107], "diffus": 92, "dih_scal": 101, "dihedr": [3, 10, 22, 23, 24, 25, 28, 31, 36, 38, 40, 50, 53, 55, 57, 58, 59, 79, 82, 84, 85, 86, 88, 89, 91, 92, 102, 106, 107, 115], "dihedral0": [36, 106], "dihedral1": [36, 106], "dihedral_a": 36, "dihedral_b": 36, "dihedralid": [23, 78], "dimens": [0, 1, 4, 22, 23, 24, 26, 32, 34, 36, 39, 41, 89, 90], "dimension": [0, 22, 34, 36, 41, 42, 60, 96], "dipeptid": [39, 40, 55, 63, 95, 113, 114], "direct": [0, 28, 34, 36, 59, 97], "directli": [0, 4, 23, 24, 25, 28, 30, 36, 39, 40, 42, 44, 52, 58, 65, 67, 71, 81, 90, 91, 93, 101, 102, 104, 105, 106, 107, 109, 113, 114], "directori": [1, 20, 28, 33, 36, 40, 45, 47, 52, 68, 69, 115], "dirti": 0, "disabl": [21, 23, 24, 28, 36, 38, 42, 43, 94, 105], "disable_parallel": 21, "disableparallel": 21, "disagr": 40, "disappear": [108, 110], "disclaim": 0, "discontigu": 36, "discourag": [44, 45], "discov": 97, "discuss": [0, 39, 46, 54, 96, 111], "disk": [1, 36, 40, 52, 65, 104, 114, 115], "dispers": 38, "displai": [23, 24, 42, 51], "dist": [34, 116], "distanc": [3, 4, 13, 24, 26, 28, 34, 36, 37, 41, 42, 50, 55, 59, 80, 90, 99, 103, 113, 114, 115, 116], "distance_restraint": 103, "distinct": 24, "distinguish": [23, 24], "distmat": 34, "distribut": [0, 22, 24, 25, 36, 51, 52, 94, 104], "distvector": 34, "disulfid": 90, "dive": 62, "divid": [2, 41, 42, 66, 90, 94, 104, 105], "divis": [0, 41], "dk": 0, "dna": 42, "do": [0, 3, 24, 28, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 57, 59, 60, 65, 69, 71, 72, 73, 74, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 113, 116], "doc": [36, 45, 47], "docker": [0, 36, 47, 52], "docstr": 45, "document": [0, 34, 35, 36, 40, 44, 46, 47, 48, 51, 54, 104, 114], "dodecahedron": 34, "doe": [0, 1, 2, 3, 23, 24, 33, 36, 39, 41, 45, 71, 74, 82, 91, 95, 101, 105, 109, 112], "doen": 41, "doesn": [3, 20, 23, 28, 36, 39, 40, 41, 44, 45, 68, 71, 76, 86, 87, 88, 99, 105, 107, 113, 114], "doesnt": [1, 24, 34], "doi": [36, 51], "domain": [0, 2], "domain_error": 2, "don": [1, 4, 23, 24, 28, 31, 36, 39, 40, 41, 42, 45, 47, 52, 72, 83, 86, 87, 88, 94, 100, 101, 104, 105, 109, 110, 114], "donat": 46, "done": [22, 90, 92, 109], "dont": [1, 2, 21], "doubl": [1, 2, 3, 22, 23, 24, 25, 27, 31, 32, 34, 38, 41, 42, 54, 85, 86, 87, 88, 89, 108, 111], "double_bond": [24, 85], "doublebond": 24, "down": [2, 3, 24, 34, 90, 101, 103, 111, 114], "download": [20, 28, 45, 52, 57, 65, 68, 74, 95], "downward": 39, "doxygen": 45, "dozen": 41, "draft": 47, "draw": 0, "drawn": [22, 24], "drift": [24, 25, 42], "drive": 51, "driven": [24, 36, 45], "drop": [36, 52], "dst_rest": [102, 103], "dt": [115, 116], "dtheta": 115, "dtype": [90, 114], "dual": 101, "due": [22, 36, 63, 110], "dummi": [23, 25, 36, 39, 75, 80, 100, 106], "dummy_atom_num": 36, "duplic": [3, 28, 36, 102], "duplicate_atom": [23, 24, 71], "duplicate_chain": [23, 24], "duplicate_cutgroup": [23, 24], "duplicate_residu": 72, "dure": [0, 3, 23, 24, 28, 31, 34, 36, 45, 75, 88, 90, 101, 102, 103, 105, 108, 115, 116], "dynam": [0, 3, 11, 23, 24, 25, 31, 34, 35, 36, 37, 40, 42, 50, 51, 53, 55, 60, 61, 62, 69, 90, 95, 103, 104, 105, 107, 111, 113, 114, 115, 116], "dynamic_constraint": [23, 24, 31, 36, 38], "e": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 28, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "e2e370940894315838fb8f65e141baaf07050ce0": 36, "e_charg": 41, "e_lj": 23, "each": [1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 28, 31, 34, 36, 39, 40, 41, 42, 45, 48, 54, 57, 58, 69, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 101, 102, 104, 105, 107, 109, 111, 113, 115, 116], "earlier": [21, 40, 47, 82, 105, 107, 116], "earliest": [22, 48], "earth": 24, "eas": 45, "easi": [0, 3, 24, 28, 36, 40, 45, 82, 85, 86, 87, 88, 95, 96, 105, 109, 114, 116], "easier": [24, 25, 36, 37, 40, 42, 44, 45, 47, 48, 51, 56, 59, 75, 90, 91, 99, 100, 101, 106, 107, 109, 112, 114], "easiest": [41, 42, 52, 68, 71, 72, 73, 74, 75, 99, 105], "easili": [0, 3, 36, 40, 42, 50, 52, 76, 77, 78, 79, 80, 91, 104, 113], "easy_instal": 33, "ebi": 65, "econom": 43, "edg": [42, 48], "edinburgh": [0, 36], "edit": [3, 23, 24, 31, 34, 36, 40, 43, 44, 45, 50, 51, 52, 55, 58, 85, 93, 94, 105, 109, 112], "editor": [24, 34, 36, 82], "edu": 0, "educ": 43, "eduresearchvmdpluginsmolfiledcdplugin": 21, "effect": [34, 38, 42, 103, 111, 112], "effici": [36, 40, 45, 101, 114, 115], "eigenmatrix": 0, "eigenvalu": 22, "eigenvector": [0, 22], "either": [0, 1, 2, 3, 20, 22, 23, 24, 25, 28, 31, 36, 39, 40, 42, 44, 47, 54, 65, 71, 81, 82, 83, 84, 88, 89, 90, 93, 94, 100, 101, 105, 106, 107, 108, 110, 112, 115], "elaps": 24, "elapsed_tim": 24, "elapsed_unit": 24, "elec": 108, "electron": [39, 41, 42, 43, 80, 113], "electrostat": [23, 24, 31, 36, 38, 42, 101, 105, 107, 108, 111, 113, 114, 115, 116], "element": [11, 22, 24, 36, 37, 38, 40, 42, 53, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 102, 105, 106, 114], "element0": [100, 106], "element1": [36, 100, 106], "element_with_mass": 24, "elementdata": 24, "elementdb": 24, "elementwithmass": 24, "elif": 74, "els": [2, 28, 32, 36, 54, 71, 104, 105], "email": 0, "emb": 36, "embed": [113, 114, 115, 116], "emerg": 110, "emit": 36, "eml": [55, 63, 113], "emle_forc": 114, "emlecalcul": [114, 115, 116], "emleengin": [115, 116], "emleforc": 114, "emoji": 33, "empathi": 43, "employ": 46, "employe": 46, "empow": [36, 51], "empti": [1, 3, 21, 22, 23, 24, 31, 34, 76, 77, 78, 79, 82, 109, 111, 113], "emt": 0, "en": 115, "enabl": [4, 21, 24, 33, 35, 36, 39, 42, 62, 80, 82, 89, 94], "enable_parallel": 21, "enableparallel": 21, "enclos": 34, "encod": 1, "encount": [28, 75], "encourag": [0, 45, 46, 47, 52], "end": [2, 3, 23, 24, 25, 31, 33, 36, 38, 44, 45, 48, 52, 62, 67, 71, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114], "endmdl": 67, "endors": 0, "endpoint": 115, "energi": [1, 2, 3, 4, 22, 23, 24, 25, 31, 32, 36, 37, 41, 50, 51, 53, 55, 59, 62, 85, 86, 87, 88, 94, 95, 99, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116], "energy_": 104, "energy_0": 104, "energy_1": 104, "energy_expression0": 116, "energy_expression1": 116, "energy_fast_": 105, "energy_fil": 104, "energy_frequ": [23, 24, 31, 38, 53, 101, 104, 105, 113, 114], "energy_ga": 104, "energy_gas_": 104, "energy_kj": [86, 87, 88], "energy_trajectori": [24, 25, 31, 38, 53, 101, 104, 105, 111, 114], "energy_unit": [22, 25, 31], "energy_vacuum": 105, "energy_vacuum_": 105, "energy_wat": 105, "energy_water_": 105, "energytrajectori": [9, 22, 25, 36, 101, 104, 105, 111], "enforce_symmetr": 22, "enforcesymmetr": 22, "engag": [36, 45, 48], "engin": [34, 35, 36, 48, 50, 51, 80, 91, 115], "enhanc": 36, "enjoi": 45, "enoi": 0, "enough": [102, 104, 105], "ensembl": [22, 23, 24, 31, 38], "ensur": [22, 28, 34, 36, 39, 40, 44, 45, 46, 48, 52, 71, 75, 85, 86, 87, 88, 94, 95, 101, 102, 111, 114, 116], "enterpris": 0, "entir": [0, 24, 25, 36, 39, 83, 94, 95, 112], "entiti": [2, 34], "entri": [36, 47], "entrop": 26, "enumer": 105, "env": [52, 114], "environ": [36, 40, 43, 47, 54, 55, 56, 95, 113, 114], "environment_nam": 45, "environment_sir": 114, "enzym": 116, "ep": 27, "epilson": 23, "eprint": 51, "epsilon": [3, 23, 36, 39, 58, 80, 81, 82, 107, 108, 109, 111, 114], "epsilon0": [109, 111, 112], "epsilon1": [109, 111, 112], "epsrc": 0, "equal": [2, 22, 23, 24, 31, 36, 39, 41, 80, 91, 94, 101, 102, 105, 107, 108], "equat": [2, 36, 101, 103, 107, 108, 111], "equidistribut": 0, "equil_tim": 105, "equilibium": 26, "equilibr": [36, 99, 104, 105, 115], "equilibrium": [26, 36, 102, 105, 114, 115, 116], "equival": [1, 3, 23, 24, 25, 36, 38, 39, 44, 80, 95, 106, 109, 112], "error": [3, 21, 22, 24, 33, 36, 39, 40, 41, 45, 52, 55, 68, 71, 72, 74, 82, 85, 86, 87, 88, 94, 97, 102, 104, 105], "error_on_miss": [23, 36], "error_report": 21, "errorreport": 21, "esdp": 39, "especi": [36, 41, 52, 109], "essex": 36, "estim": [36, 104, 105], "et": 71, "etc": [2, 23, 24, 25, 28, 31, 36, 37, 40, 41, 42, 45, 47, 50, 52, 57, 58, 66, 67, 69, 75, 80, 82, 89, 90, 91, 95, 99, 100, 101, 105, 106, 108], "ethan": [53, 100, 104, 105], "ethnic": 43, "evalu": [2, 3, 23, 24, 25, 31, 36, 38, 41, 51, 81, 83, 89, 90, 101, 103, 108, 111], "evaluate_xml_forc": [12, 25], "evaluatorm": [23, 24], "evalut": 101, "even": [0, 3, 24, 36, 38, 42, 44, 52, 53, 59, 69, 71, 75, 77, 78, 79, 80, 85, 86, 87, 88, 93, 97, 102, 105], "evenli": [101, 104], "event": [0, 42, 43], "eventu": 36, "everi": [2, 23, 24, 31, 36, 38, 39, 40, 41, 42, 48, 53, 69, 75, 82, 90, 91, 92, 93, 99, 101, 104, 105, 106, 113], "everyon": [0, 43, 44, 46, 48, 54], "everyth": [22, 24, 36, 39, 52, 54, 55, 105], "evolv": [44, 47], "evotec": 0, "ewald": [38, 99, 105], "ex": 2, "exact": [40, 52, 101, 104, 107], "exactli": [83, 95, 100, 101, 102, 104, 111], "exampl": [4, 23, 24, 25, 26, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 57, 58, 65, 69, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115], "exceed": 105, "excel": [0, 95, 98, 99, 104], "except": [2, 3, 23, 24, 28, 33, 34, 36, 40, 71, 74, 85, 94, 97, 100, 104, 105, 107, 111], "exception_idx": 3, "exchang": [25, 36, 51], "exclud": [36, 76, 84], "exclus": 36, "execut": [36, 45], "exemplari": 0, "exis": 2, "exist": [1, 2, 20, 24, 31, 33, 36, 39, 44, 45, 47, 68, 71, 82, 100, 101, 105, 111, 113, 114], "exist_ok": 115, "exit": [24, 40, 95], "exp": 0, "expand": [2, 4, 23, 24, 28, 33, 36, 38, 39, 40, 42, 53, 58, 68, 69, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "expans": [2, 37, 68], "expect": [36, 43, 45, 72, 73, 74, 105, 107, 111], "expens": 38, "experi": [43, 54, 104], "experienc": 39, "experiment": 36, "explicit": [22, 39, 43], "explicitli": [0, 2, 22, 36, 41, 97, 102, 103, 105], "explod": 111, "explor": [0, 36, 48, 52, 80, 107], "export": [36, 52], "expos": [36, 41, 42, 45], "express": [0, 2, 3, 6, 23, 24, 25, 28, 36, 39, 43, 68, 81, 82, 83, 84, 85, 86, 87, 88, 98, 116], "expressionbas": 2, "expresss": 2, "exscientia": 0, "extend": [0, 35, 36, 53, 58, 102], "extens": [0, 21, 28, 36, 40, 42, 44, 51, 67, 69, 96], "extent": 34, "extern": [26, 36, 102, 113], "extra": [1, 3, 36, 42, 44, 45, 47, 52, 99, 101, 106], "extract": [21, 23, 24, 25, 26, 36, 38, 39, 44, 45, 53, 85, 86, 87, 88, 95, 98, 99, 100, 102, 106, 107, 112, 114, 115, 116], "extract_perturb": [12, 25, 106, 109, 112], "extract_refer": [12, 25, 106, 109, 112], "extrem": [58, 105, 109, 113], "ey": 48, "f": [3, 24, 25, 36, 39, 40, 41, 42, 45, 52, 53, 57, 69, 86, 87, 88, 90, 95, 99, 101, 102, 104, 105, 114, 115, 116], "f1": 65, "f4f7": 71, "face": 43, "factor": [2, 3, 25, 36, 38, 41, 84, 105], "fade": [106, 110], "fahrenheit": 41, "fail": [2, 28, 36, 39, 52, 97], "failur": [24, 36, 52], "fair": 43, "faith": 43, "fall": 36, "fallback": 36, "fals": [1, 20, 22, 23, 24, 25, 28, 31, 33, 34, 36, 38, 39, 40, 42, 44, 82, 90, 94, 96, 97, 105, 106, 111, 112, 113, 115], "familiar": 114, "faq": [42, 43], "far": [0, 24, 36, 45, 71, 89, 100, 101, 102, 111, 112], "farad": 41, "faradai": 41, "fast": [0, 34, 36, 45, 99, 105, 109], "faster": [36, 55, 61, 99], "fastest": 105, "fastmbar": 115, "fault": 36, "feat": 45, "feat_nam": 52, "featur": [0, 35, 36, 46, 47, 48, 51, 52, 60, 71, 88], "feature_x": 48, "fee": 0, "feedstock": 36, "feel": [44, 45, 47, 48, 80], "feet": 41, "femtosecond": [24, 38, 99, 101, 113, 114], "fep": [36, 53, 104], "ferla": 0, "fetch": [1, 40], "few": [24, 36, 38, 39, 52, 58, 75, 85, 94, 101], "fewer": [52, 106], "fewest": [25, 94], "ff": [3, 38, 58, 84], "ff0000": 42, "field": [36, 38, 99, 113], "fifth": [24, 78, 114, 115], "figur": [0, 116], "file": [0, 3, 4, 20, 21, 24, 25, 28, 30, 31, 33, 34, 36, 37, 38, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 67, 69, 71, 74, 75, 82, 85, 86, 87, 88, 90, 93, 95, 96, 99, 100, 104, 105, 114, 115, 116], "file_handl": [115, 116], "file_test": 45, "filehandl": 33, "filenam": [3, 20, 21, 24, 25, 28, 30, 31, 40, 42, 65, 67, 68, 95, 96], "fill": [22, 36, 42], "filter": [36, 107], "fin": 107, "final": [2, 36, 38, 42, 45, 46, 47, 94, 101, 103, 105, 107, 108, 109, 111, 112, 114, 116], "find": [0, 1, 3, 20, 24, 25, 28, 31, 36, 37, 38, 42, 46, 47, 53, 54, 68, 69, 71, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 97, 99, 107, 112], "fine": [52, 94], "finish": [2, 28, 45, 48, 114], "finit": 36, "finlai": 51, "first": [2, 23, 24, 25, 26, 28, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47, 48, 52, 53, 57, 58, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116], "first_to_cent": 90, "fit": [4, 22, 24, 36, 40, 104, 105], "five": [39, 48, 75, 81, 89, 90, 92, 109], "fix": [23, 24, 31, 34, 36, 38, 39, 40, 45, 46, 47, 48, 52, 54, 61, 88, 92, 105, 107, 116], "fix_42": 36, "fix_44": 36, "fix_49": 36, "fix_49_50": 36, "fix_67": 36, "fix_88": 36, "fix_issu": 48, "fix_perturbable_zero_sigma": 36, "fixnamespacecom": 44, "fixtur": [36, 45], "fjclark": [36, 49], "flag": [36, 45], "flake8": 45, "flat": [26, 36], "flavour": 50, "flaw": 0, "flexibl": [51, 52, 58, 107, 113], "flexibli": 4, "flip": [36, 88], "float": [1, 2, 3, 22, 23, 24, 25, 27, 31, 32, 33, 34, 36, 39, 90, 101, 104, 113], "float32": 114, "float64": [90, 114], "fluorin": 39, "focus": 43, "focuss": 41, "fold": 112, "folder": [36, 45, 52], "follow": [0, 1, 2, 3, 25, 36, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 54, 55, 56, 65, 95, 108, 112, 113, 114], "fondazion": 0, "foo": 44, "foot": 41, "footer": 33, "forc": [2, 3, 4, 23, 24, 25, 26, 28, 31, 36, 40, 41, 42, 47, 70, 101, 102, 105, 106, 108, 110, 111, 113, 114, 115, 116], "force3d": 28, "forcefield": [2, 3, 4, 23, 24, 31, 36, 38, 50, 53, 58, 82, 84, 88, 95, 101, 106, 107, 110], "forcefield0": 106, "forcefield1": 106, "forcefieldinfo": [16, 31, 36, 38], "forev": [28, 46], "forg": [0, 36, 45, 47, 52, 95, 104, 109, 114], "fork": [36, 47, 48], "form": [0, 1, 2, 22, 23, 24, 34, 36, 39, 41, 45, 115], "formal": [36, 42, 50, 96], "formal_charg": 98, "format": [3, 4, 21, 22, 24, 25, 28, 30, 31, 36, 37, 38, 39, 42, 44, 45, 47, 50, 55, 56, 57, 60, 65, 67, 69, 80, 85, 86, 87, 88, 90, 96, 100, 104, 110, 114, 116], "format_descript": 21, "format_nam": 21, "format_suffix": 21, "formatdescript": 21, "formatnam": 21, "formatsuffix": 21, "fortnight": 41, "fortran": 36, "fortun": [105, 109, 112], "forward": [24, 101, 104], "forward_backward_converg": [104, 105], "foster": 43, "fouesneau": 0, "found": [0, 1, 28, 36, 38, 39, 45, 47, 71, 79, 99, 102, 113, 115], "four": [22, 28, 34, 36, 48, 73, 78, 79, 87, 88, 89, 109], "fouratomfunct": [58, 84], "fourier": 36, "fourth": [35, 36, 113, 114, 115], "fr": 0, "frac": 108, "fraction": [41, 116], "fragment": [55, 60, 112, 113], "frame": [21, 23, 24, 28, 31, 36, 37, 42, 50, 53, 59, 90, 94, 99, 101, 114], "frame_002_4": 40, "frame_004_8": 40, "frame_006_1": 69, "frame_024_48": 40, "frame_034_68": 40, "frame_040_80": 40, "frame_042_84": 40, "frame_045_90": 40, "frame_049_98": 40, "frame_056_11": 69, "frame_143_28": 69, "frame_196_39": 69, "frame_220_44": 69, "frame_301_60": 69, "frame_304_61": 69, "frame_421_84": 69, "frame_428_85": 69, "frame_frequ": [23, 24, 31, 38, 101, 104, 105, 113, 114], "frame_index": 24, "framework": [36, 51, 95, 99], "free": [0, 2, 22, 25, 36, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 62, 95, 100, 101, 102, 103, 106, 109, 111, 112, 114, 115, 116], "freedom": [23, 24, 26, 31, 36, 102], "freeenergyanalysi": 36, "freeli": 0, "freenrg": 36, "freewar": 0, "freez": [48, 102], "frequenc": [24, 36, 38, 42, 99, 105, 113, 114, 115], "frequent": [45, 105], "fresh": 52, "friction": 38, "fro": 22, "from": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 28, 30, 31, 33, 34, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "from_and_b": 23, "from_ghost": 36, "from_r_min_and_epsilon": 23, "from_rdkit": [24, 109], "from_s_d_f": 24, "from_sigma_and_epsilon": 23, "from_unit": 32, "fromaandb": 23, "fromlist": 33, "fromrdkit": 24, "fromrminandepsilon": 23, "fromsdf": 24, "fromsigmaandepsilon": 23, "front": 53, "ft": 41, "full": [20, 23, 24, 31, 36, 39, 41, 42, 45, 47, 52, 53, 65, 67, 71, 84, 85, 89, 94, 96, 101, 111, 116], "fulli": [36, 42, 45, 47, 54, 76, 77, 78, 79, 103, 108, 114], "func": [23, 24], "func_test": 45, "function": [0, 1, 2, 3, 4, 22, 23, 24, 25, 28, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47, 48, 51, 53, 58, 60, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115], "functon": 33, "fund": [0, 46], "fundement": 24, "funtion": 109, "furo": [0, 45], "further": [36, 39, 43, 48, 91, 105], "furthest": [36, 37], "futur": [31, 36, 40, 47, 48, 111, 112, 113, 114], "g": [0, 1, 2, 3, 4, 22, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 58, 59, 60, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114], "g87": [8, 21, 70], "g_per_mol": 80, "ga": [24, 34, 38, 104], "gaetano": 51, "gain": [83, 96], "gamma": [2, 34], "garbag": [36, 40], "garberoglio": 0, "gase": 39, "gatewai": 4, "gb": 52, "gb_radii": [58, 82, 84, 106], "gb_radii0": 106, "gb_radii1": 106, "gb_radius_set": [58, 82, 84], "gb_screen": [58, 82, 84, 106], "gb_screening0": 106, "gb_screening1": 106, "gcc": 36, "gccxml": 0, "gemmi": [3, 36, 51, 57, 60, 65], "gemmi_struct": 95, "gemmi_to_sir": [3, 7], "gender": 43, "gener": [0, 2, 3, 22, 24, 25, 28, 34, 36, 39, 40, 42, 45, 50, 52, 53, 80, 90, 92, 93, 94, 95, 100, 101, 104, 105, 107, 109, 110, 113], "generalis": 116, "generalunit": [1, 22, 23, 24, 25, 26, 28, 32, 36, 37], "generalunitproperti": 36, "generarilti": 113, "generate_coordin": [28, 97], "genion": 36, "geometr": [23, 39], "geometri": [31, 89, 105, 109], "get": [2, 3, 22, 23, 24, 26, 34, 36, 38, 39, 40, 41, 42, 45, 47, 52, 53, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 114, 115], "get_align": [9, 11, 22, 24], "get_all_residue_nam": 95, "get_alphas0": 3, "get_alphas1": 3, "get_angle_ks0": 3, "get_angle_ks1": 3, "get_angle_sizes0": 3, "get_angle_sizes1": 3, "get_approx_epsilon": [14, 27, 39, 80], "get_atom_index": 3, "get_biological_el": 24, "get_bond_ks0": 3, "get_bond_ks1": 3, "get_bond_lengths0": 3, "get_bond_lengths1": 3, "get_box_cent": 34, "get_charge_scales0": 3, "get_charge_scales1": 3, "get_charges0": [3, 106], "get_charges1": 3, "get_const": 2, "get_constant_symbol": 2, "get_constraint": [3, 24], "get_constraint_indici": 3, "get_coords_arrai": [8, 20, 114], "get_copies_within": 34, "get_data_head": [15, 30], "get_default": [89, 90], "get_energi": [3, 101], "get_epsilons0": 3, "get_epsilons1": 3, "get_equ": [2, 107], "get_exception_atom": 3, "get_exception_indici": 3, "get_forc": [2, 107, 114], "get_force_index": 3, "get_force_typ": 3, "get_fram": [21, 40], "get_from_ghost_idx": 3, "get_header_properti": [15, 30], "get_images_within": 34, "get_index": 24, "get_integr": 3, "get_kappas0": 3, "get_kappas1": 3, "get_label": 22, "get_labels_as_numb": 22, "get_lambda": [3, 24, 101], "get_lambda_in_stag": 2, "get_lambda_lev": 3, "get_lambda_schedul": [3, 101], "get_last_error_detail": [40, 71, 72, 74, 82, 85], "get_lev": [2, 107], "get_lever_stag": 2, "get_lever_valu": [2, 3, 101, 103, 107, 108, 111], "get_link": [1, 23, 24, 106], "get_lj_scales0": 3, "get_lj_scales1": 3, "get_log": 24, "get_max_num_thread": [4, 28], "get_min_protein_residu": [14, 27, 39, 75, 80], "get_minimum_imag": 34, "get_molecule_schedul": 2, "get_nam": 24, "get_numb": 24, "get_perturbable_constraint": 3, "get_perturbable_constraints_with_atom": 3, "get_perturbable_molecule_map": 3, "get_platform": 3, "get_platform_properti": 3, "get_potenti": 36, "get_potential_energi": [3, 101], "get_principal_ax": 22, "get_protein_residue_nam": [14, 27, 39, 75, 80], "get_radiu": 44, "get_random_point": 34, "get_restraint": 3, "get_schedul": [3, 24, 101, 107], "get_sigmas0": 3, "get_sigmas1": 3, "get_stag": 2, "get_standard_state_correct": [13, 26, 36], "get_stat": [22, 36], "get_statist": [1, 40], "get_str": 1, "get_to_ghost_idx": 3, "get_token": [14, 27, 39, 80], "get_torsion_ks0": 3, "get_torsion_ks1": 3, "get_torsion_periodicities0": 3, "get_torsion_periodicities1": 3, "get_torsion_phases0": 3, "get_torsion_phases1": 3, "get_unique_numb": 24, "getalign": [22, 24], "getalphas0": 3, "getalphas1": 3, "getangleks0": 3, "getangleks1": 3, "getanglesizes0": 3, "getanglesizes1": 3, "getatom": 95, "getbiologicalel": 24, "getbondks0": 3, "getbondks1": 3, "getbondlengths0": 3, "getbondlengths1": 3, "getboxcent": 34, "getcharges0": 3, "getcharges1": 3, "getchargescales0": 3, "getchargescales1": 3, "getcollectivevariablevalu": 116, "getconst": 2, "getconstantsymbol": 2, "getconstraintindici": 3, "getcopieswithin": 34, "getepsilons0": 3, "getepsilons1": 3, "getequ": 2, "getexceptionatom": 3, "getexceptionindici": 3, "getforc": [2, 114], "getforceindex": 3, "getforcetyp": 3, "getfram": 21, "getfromghostidx": 3, "getimageswithin": 34, "getintegr": [38, 95, 101, 115, 116], "getkappas0": 3, "getkappas1": 3, "getlabel": 22, "getlabelsasnumb": 22, "getlambdainstag": 2, "getlev": 2, "getleverstag": 2, "getlevervalu": 3, "getlink": [1, 23, 24], "getljscales0": 3, "getljscales1": 3, "getminimumimag": 34, "getmoleculeschedul": 2, "getnumatom": 95, "getparticleparamet": 114, "getperturbableconstraint": 3, "getperturbableconstraintswithatom": 3, "getperturbablemoleculemap": 3, "getplatform": [38, 95, 115, 116], "getposit": [115, 116], "getprincipalax": 22, "getradiu": 44, "getrandompoint": 34, "getrestraint": 3, "getschedul": 3, "getsigmas0": 3, "getsigmas1": 3, "getstag": 2, "getstat": [22, 95, 115, 116], "getstatist": 1, "getsteps": [115, 116], "getsystem": [38, 95, 115, 116], "gettim": 95, "gettoghostidx": 3, "gettorsionks0": 3, "gettorsionks1": 3, "gettorsionperiodicities0": 3, "gettorsionperiodicities1": 3, "gettorsionphases0": 3, "gettorsionphases1": 3, "getuniquenumb": 24, "ghost": [0, 3, 23, 24, 25, 31, 36, 38, 55, 62, 100, 106, 107, 109, 111, 112], "ghost_14ff": 36, "ghost_ghostff": 36, "gil": 36, "giovanni": 0, "git": [45, 47, 52, 114], "github": [0, 44, 45, 46, 47, 48, 49, 52, 54, 95, 105, 114], "give": [0, 24, 28, 36, 39, 40, 41, 42, 46, 51, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 90, 92, 94, 98, 103, 104, 105, 111], "given": [0, 2, 3, 23, 24, 26, 36, 38, 39, 80, 102, 105], "glh": [75, 80], "gln": [72, 75, 80], "gloabl": 101, "glob": [25, 39, 40, 68, 72, 73, 74, 75, 104, 105], "global": [2, 3, 22, 25, 30, 36, 101, 114], "glu": [72, 73, 75, 80], "gly": [72, 73, 75, 80, 112], "gmx": 36, "go": [2, 24, 36, 45, 47, 52, 69, 73, 74, 75, 94, 100, 101, 104, 105, 106], "goal": [61, 95], "goe": [2, 101], "goldberg": 0, "good": [0, 25, 38, 41, 43, 46, 47, 48, 99, 101, 102, 105, 106, 109, 115], "got": 91, "gpl": 0, "gpl3": [0, 51], "gplc3": 0, "gplv3": [0, 46], "gpu": [23, 24, 31, 38, 50, 51, 53, 62, 95, 99, 104, 114], "gracefulli": 43, "grad": 114, "grad_fn": 114, "grad_mm": 114, "grad_qm": 114, "gradient": [36, 114], "gradual": [42, 94, 107, 111], "grain": 94, "gram": [32, 41], "grammar": [32, 36, 39, 41], "grant": 0, "graph": [0, 59, 92, 99], "gratefulli": 0, "great": [45, 90], "greater": [0, 39, 80, 107], "greatli": 47, "green": [24, 42], "grid": [95, 115], "gro": [28, 38, 53, 67, 70, 80, 96, 112], "gro87": [21, 36, 67, 70], "gromac": [21, 28, 34, 36, 40, 50, 51, 69, 70, 95], "gromacs_path": 28, "grotop": [21, 36, 40, 70], "ground": 46, "group": [23, 24, 34, 36, 39, 42, 47, 76, 96, 97, 98], "group0": 34, "group1": 34, "group2": 34, "grow": 36, "grown": [36, 101], "gruntthepeon": 0, "gsl": 36, "gt": 107, "gtop": [8, 21, 70], "guarante": [3, 22, 24, 71, 75], "guard": 36, "guess": [23, 24, 28, 31, 33, 67, 99], "gui": 42, "guid": [36, 46, 52, 69, 80, 90, 102, 113], "guidanc": 0, "guidelin": 46, "gz": [57, 65, 95], "h": [0, 23, 24, 31, 36, 38, 39, 45, 51, 52, 53, 58, 67, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 93, 94, 97, 98, 100, 105, 109, 112, 114], "h1": [53, 58, 76, 77, 80, 90, 98, 102, 111], "h10": [97, 109, 110], "h11": [97, 109, 110], "h12": [97, 106, 109, 110], "h13": [106, 109, 110], "h14": [106, 109, 110], "h15": [109, 110], "h16": [109, 110], "h17": [109, 110], "h2": [53, 76, 77, 80, 98, 102, 109, 111], "h3": [80, 105, 109, 111], "h4": [105, 109, 111], "h5": [105, 109, 111], "h6": [105, 109, 110, 111], "h7": [105, 109, 110], "h7n9": 90, "h8": [97, 105, 109, 110], "h9": [97, 109, 110], "ha": [0, 1, 2, 21, 22, 23, 24, 28, 31, 33, 34, 35, 36, 39, 40, 41, 42, 44, 47, 52, 53, 58, 61, 63, 65, 67, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "had": [36, 42, 45, 80, 90, 105, 111], "half": [34, 39, 71, 101, 102, 105, 107], "halogen": [24, 39], "halx": [36, 49], "hamiltonian": 25, "hand": [0, 45, 48, 109], "handl": [1, 24, 33, 36, 40, 41, 42, 44, 46, 49, 101], "handle1": 40, "handle2": 40, "handler": 36, "hann": 51, "happen": [21, 36, 52], "happi": [22, 45, 46, 54, 107], "harass": 43, "hard": 108, "hardwar": 36, "harm": 43, "harmon": [23, 24, 26, 36, 38, 58, 84, 102, 111, 115, 116], "harmonicangleforc": 107, "harmonicbondforc": [107, 108], "hartre": 41, "has_atom_restraint": 23, "has_box_vector": 3, "has_c": 23, "has_centroid_restraint": 23, "has_coordin": 3, "has_force_specific_equ": 2, "has_lev": 3, "has_link": [1, 23, 24], "has_metadata": [1, 23, 24, 31], "has_molecule_schedul": 2, "has_properti": [1, 22, 23, 24, 31], "has_token": [14, 27, 39], "has_veloc": 3, "has_warn": 21, "hasatomrestraint": 23, "hasboxvector": 3, "hasc": 23, "hascentroidrestraint": 23, "hascoordin": 3, "hasforcespecificequ": 2, "hash": [2, 23, 24, 36, 52], "haslev": 3, "haslink": [1, 23, 24], "hasmetadata": [1, 23, 24], "hasmoleculeschedul": 2, "hasn": [31, 48, 54, 92, 97], "hasproperti": [1, 22, 23, 24], "hasveloc": 3, "haswarn": 21, "have": [0, 1, 2, 3, 21, 22, 23, 24, 25, 28, 31, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 57, 58, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113], "have_import": [18, 33], "haven": [48, 52], "havent": 24, "hb1": [24, 76, 78, 80, 112], "hb2": [24, 76, 78, 86, 112], "hb3": [24, 76, 78, 82, 86, 97, 112], "hbond": 114, "hc": 58, "hd2": 80, "header": [0, 30, 33, 36], "hear": 24, "heat": 102, "heavi": [25, 36, 38, 105], "heavier": 105, "heaviest": 94, "heavili": 25, "hedg": [34, 45, 51], "height": [42, 96], "held": [0, 3, 22, 24, 39, 41, 58, 75, 81, 85, 86, 87, 88, 101, 102, 109], "hello": 40, "help": [23, 24, 36, 39, 40, 44, 45, 46, 47, 48, 51, 52, 74, 75, 85, 86, 87, 88, 95, 96, 105, 106, 108, 109, 111], "helper": 106, "henc": [24, 48, 71, 91, 99, 101, 102, 104, 107], "here": [0, 21, 23, 24, 36, 37, 39, 40, 41, 42, 45, 48, 52, 53, 55, 56, 65, 69, 71, 76, 77, 78, 79, 81, 82, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116], "hetatm": 36, "hex": [1, 24, 42], "hex_color": 24, "hexagon": 34, "hh31": [24, 53, 58, 75, 76, 77, 78, 82, 84, 85, 86, 87, 89, 97, 102], "hh32": [24, 53, 58, 75, 76, 77, 78, 82, 84, 85, 86, 87, 97, 102], "hh33": [24, 53, 58, 75, 76, 77, 78, 82, 84, 85, 86, 87, 97, 102], "hi": [39, 72, 75, 80], "hid": [39, 72, 75, 80], "hide": [36, 100], "hie": [39, 72, 75, 80], "hierarchi": 39, "high": [22, 28, 42, 80, 85, 86, 87, 88, 95, 102, 105, 111], "higher": [3, 24, 37, 56, 101, 104, 105], "highest": [22, 40, 41], "hip": [39, 72, 75, 80, 101, 102], "hist": 0, "hist2d": 0, "histidin": 72, "histori": [31, 36, 101], "hmass": 25, "hoh": [72, 73], "hold": [1, 2, 3, 4, 21, 22, 23, 24, 25, 31, 34, 36, 40, 41, 79, 83, 84, 89, 102, 105, 109, 111], "holder": 0, "home": 52, "homogen": 44, "hood": [37, 96, 106, 109], "hope": [28, 37, 45, 47, 105], "hopefulli": 54, "host": 36, "hour": 41, "how": [0, 2, 3, 23, 24, 31, 35, 36, 38, 39, 40, 41, 42, 45, 46, 47, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 74, 75, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116], "howev": [0, 25, 28, 36, 47, 81, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 114], "hpp": 0, "html": [0, 21, 23, 24, 31, 43, 45, 115], "http": [0, 21, 23, 24, 28, 31, 36, 43, 47, 51, 52, 57, 65, 68, 74, 95, 105, 114, 115], "hub": [0, 52], "huge": 0, "human": [21, 41], "hundr": 90, "hundredweight": 41, "hw1": 80, "hw2": 80, "hybrid": [36, 98], "hydrat": [36, 104, 105, 109], "hydrogen": [23, 24, 25, 28, 31, 36, 38, 39, 42, 53, 58, 75, 76, 77, 78, 79, 80, 81, 85, 86, 89, 93, 94, 96, 97, 98, 99, 100, 109], "hydrophob": 42, "hyperbal": [23, 24, 42], "hyperthet": 101, "hyphen": 36, "i": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "ibelli": 116, "id": [2, 23, 24, 31, 44, 45, 71, 72, 76, 77, 78, 79], "idea": [38, 46, 96, 102, 106, 113], "ideal": [44, 45, 111], "idenf": 100, "idenfi": 24, "ident": [2, 3, 22, 24, 38, 43, 44, 47, 75, 83, 95, 101, 102, 104, 112], "identif": 28, "identifi": [2, 21, 23, 24, 25, 26, 28, 31, 37, 80, 90, 92, 100], "idx": [3, 23, 24, 28, 39, 71, 73, 74, 109, 115], "idx_mm": 113, "ifbox": 36, "ignor": [22, 23, 24, 25, 28, 31, 36, 38, 52, 80, 97, 101, 109], "ignore_non_wat": 25, "ignore_perturb": [23, 24, 31, 38, 101], "ignore_spac": 28, "ignore_topology_fram": 28, "ignore_wat": 25, "il": [72, 73, 75, 80, 112], "illeg": 36, "imag": [28, 34, 42, 47, 96], "imageri": 43, "imagin": [22, 40, 79], "immedi": [36, 69], "immobil": 94, "impact": [2, 23, 24, 31, 36, 101, 105, 112], "implement": [0, 4, 24, 36, 39, 45, 71, 72, 73, 74, 75, 91, 95, 100, 102, 104, 105, 106, 108, 113, 116], "impli": [0, 88, 96], "implicitli": [34, 36], "import": [4, 24, 25, 28, 33, 36, 38, 40, 41, 42, 45, 52, 53, 55, 56, 57, 58, 69, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116], "importantli": 114, "imprecis": 39, "improp": [3, 10, 22, 23, 24, 25, 28, 31, 36, 40, 53, 55, 57, 58, 82, 84, 89, 91, 92, 94, 106, 107], "improper0": 106, "improper1": 106, "improper_angl": [22, 28, 89], "improperangl": 22, "improperid": [23, 79], "improperss": 79, "improv": [36, 46, 105, 113], "imri": 0, "imshow": 0, "inact": 52, "inappropri": 43, "inch": 41, "incid": [36, 43], "incident": 0, "includ": [0, 1, 3, 4, 23, 24, 25, 28, 31, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 59, 61, 62, 71, 76, 77, 78, 79, 90, 91, 92, 97, 98, 100, 102, 111, 114, 116], "include_constrained_energi": [23, 24, 25, 31, 38], "include_end_st": [25, 105], "include_hydrogen": [23, 24, 31, 42, 96, 97, 98], "inclus": [2, 43], "incompat": [36, 52, 85], "incompatible_error": [22, 23, 24, 34, 85], "inconsist": 52, "incorpor": 0, "incorrect": [36, 42, 96], "incorrectli": 104, "increas": [25, 36, 105, 106], "inde": [1, 33, 36, 39, 41], "indefinit": 1, "indentcaselabel": 44, "indentwidth": 44, "independ": [105, 113, 114], "index": [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 39, 40, 45, 51, 53, 55, 56, 83, 85, 86, 87, 88, 90, 91, 94, 98, 100, 102, 107, 109, 111, 113], "indexerror": [24, 45, 71], "indic": [3, 24, 36, 39, 40, 45, 48, 105, 113, 114, 115, 116], "indici": [3, 24, 39, 71, 75, 76, 77, 78, 79, 102, 113], "indirect": 0, "indirectli": 0, "individu": [23, 24, 31, 36, 39, 40, 41, 42, 43, 45, 48, 62, 69, 81, 82, 85, 89, 90, 92, 97, 98, 108, 112, 115, 116], "induc": 114, "infer": [36, 85, 86, 87, 99, 109], "infin": 34, "infinit": [28, 34, 36, 38], "info": [3, 24, 33, 36, 38, 40, 41, 44, 52, 71, 72, 74, 82, 85], "inform": [0, 1, 3, 21, 23, 24, 28, 34, 35, 36, 40, 42, 43, 44, 45, 50, 51, 52, 57, 58, 68, 70, 71, 80, 90, 102, 105, 109], "inher": 110, "inherit": 101, "init": 107, "initi": [0, 2, 25, 36, 48, 101, 103, 107, 108, 111, 115, 116], "initialis": [36, 45], "inpcrd": [36, 114], "input": [3, 4, 28, 31, 34, 36, 41, 45, 50, 52, 53, 54, 58, 68, 71, 72, 74, 90, 93, 95, 99, 110, 113, 114], "insensit": [39, 71, 75, 95], "insert": [2, 104, 105], "insert_stag": 2, "insertstag": 2, "insid": [39, 45], "inspir": 0, "instabl": [101, 102], "instal": [0, 28, 33, 36, 42, 44, 45, 51, 54, 55, 56, 57, 65, 90, 95, 96, 104, 109, 114], "instanc": [43, 52, 90, 114], "instantan": 114, "instanti": 34, "instead": [1, 24, 28, 33, 36, 38, 41, 42, 44, 45, 69, 84, 85, 86, 87, 88, 89, 95, 96, 100, 104, 114], "institut": 0, "instruct": [0, 23, 24, 25, 36, 47, 52, 55, 56, 65, 71], "instrument": 33, "insult": 43, "int": [1, 2, 3, 21, 22, 23, 24, 27, 28, 31, 33, 34, 44, 113], "int64": 114, "integ": [1, 2, 22, 24, 36, 39, 41, 71, 72, 73, 74, 75, 101, 108, 116], "integr": [0, 2, 3, 23, 24, 25, 31, 35, 36, 37, 39, 47, 48, 51, 53, 61, 95, 99, 101, 102, 105, 114, 115, 116], "intel": [28, 36, 52], "intend": [24, 41, 45, 116], "interact": [4, 25, 31, 36, 38, 40, 42, 64, 84, 92, 99, 101, 107, 108, 110, 111, 114, 115, 116], "interatom": 39, "interchang": 80, "interconvers": [0, 95], "interconvert": [0, 36, 51, 55], "interdisciplinari": 0, "interest": [24, 42, 43, 45, 47, 51, 52, 63, 90, 102, 104, 105, 106, 111, 112, 116], "interestingli": 112, "interfac": [1, 23, 24, 28, 31, 36, 50, 82, 104, 105, 108, 113, 115, 116], "intermedi": 101, "intermediari": [41, 95], "intermolcular": 36, "intermolecular": 111, "intern": [3, 22, 23, 24, 31, 36, 38, 41, 85, 91, 94, 100, 101, 105, 109, 111, 112, 114], "internet": 65, "interoper": [51, 95], "interpoint": 34, "interpol": [23, 24, 31, 101, 107, 111, 113, 114, 115], "interpolation_forc": 114, "interpret": [22, 24, 28, 36, 41, 50], "interrupt": 0, "intersect": [23, 24], "interupt": 36, "interupt_except": 36, "interv": 99, "intra_coulomb": [40, 53, 91, 92, 94], "intra_lj": [40, 53, 91, 92, 94], "intramolecular": [3, 25, 36, 84, 108, 111, 114, 115, 116], "intrascal": [36, 58, 82, 84, 106], "intrascale0": 106, "intrascale1": 106, "intrins": 0, "introduc": [36, 39, 45, 85, 86, 87, 99, 113], "introduct": [55, 63, 98], "intuit": 50, "invalid": 1, "invalid_index": [22, 23, 24, 34, 71], "inventor": 0, "invers": [22, 24, 34, 38], "invert": [2, 22, 23, 24, 36], "investig": 43, "invis": [41, 100], "invok": 45, "involv": [23, 24, 25, 35, 36, 38, 39, 40, 62, 76, 77, 78, 79, 85, 86, 87, 88, 94, 98, 99, 102, 105, 106, 107, 108, 109, 111, 112, 116], "io": [4, 20, 21, 29, 33, 36, 40, 95, 114, 115], "ion": [23, 24, 36, 39, 42, 80, 96, 111], "ipython": [45, 52, 64], "iron": 24, "is_angl": 24, "is_aromat": 98, "is_arrai": 1, "is_atom": 24, "is_atom_restraint": 23, "is_bas": 28, "is_binary_fil": 21, "is_bond": 24, "is_boolean": 1, "is_broken": 21, "is_cartesian": 34, "is_centroid_restraint": 23, "is_chain": 24, "is_complex": 2, "is_compound": 2, "is_const": 2, "is_default": [1, 39], "is_defin": 24, "is_diagon": 22, "is_dihedr": 24, "is_doubl": [1, 24], "is_down": 24, "is_dummi": 23, "is_empti": [1, 21, 22, 23, 24, 34], "is_fram": 21, "is_funct": 2, "is_ghost_atom": 3, "is_ident": 22, "is_improp": 24, "is_integ": 1, "is_intern": 24, "is_link": [23, 24], "is_lj_paramet": 23, "is_map": 24, "is_molecul": 24, "is_not_stereo": 24, "is_nul": [1, 2, 3, 22, 23, 24, 33], "is_period": 34, "is_perturb": [24, 39, 100, 104, 105, 106, 107], "is_reduc": 34, "is_resid": 40, "is_residu": 24, "is_restraint": 23, "is_rot": 34, "is_same_editor": 24, "is_same_molecul": [23, 24], "is_seg": 24, "is_selector": [23, 24], "is_singl": 24, "is_single_molecul": 24, "is_str": 1, "is_supplementari": 21, "is_symmetr": 22, "is_system": 31, "is_text_fil": 21, "is_topologi": 21, "is_tripl": 24, "is_unit": 1, "is_up": 24, "is_valid": 1, "is_wat": [11, 24, 36], "is_within_chain": 24, "is_within_residu": 24, "is_within_seg": 24, "is_zero": [2, 22], "isaboolean": 1, "isadoubl": 1, "isanarrai": 1, "isaninteg": 1, "isaromat": 24, "isastr": 1, "isatomrestraint": 23, "isaunit": 1, "isbinaryfil": 21, "isbroken": 21, "iscach": 1, "iscartesian": 34, "iscentroidrestraint": 23, "iscomplex": 2, "iscompound": 2, "isconst": 2, "isdefault": 1, "isdefin": 24, "isdiagon": 22, "isdoubl": 24, "isdown": 24, "isdummi": 23, "isempti": [1, 21, 22, 23, 24, 34], "isfram": 21, "isfunct": 2, "isghostatom": 3, "ish": 0, "isident": 22, "isin": 107, "isinst": 114, "islink": [23, 24], "isljparamet": 23, "ismap": 24, "isn": [23, 24, 28, 31, 36, 54, 95, 114], "isnotstereo": 24, "isnt": [2, 21, 34], "isnul": [1, 2, 3, 22, 23, 24], "isol": 100, "isotop": 98, "isperiod": 34, "isreduc": 34, "isresid": 1, "isrestraint": 23, "isromat": 24, "isrot": 34, "isrun": 36, "issamemolecul": [23, 24], "isselector": [23, 24], "issingl": 24, "issinglemolecul": 24, "issn": 51, "issu": [0, 36, 38, 39, 43, 44, 45, 46, 47, 48, 54, 95], "issupplementari": 21, "issymmetr": 22, "istextfil": 21, "istopologi": 21, "istripl": 24, "isup": 24, "isvalid": 1, "iswithinchain": 24, "iswithinresidu": 24, "iswithinseg": 24, "iszero": [2, 22], "itali": 0, "item": [1, 21, 28, 31, 36, 47, 71, 80, 82, 89, 109], "item0": 28, "item1": 28, "item2": 28, "item3": 28, "iter": [0, 23, 24, 31, 36, 82], "ith": [22, 23, 31], "its": [0, 1, 2, 3, 24, 34, 36, 39, 40, 41, 42, 43, 45, 48, 53, 71, 72, 73, 74, 75, 80, 82, 90, 91, 93, 98, 100, 104, 105, 107, 108, 111, 114], "itself": [0, 1, 23, 24, 36, 41, 52, 71, 72, 73, 74, 82, 90, 94, 99, 113], "iupac": [24, 39], "j": [0, 2, 22, 32, 41, 44, 51, 91, 102], "jama": 0, "jan": 36, "januari": [0, 48], "java": 0, "jcp": 51, "jctc": 36, "jimmi": 0, "jit": 114, "jmichel80": [36, 49], "job": [36, 47, 99], "join": [24, 37, 45, 47, 54, 104], "jone": [23, 24, 25, 36, 81, 101, 106, 107, 108], "joul": [32, 41, 91], "journal": 51, "jp": 0, "julien": [0, 51], "june": 48, "jupyt": [23, 24, 31, 42, 51, 52, 64, 65, 90, 92, 93, 96], "jupyterhub": [0, 52], "jupyterlab": [52, 90], "just": [0, 2, 22, 23, 24, 25, 31, 33, 34, 36, 38, 39, 40, 41, 45, 52, 53, 57, 69, 76, 77, 78, 79, 82, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 112, 113], "justif": 33, "justifi": [33, 45], "k": [3, 21, 23, 24, 26, 32, 41, 102, 103], "k0": [106, 107, 109, 110, 111, 116], "k1": [106, 107, 109, 110, 111, 116], "k_aligned_methan": 109, "k_boltz": 36, "k_methan": 109, "k_neopentan": 109, "k_phi": 115, "k_psi": 115, "kabasch": [9, 22], "kabasch_fit": [9, 22], "kabaschfit": 22, "kappa": [3, 107, 108, 111], "kappa0": [109, 111, 112], "kappa1": [109, 111, 112], "kappa_i": 108, "kappa_j": 108, "kartograf": 112, "kartografatommapp": 109, "kb": 40, "kcal": [22, 25, 26, 31, 32, 36, 41, 53, 58, 81, 82, 85, 86, 87, 88, 91, 92, 99, 101, 102, 103, 104, 105, 114], "kcal_per_mol": [32, 41, 85, 86, 87, 88, 91], "keep": [24, 34, 36, 45, 46, 48, 52, 79, 88, 102, 103, 105, 106, 108, 109, 111, 116], "keep_null_angl": 36, "keep_null_bond": 36, "kei": [1, 3, 4, 22, 23, 24, 30, 31, 36, 38, 51, 71, 74, 82, 90, 94, 99, 101, 102, 105, 106, 108, 111], "keio": 0, "kelvin": [32, 41, 114], "kept": [36, 103, 111], "kessler": 0, "kexul": [36, 49], "keyerror": [36, 71, 72, 74, 76, 77, 78, 79, 82], "keymetakei": 1, "keysuffix": 1, "keyword": [23, 24, 36, 39, 42, 45, 93, 105, 113, 114, 116], "kg": 41, "kigaki": [38, 53, 80, 96, 112], "kilocalori": [32, 41, 85, 86, 87, 88, 91], "kilocalorie_per_mol": 116, "kilogram": 32, "kilojoul": [32, 85, 86, 87, 88, 107], "kilojoule_per_mol": 116, "kilomet": 41, "kind": 112, "kinet": [22, 24, 101, 105, 111, 114], "kj": [22, 25, 31, 41, 85, 91, 106, 107, 113], "kj_per_mol": [41, 85, 86, 87, 88], "knl": 36, "know": [22, 36, 39, 45, 54, 71, 74, 86, 87, 88, 107], "knowledg": 28, "known": [25, 45, 105], "kph": 41, "kphi": [26, 102], "kr": [26, 102], "kromann": 0, "kt": [22, 25, 31], "ktheta": [26, 102], "kthetaa": 26, "kthetab": 26, "kthetac": 26, "kubernet": 0, "kwarg": [1, 22, 23, 24, 25, 26, 28, 31, 33], "l": [0, 41, 103, 104, 105, 107, 108], "l1": 102, "l2": [41, 102], "l3": 102, "la": 0, "lab": [52, 90], "label": [22, 28, 36, 45, 47, 52], "label_kei": 22, "labelkei": 22, "labels_as_numb": 22, "labels_column": 28, "labelsasnumb": 22, "laboratori": 0, "lack": 98, "laid": 46, "lam": [2, 6, 101, 103, 107, 108], "lam_val": 25, "lambda": [2, 3, 22, 23, 24, 25, 31, 36, 38, 51, 53, 55, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 101, 104, 105, 111, 114], "lambda_eml": 114, "lambda_interpol": [23, 24, 31, 114], "lambda_lev": 3, "lambda_schedul": 101, "lambda_valu": [2, 3, 23, 24, 25, 31, 38, 53, 101, 103, 104, 105, 111], "lambda_window": [24, 38, 53, 101, 104, 105, 111], "lambdalev": [3, 7, 36], "lambdaschedul": [2, 3, 6, 23, 24, 31, 36, 38, 101, 103, 107, 108, 111], "lamval": 3, "landscap": [55, 63], "langevin": [23, 24, 31, 38], "langevin_middl": [23, 24, 31, 38, 116], "langevinmiddl": 25, "langevinmiddleintegr": [36, 38, 105, 114], "languag": [24, 43], "lanthanid": 24, "lar": 0, "larg": [24, 36, 38, 40, 41, 52, 96, 104, 105, 107, 108, 109, 116], "larger": [24, 25, 34, 36, 39, 40, 66, 69, 80, 81, 99, 105], "largest": [34, 74, 75], "last": [21, 31, 34, 36, 39, 42, 45, 47, 52, 62, 71, 72, 74, 75, 85, 86, 87, 90, 92, 98, 102, 107, 109, 113], "last_to_cent": 90, "later": [0, 21, 36, 39, 41, 46, 71, 82, 104, 106, 115, 116], "latest": [22, 36, 48, 52, 54, 115], "lattic": [34, 36], "layer": [0, 4, 36, 41], "layout": [24, 36, 71], "lazi": [0, 36], "lazy_import": 36, "lazyevalu": [23, 24, 36], "lead": [28, 36, 41, 44, 45, 99, 104], "leadership": 43, "leapfrog": 38, "learn": [47, 48, 52, 53, 57, 58, 59, 62, 63, 69, 90, 95], "least": [0, 39, 47, 52, 75, 80, 94], "leav": 114, "led": 36, "left": [22, 34, 41, 42, 94, 97, 108, 116], "leg": 105, "legaci": [26, 31, 36, 45, 57], "legend": [90, 107], "len": [22, 71, 72, 105], "length": [3, 17, 20, 23, 24, 25, 26, 28, 31, 32, 34, 36, 39, 41, 85, 89, 93, 94, 104, 105, 106, 107, 109, 110], "length0": [106, 107, 109, 110, 111], "length1": [106, 107, 109, 110, 111], "lennard": [23, 24, 25, 36, 81, 101, 106, 107, 108], "less": [38, 39, 71, 80, 82, 90, 105], "lester": [34, 45, 51], "let": [0, 1, 3, 24, 36, 42, 50, 52, 53, 54, 57, 61, 65, 74, 76, 77, 78, 79, 80, 83, 85, 89, 90, 92, 93, 94, 99, 101, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116], "letter": [39, 81], "leu": [72, 73, 75, 80], "level": [1, 2, 3, 24, 28, 31, 32, 33, 36, 37, 43, 51, 63, 70, 80, 95, 99, 104, 105, 106, 113, 114, 115], "lever": [2, 3, 36, 51, 55, 101, 103, 108, 111], "lever_nam": [2, 3], "leverag": [51, 96], "lgpl": 0, "lgpl3": 0, "li": [34, 94], "liabil": 0, "liabl": 0, "lib": [36, 71, 74], "lib64": 36, "libcpuid": 36, "liber": 0, "libnetcdf": 36, "libpython": 36, "librari": [36, 42, 46, 51, 52, 56, 90, 95, 112], "licens": [0, 46], "licoric": [23, 24, 36, 42], "lie": 34, "lig": [26, 39, 75, 98], "ligand": [26, 36, 42, 50, 62, 72, 75, 102, 112], "ligandatommap": 109, "ligandswap": 36, "light": [25, 28, 36, 109], "lighter": 105, "lightest": 94, "lightweight": 28, "like": [1, 3, 35, 36, 38, 39, 40, 42, 44, 45, 48, 52, 58, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 95, 96, 98, 99, 102, 104, 105, 107, 112], "limit": [0, 31, 34, 36, 52, 54, 90, 107, 110, 113], "line": [21, 22, 23, 24, 28, 42, 45, 52, 65, 67, 68, 71, 72, 74, 82, 90, 99, 107], "line0": 22, "line03": 22, "line1": 22, "line12": 22, "line2": 22, "linear": [101, 107, 114], "linearli": [23, 24, 31, 94, 101, 107, 111, 114], "link": [0, 1, 23, 24, 25, 36, 47, 88, 100, 104, 106, 109, 113], "link_to_perturb": [12, 25, 36, 100, 105, 106], "link_to_refer": [12, 25, 36, 53, 100, 101, 104, 105, 106, 107], "link_to_xxx": 36, "linked_properti": 1, "linspac": 115, "linter": 45, "linux": [36, 45, 47, 52, 54, 109], "lion": 36, "lisc": 0, "list": [0, 1, 2, 3, 20, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 89, 90, 93, 94, 95, 99, 102, 104, 106, 107, 113, 114, 115], "listdir": [40, 69], "littl": [36, 105, 106], "lj": [1, 3, 23, 36, 38, 40, 53, 58, 81, 82, 84, 92, 106, 108, 109, 111], "lj0": 106, "lj1": 106, "lj1264paramet": [10, 23], "lj_scale": 107, "ljpair": 23, "ljparam": 1, "ljparamet": [10, 23], "ljpotenti": 108, "ll": [53, 109, 116], "llvm": 44, "load": [0, 4, 15, 21, 22, 24, 28, 30, 31, 33, 36, 37, 38, 42, 45, 50, 51, 53, 55, 57, 58, 59, 70, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116], "load_fram": [23, 24, 31, 36, 40, 69], "load_test_fil": [4, 28, 40, 106, 107, 109, 111, 112, 113, 114, 115, 116], "loadfram": [23, 24], "loc": [104, 105, 107], "local": [2, 20, 24, 45, 101, 113, 114], "localenergyminim": 36, "localis": 36, "locat": [1, 3, 23, 34, 36, 40, 45, 52], "lock": 22, "locked_rand": 22, "locked_rand_norm": 22, "locked_randnorm": 22, "locked_vector_on_spher": 22, "locked_vectoronspher": 22, "loeffler": 51, "log": [0, 24, 33, 36, 52], "logger": 36, "logic": [36, 37, 71, 95], "lohedg": [36, 47, 49], "long": [22, 23, 24, 36, 41, 45, 99, 100, 105, 106, 114], "long_loop": 33, "longer": [36, 105], "look": [0, 3, 23, 24, 33, 34, 36, 39, 44, 47, 50, 52, 53, 71, 75, 76, 77, 78, 79, 80, 91, 95, 97, 102, 104, 105, 109, 112, 115, 116], "lookup": 36, "loop": [36, 42, 44, 66, 71, 72, 73, 74, 75, 83, 85, 86, 87, 88, 90, 91, 92, 106, 115], "loop_": 95, "lose": [36, 40], "loss": 0, "lost": [22, 36, 44, 52, 70, 96], "lot": [0, 25, 36, 39, 40, 42, 45, 50, 52, 53, 58, 61, 65, 83, 85, 86, 87, 88, 90, 96, 101, 102, 105, 107, 109], "low": [24, 42, 52], "lower": [22, 36, 40, 63, 81, 95, 105], "lowercamelcas": 45, "lowercas": [36, 39, 45], "lowerclassnam": 45, "lowest": 22, "lvalu": [1, 2, 3, 21, 22, 23, 24, 34], "ly": [22, 72, 73, 75, 80, 112], "lysin": 112, "m": [0, 2, 28, 32, 36, 38, 41, 45, 47, 58, 65, 68, 74, 82, 97, 98, 99, 108, 109, 115, 116], "m1": [36, 47], "m2": 41, "m3": 41, "machin": [63, 95, 105], "machineri": [62, 101], "maco": [36, 45, 47, 52, 54, 109], "macosx_deployment_target": 36, "macromolecular": 95, "made": [0, 24, 28, 33, 34, 36, 38, 48, 85, 86, 87, 88, 92, 94, 105], "magic": [36, 105], "magnitud": [34, 41], "mai": [0, 2, 3, 21, 22, 24, 28, 34, 42, 43, 48, 52, 59, 65, 82, 90, 91, 94, 95, 96, 98, 102, 104, 105, 106, 108, 109, 112, 113], "mail": 43, "main": [3, 4, 36, 45, 47, 48, 52, 74, 90], "maintain": [43, 44, 48], "major": [47, 48, 52], "make": [0, 2, 3, 21, 24, 25, 31, 34, 36, 37, 40, 41, 43, 45, 47, 48, 51, 52, 56, 59, 68, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 112, 114], "make_whol": [24, 31, 34, 36, 114], "makedir": 115, "makewhol": 34, "makoto": 0, "malaisre": 51, "malform": 28, "mamba": 36, "mambdabuild": 36, "man": 95, "manag": [0, 1, 2, 28, 36, 40, 45, 47, 52, 62, 112], "mani": [0, 1, 24, 35, 36, 38, 39, 40, 44, 45, 47, 49, 51, 58, 65, 66, 69, 70, 71, 72, 74, 81, 89, 90, 95, 97, 99, 100, 101, 102, 104, 106, 110], "manipul": [4, 24, 36, 42, 50, 51, 56, 95, 100], "manner": [36, 45, 116], "manual": [2, 33, 36, 38, 47, 90, 92, 99, 100, 104, 106, 109], "map": [1, 3, 4, 20, 21, 23, 24, 25, 26, 28, 31, 34, 36, 38, 39, 40, 42, 52, 90, 99, 101, 102, 105, 108, 112], "map0": [24, 25, 28], "map1": [24, 25, 28], "mappabl": 102, "mapped_atoms0": 24, "mapped_atoms1": 24, "mappedatoms0": 24, "mappedatoms1": 24, "mapper": 109, "march": 48, "mark": [0, 45, 82], "markdown": 33, "marker": 0, "markup": 33, "mass": [23, 24, 25, 31, 32, 36, 37, 38, 41, 58, 81, 82, 83, 84, 89, 90, 93, 94, 98, 102, 106, 116], "mass0": [25, 105, 106], "mass1": [25, 105, 106], "mass_factor": [25, 105], "massiv": 36, "mat": 34, "match": [2, 3, 12, 22, 23, 24, 25, 28, 31, 36, 37, 40, 42, 45, 52, 53, 72, 74, 75, 76, 77, 78, 79, 80, 82, 97, 102, 104], "match_al": 24, "match_atom": [4, 25, 28, 40], "match_light_atom": [25, 28, 40, 109, 112], "matcher": [24, 25, 28], "materi": 0, "math": [0, 4, 22, 24, 25, 28, 29, 36, 81, 89, 93, 101, 115], "math_error": 22, "mathrm": 101, "matplotlib": [0, 90], "matric": 93, "matrici": 22, "matrix": [0, 9, 22, 24, 34, 36, 93], "matsumoto": 0, "matteo": 0, "matthew": 51, "matumoto": 0, "maturo": 51, "max": [39, 81, 90, 105, 108], "max_bond": 24, "max_constraint_error": 24, "max_coord": 34, "max_iter": 24, "max_page_s": 1, "max_ratchet": 24, "max_resident_pag": 1, "max_restart": 24, "maxbond": 24, "maxbyt": 1, "maxcoord": 34, "maximis": 41, "maximum": [1, 24, 25, 28, 34, 36, 38, 39, 42, 81, 95, 109], "maximum_cutoff": [34, 36], "maximumcutoff": 34, "maxpages": 1, "maxresidentpag": 1, "maxval": 22, "mayb": [34, 101], "maybe_differ": 34, "maybediffer": 34, "mb2055": 49, "mbar": [36, 115], "mbondi": 58, "mc": [23, 24, 31, 36, 38, 112], "mc2": 41, "md": [33, 36, 38], "mdtraj": 33, "me": [0, 24], "mean": [0, 1, 21, 22, 23, 24, 25, 28, 31, 34, 36, 39, 40, 41, 42, 44, 48, 52, 58, 64, 69, 70, 71, 72, 73, 74, 75, 76, 80, 89, 90, 92, 94, 101, 102, 103, 104, 105, 107, 108, 109, 113, 116], "meaning": 36, "meant": 36, "measur": [4, 23, 26, 28, 34, 36, 50, 51, 55, 96, 105], "measure_unit": 90, "mechan": [4, 36, 63, 79, 84, 88, 91, 110, 113, 114, 115], "mechanical_embed": 113, "media": 43, "meet": 44, "megajoul": 41, "mei": 51, "member": [0, 23, 24, 42, 43], "memori": [1, 28, 34, 36, 40, 41, 45, 52, 67, 69], "memoryerror": 36, "mention": 54, "merchant": 0, "mere": 34, "merg": [1, 3, 12, 24, 25, 36, 45, 47, 48, 50, 51, 53, 55, 61, 101, 104, 105, 106, 110, 111, 112, 113, 114, 115], "merged_mol": 110, "merged_molecul": [53, 100, 101, 103, 104, 105, 106, 107], "mesh": [99, 105], "messag": [36, 45], "met": [0, 72, 75, 80], "meta": 52, "metadata": [1, 3, 23, 24, 31, 36, 80, 95, 101], "metadata_kei": [1, 23, 24, 31], "metadata_typ": [1, 23, 24], "metadatakei": [1, 23, 24], "metadatatyp": [1, 23, 24], "metadynam": 51, "metafunct": 41, "metakei": [1, 23, 24], "metal": [23, 24, 31, 38], "metaobject": 41, "metaward": 33, "meter": [32, 41], "methan": [106, 107, 109], "methanol": [53, 100, 104, 105], "method": [24, 36, 45, 63, 99, 100, 104, 105, 113], "michel": 51, "micro": 41, "microcanon": [23, 24, 31, 38], "microsecond": 41, "microsoft": 0, "mid": 112, "middl": 78, "might": [45, 102, 116], "migrat": [28, 36], "mile": [36, 41], "millisecond": 33, "min": [22, 39, 90, 105, 115], "min_coord": 34, "min_mol": [104, 105], "mincoord": 34, "mind": [45, 46, 54, 113], "mini": 36, "miniconda": [36, 45, 55, 56], "miniforg": [0, 36, 45], "miniforge3": 52, "minim": [24, 36], "minimis": [11, 23, 24, 25, 31, 36, 41, 50, 52, 53, 55, 60, 94, 95, 101, 103, 104, 105, 109, 115, 116], "minims": 24, "minimum": [23, 28, 34, 36, 39, 75, 80], "minimum_dist": [4, 28, 34, 36], "minimumdist": 34, "minor": [36, 47], "minut": [41, 52, 105], "minval": 22, "miroslav": 51, "miscellan": 4, "mise": 36, "mismatch": 36, "misrepres": 0, "miss": [2, 36, 42, 96, 97], "missing_atom": [23, 24, 71], "missing_chain": [23, 24, 74], "missing_cutgroup": [23, 24], "missing_mol": 44, "missing_molecul": 44, "missing_properti": [1, 23, 24, 82], "missing_residu": [23, 24], "missing_seg": [23, 24], "missingmolecul": 44, "mistak": 38, "mit": [0, 46], "mix": [0, 23, 24, 31, 38, 40, 42, 71, 76, 77, 78, 79, 85, 86, 87, 88, 114], "mixtur": [69, 71], "mj": 41, "mkdir": 45, "ml": [36, 113], "ml_atom": 114, "ml_system": 114, "mlpotenti": 114, "mm": [4, 23, 24, 26, 29, 31, 36, 38, 51, 55, 58, 84, 85, 86, 87, 89, 91, 115, 116], "mm_atom": 114, "mm_system": 114, "mmcif": [0, 36, 51, 57, 65, 70, 95], "mmdetail": 36, "mmhg": 41, "mobil": 102, "mod": 113, "mod_electron": [32, 41], "mode": 36, "model": [0, 36, 51, 60, 63, 67, 95, 101, 107, 113, 114], "model_v3": 65, "modern": [36, 104], "modernis": 45, "modif": [0, 114], "modifi": [0, 25, 36, 38, 44, 45, 47, 58, 90, 113, 114, 115, 116], "modul": [0, 1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 45, 50, 51, 64, 95, 97, 102, 106], "modularis": 36, "module_to_packag": 33, "modulenotfounderror": 33, "modulo": [39, 80], "moelcul": 95, "mol": [1, 3, 4, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 36, 38, 39, 40, 41, 42, 44, 45, 53, 57, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116], "mol0": [24, 25, 28, 109], "mol1": [24, 25, 28, 109], "mol2": [8, 21, 28, 36, 67, 70, 100], "mol3": 28, "mol_idx": 3, "mol_num": 24, "molar": [32, 41], "moldata": [23, 24], "mole": [32, 41, 85, 86, 87, 88, 91, 107], "molecu": [23, 36], "molecul": [2, 3, 4, 11, 20, 21, 23, 24, 25, 28, 31, 34, 35, 36, 37, 38, 44, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 66, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99, 101, 102, 103, 104, 106, 108, 110, 111, 112, 113, 114, 115, 116], "molecular": [0, 4, 21, 23, 24, 25, 28, 31, 34, 35, 36, 38, 40, 41, 42, 50, 51, 53, 55, 56, 57, 60, 61, 62, 63, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 100, 101, 102, 104, 105, 112, 113, 114], "molecule0": 106, "molecule1": 106, "moleculedata": [23, 24, 36], "moleculegroup": [23, 24, 31, 36], "moleculeinfo": 24, "moleculepars": [21, 36], "moleculeview": [23, 24, 28, 31, 57, 58], "moleditor": 24, "molfilealia": 36, "molfromsmil": [95, 97], "molgroup": 24, "molgroupsbas": 24, "molid": [4, 23, 24, 28, 75], "molidx": [11, 24, 36, 39, 40, 42, 75, 92, 103, 114, 116], "molinfo": 24, "molnam": [11, 24, 39, 75], "molnum": [3, 11, 24, 39, 53, 75, 76, 77, 80, 102, 109, 112], "mols2": 45, "moltosmil": [95, 97], "molview": 24, "moment": 36, "monatom": 36, "monitor": [36, 116], "monkei": 36, "monom": 36, "mont": 25, "month": [48, 51], "more": [0, 2, 21, 24, 28, 36, 39, 40, 41, 42, 45, 46, 48, 50, 52, 53, 62, 69, 71, 72, 74, 80, 81, 82, 85, 90, 93, 94, 95, 97, 99, 101, 102, 104, 105, 106, 110, 112, 113, 116], "morph": [2, 3, 4, 23, 24, 25, 29, 31, 36, 51, 53, 55, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "most": [23, 24, 25, 36, 38, 39, 40, 41, 45, 47, 52, 55, 71, 72, 74, 75, 85, 86, 87, 88, 90, 93, 94, 101, 104, 105, 106], "mostli": [3, 4, 24, 36, 88], "motion": [38, 42, 99, 105], "mountain": 36, "move": [23, 24, 25, 31, 34, 36, 38, 40, 45, 48, 50, 55, 59, 69, 75, 101, 102, 105, 106, 107, 116], "move_al": 94, "movement": [36, 51, 55], "mover": [23, 24], "mover_angle_": 23, "mover_atom_": 24, "mover_bond_": 23, "mover_chain_": 24, "mover_dihedral_": 23, "mover_improper_": 23, "mover_molecule_": 24, "mover_residue_": 24, "mover_segment_": 24, "mover_selectorangle_": 23, "mover_selectorbond_": 23, "mover_selectordihedral_": 23, "mover_selectorimproper_": 23, "movi": [42, 53, 93, 94, 99, 106], "mph": 41, "msuruzon": [36, 49], "msvc": 52, "mtrand": 0, "much": [24, 36, 41, 42, 44, 45, 47, 54, 63, 70, 91, 98, 99, 101, 105, 106, 109], "mul": 45, "mulholland": 51, "multi": [23, 24, 39, 42, 50, 75, 76], "multidoubl": 36, "multilin": 44, "multipl": [0, 1, 2, 3, 23, 24, 28, 34, 36, 37, 39, 42, 50, 51, 53, 55, 56, 59, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 92, 97, 99, 102, 105, 107, 113], "multipli": [2, 25, 36, 38, 41, 105], "multiprocess": 36, "must": [0, 1, 22, 24, 25, 26, 28, 32, 36, 38, 39, 41, 47, 52, 69, 71, 90, 91, 94, 102, 104, 105, 106, 111], "must_sanit": [28, 36, 97], "mutat": [12, 24, 25, 36, 50, 55, 62, 103], "mutated_protein": 112, "mx": 95, "my": [0, 45, 105], "my_boresch_restraint": 26, "my_coord": 1, "mypkg": 45, "n": [2, 21, 22, 24, 28, 36, 39, 41, 52, 53, 58, 71, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 94, 95, 97, 98, 99, 101, 105, 108, 112, 114], "n14": 58, "n4": 98, "n9": 98, "n_page": 1, "na": [36, 39, 80], "namd": [40, 51, 70, 95, 113], "name": [0, 1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 36, 39, 40, 41, 42, 45, 46, 49, 52, 57, 58, 65, 68, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 92, 95, 100, 102, 104, 105, 106, 107, 109, 112, 113], "name0": 106, "name1": 106, "namespaceindent": 44, "nan": [25, 36, 101, 102, 104, 105], "nangl": 58, "nanomet": [32, 41, 89, 107, 114, 116], "nanosecond": [24, 33, 99, 104], "nation": 43, "nativ": [36, 40, 45, 96, 101], "natom": [20, 21, 23, 24, 28, 40, 58, 84, 95], "natomrestraint": 23, "natur": [24, 36, 39, 45], "natyp": 36, "nautilu": 36, "navig": [24, 52], "nbond": 58, "nbyte": 1, "nc": [39, 53, 97], "ncentroidrestraint": 23, "nchain": [23, 24], "nconnect": [58, 84, 98], "ncutgroup": [23, 24], "nd1": 71, "nd2": 71, "ndihedr": 58, "ne": 71, "ne1": 71, "ne2": 71, "nearbi": 102, "nearest": [2, 24], "nearli": [45, 50, 106], "neatli": 4, "necessari": [1, 21, 36, 43, 102], "necessarili": [2, 22], "need": [1, 2, 3, 4, 20, 22, 23, 24, 28, 31, 32, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 58, 67, 68, 72, 73, 74, 82, 90, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "neg": [2, 34, 39, 41, 80, 96, 97], "negat": 2, "neglig": 0, "neigbour": 115, "neighbor": 42, "neighbour": [53, 96, 104, 105, 113, 114], "neighbour_list_frequ": [113, 114], "neo": 109, "neo_meth_scratch": 106, "neo_meth_solv": 107, "neon": 0, "neopentan": [106, 107, 109], "neopentane_methan": 110, "nest": 1, "net": [52, 105], "netcdf": [36, 40, 70], "neutral": [39, 80], "never": [36, 44], "new": [1, 3, 22, 24, 25, 28, 31, 35, 36, 39, 40, 45, 46, 47, 48, 50, 51, 54, 57, 65, 82, 83, 93, 95, 101, 110, 111, 113, 114, 115], "new_context": [115, 116], "new_mol": 116, "newer": [45, 52], "newest": [52, 54], "newli": [24, 36], "newton": 41, "next": [34, 36, 42, 45, 47, 48, 52, 90, 94, 97, 104, 109, 111, 112, 113, 114, 115, 116], "nforc": 2, "nframe": [21, 23, 24, 40], "nglview": [23, 24, 31, 36, 37, 51, 65], "nglviewer": [23, 24, 50, 65], "nglwidget": 42, "ngroup": [24, 58, 84], "nh1": 71, "nh2": [71, 112], "nice": [0, 99, 112], "nigel": [36, 49], "nimprop": 58, "nishimura": 0, "nitrogen": [71, 78, 79, 88, 94, 96, 98], "nivid": 49, "nividic73": 36, "nlever": 2, "nm": [24, 36, 41, 85, 89, 106, 107, 113], "nme": [58, 84, 92, 95], "nmolecul": [21, 23, 24, 95], "no_cutoff": 38, "no_default": [23, 24, 42], "no_wrap": 33, "nobl": [24, 39], "noble_ga": 24, "noblega": 24, "node": 0, "noisi": [28, 36], "non": [0, 3, 23, 24, 25, 31, 34, 36, 38, 39, 74, 82, 84, 92, 99, 100, 105, 107, 108, 111, 113, 114], "nonbond": [25, 36, 38, 58, 84], "nonbondedcutoff": 114, "nonbondedforc": [107, 108, 111, 114], "nonbondedmethod": 114, "none": [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 42, 105, 113, 114, 115, 116], "nonghost": 25, "normal": [1, 2, 3, 21, 22, 23, 24, 25, 28, 31, 36, 38, 39, 82, 94, 100, 101, 105, 106, 108], "nose_hoov": 38, "not_stereo": 24, "not_wrap": 40, "note": [1, 2, 3, 20, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 64, 67, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 106, 109, 111, 113, 115], "notebook": [0, 23, 24, 31, 42, 45, 47, 51, 52, 64, 65, 90, 92, 93, 96], "noth": [24, 33, 36, 39, 106], "notic": [0, 74, 88, 89, 90, 94, 96, 101, 106], "notifi": 44, "notion": 75, "notstereo": 24, "novel": 51, "novemb": 36, "now": [2, 22, 30, 34, 36, 40, 45, 47, 52, 53, 70, 80, 82, 83, 90, 92, 93, 95, 99, 100, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116], "np": 115, "npage": 1, "nproperti": 1, "nproton": 24, "npt": [23, 24, 31, 36, 102], "nrand": 22, "nrand_norm": 22, "nrandnorm": 22, "nre": 27, "nresidu": [23, 24, 95], "nrestraint": 23, "nrg": 91, "nrg_coul": 25, "nrg_lj": 25, "nrg_traj": 114, "nsegment": [23, 24], "nstage": 2, "nth": [2, 37], "null": [1, 2, 3, 22, 23, 24, 28, 33, 36, 39, 75, 80, 101, 114, 116], "null_typ": [3, 22, 34], "nullprofil": [18, 33], "num": [28, 39, 71, 72], "num_atom": [21, 23, 24, 28, 31, 40, 53, 57, 65, 66, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 90, 95, 100, 101, 102, 104, 106, 107, 109, 111, 112, 114], "num_atom_restraint": 23, "num_byt": 1, "num_centroid_restraint": 23, "num_chain": [23, 24, 31, 57], "num_column": 42, "num_cutgroup": [23, 24], "num_forc": 2, "num_fram": [21, 23, 24, 31, 40, 53, 69, 90], "num_group": [24, 97, 98], "num_lambda": [2, 3], "num_lev": 2, "num_molecul": [21, 23, 24, 31, 40, 57, 65, 68, 69, 75, 95, 100, 104, 106, 107], "num_pag": 1, "num_properti": 1, "num_proton": [24, 114], "num_residu": [23, 24, 31, 40, 53, 57, 65, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 95, 100, 104, 106, 107, 109, 111, 112], "num_restraint": 23, "num_seg": [23, 24, 31, 57], "num_stag": 2, "num_step": [24, 36], "num_view": [23, 24], "number": [0, 1, 2, 3, 21, 22, 23, 24, 25, 26, 28, 31, 34, 36, 37, 38, 40, 41, 42, 47, 48, 50, 51, 52, 53, 57, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 99, 101, 102, 104, 106, 109, 111, 112, 113, 114], "numbers_qm": 113, "numer": [2, 22, 36, 39, 82, 104], "numextra": 36, "numpi": [0, 20, 36, 45, 52, 90], "nvacuum": 105, "nvalu": 2, "nve": [23, 24, 31, 38], "nvector_on_spher": 22, "nvectoronspher": 22, "nview": [23, 24], "nvt": [23, 24, 31, 38, 102], "nwater": 105, "nz": [71, 80], "o": [24, 36, 39, 40, 51, 53, 58, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 95, 97, 98, 100, 102, 105, 112, 114, 115], "o00": 44, "o1": [71, 73], "o2": [71, 73], "o3": [36, 71, 98], "o4": [71, 73], "o5": 71, "o6": 71, "o7": 71, "o8": 98, "obei": [34, 36], "obj": [3, 23, 24, 30, 31, 36, 71, 74], "object": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 38, 39, 40, 41, 42, 45, 58, 59, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111, 113, 114, 115, 116], "oblig": 43, "obscur": [42, 107], "obtain": [22, 36, 85, 86, 87, 88, 91, 95, 101, 113, 114], "obviou": 44, "oc": 97, "oc2": 95, "occur": [28, 102], "octahedron": 34, "od1": 71, "od2": 71, "oder": 114, "oe1": [71, 73], "oe2": [71, 73], "off": [33, 36, 40, 42, 90, 94, 103, 105, 106, 111], "offend": 44, "offens": 43, "offer": 48, "offic": 48, "offici": [36, 43, 48, 52, 114], "offlin": 43, "offset": 22, "often": [23, 24, 31, 36, 41, 42, 45, 66, 68, 71, 74, 79, 80, 91, 106, 110], "og": 71, "og1": 71, "oh": 71, "old": [28, 36], "older": [36, 52, 56, 65, 110], "omm": [38, 95, 102], "omm_system": 115, "onc": [36, 39, 48, 52, 90, 96, 101, 107, 114], "one": [0, 3, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 36, 38, 39, 42, 44, 48, 52, 58, 61, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 94, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116], "oneapi": 36, "ones": [25, 98], "ongo": 35, "onli": [0, 2, 3, 4, 22, 23, 24, 25, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 45, 47, 48, 52, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 89, 90, 94, 96, 97, 98, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116], "onlin": 43, "onto": [1, 2, 23, 31, 45, 95, 112], "onward": 101, "opac": [36, 37], "opaqu": 42, "open": [0, 39, 42, 43, 44, 50, 51, 52, 69, 71, 115, 116], "openbiosim": [23, 24, 28, 31, 43, 45, 46, 47, 52, 65, 68, 74], "openbla": 36, "opencl": [23, 24, 31, 38], "openli": 0, "openmm": [2, 3, 23, 24, 25, 31, 34, 36, 37, 50, 51, 53, 60, 61, 62, 99, 101, 102, 105, 106, 107, 108, 109, 113], "openmm_to_sir": [3, 7], "openmmexcept": 105, "openmmfreenergst": 36, "openmmfreenergyst": 36, "openmmmd": [25, 36], "openmmmetadata": [3, 7, 36], "openmmml": 114, "openmmmolecul": 3, "openmmpmefep": 36, "openmmtool": 36, "openmp": 36, "oper": [0, 23, 24, 36, 37, 41, 45, 52, 54, 71, 72, 73, 74, 75, 80, 82, 83, 94, 98], "opl": 36, "opposit": 94, "optimis": [36, 114], "option": [1, 2, 3, 20, 22, 23, 24, 25, 26, 28, 31, 33, 36, 37, 39, 40, 42, 52, 57, 65, 94, 95, 96, 97, 99, 101, 102, 104, 105, 106, 108, 113, 114, 115], "orchid": 42, "order": [0, 2, 3, 21, 22, 23, 24, 25, 26, 31, 36, 39, 40, 41, 42, 45, 50, 55, 69, 71, 73, 82, 83, 85, 90, 97, 98, 102, 104, 105, 113, 114, 115, 116], "orer": 24, "org": [0, 23, 24, 28, 31, 36, 43, 47, 48, 51, 52, 57, 65, 68, 74, 95], "organis": [22, 36], "orient": [43, 102], "orig_": 107, "origin": [0, 2, 20, 24, 28, 34, 36, 39, 45, 47, 61, 82, 89, 93, 99, 105, 107, 111, 114, 116], "orthoganol": 34, "orthograph": [23, 24, 42], "oscil": [34, 36], "osx": 52, "other": [0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 28, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 51, 52, 54, 55, 57, 71, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114], "otherwis": [0, 2, 3, 22, 24, 26, 30, 31, 42, 43, 57, 65, 90], "ounc": 41, "our": [36, 44, 46, 48, 52, 54, 70, 94, 100, 101, 106, 107, 109, 112, 113, 114, 116], "ourselv": 45, "out": [0, 28, 32, 36, 39, 40, 41, 42, 44, 46, 47, 69, 70, 71, 75, 80, 90, 96, 97, 105, 106, 107, 108, 110], "outcom": 48, "outdir": 33, "output": [0, 3, 4, 20, 22, 24, 25, 28, 31, 32, 33, 36, 40, 41, 45, 69, 72, 102, 104, 105, 106, 109, 115], "outsid": [37, 39, 45, 101, 102, 107, 116], "over": [1, 23, 24, 31, 32, 34, 36, 40, 42, 47, 66, 82, 83, 85, 86, 87, 88, 91, 92, 94, 99, 101, 102, 104, 105, 112, 114, 115, 116], "overflow": 36, "overhaul": 36, "overhead": [24, 36], "overlap": 111, "overload": [2, 34], "overrid": [23, 24, 31, 38, 42, 99], "overridden": [23, 24, 26, 31], "overview": [50, 52], "overwrit": 24, "overwritten": 21, "ow": 80, "own": [0, 1, 2, 36, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 71, 72, 73, 74, 75, 80, 83, 85, 86, 87, 88, 91, 92, 101, 103, 105, 111, 114], "owner": 0, "oxygen": [39, 53, 75, 79, 80, 81, 82, 89, 94, 98, 100, 102], "oz": 36, "p": [22, 24, 33, 34, 36, 38, 39, 40, 41, 52, 58, 69, 82, 90, 95, 99, 101, 104, 105, 107, 109, 111], "p38": 53, "p_omm": [107, 112], "pa": 41, "pacakg": 114, "packag": [0, 33, 36, 37, 45, 46, 48, 50, 51, 55, 71, 74, 95, 96, 99, 104, 109, 113, 114], "package_registri": 33, "pad": 33, "page": [0, 1, 36, 40, 45, 46, 48, 51, 52, 54, 71, 98], "page_s": 1, "pagecach": [1, 5, 36, 37], "pages": 1, "pair": [1, 3, 23, 25, 26, 36, 38, 39, 45, 76, 84, 90, 91, 99, 102, 116], "pairmatrix": 34, "palmer": [36, 49], "panda": [2, 3, 22, 24, 25, 28, 31, 36, 53, 92, 101, 104, 106, 114], "panel": [33, 116], "paolo": 51, "paper": [51, 104], "par": 34, "parallel": [21, 28, 36, 37, 115], "parallelis": [0, 36], "param": [28, 38], "paramet": [2, 3, 20, 22, 23, 24, 25, 26, 28, 31, 36, 38, 41, 42, 45, 50, 53, 58, 70, 75, 81, 82, 84, 88, 95, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 114], "parameter": 51, "parameteris": [50, 60, 84, 91, 95], "parameters0": 106, "parameters1": 106, "parent": [1, 23, 24, 33, 36, 71, 72, 73, 74, 75], "parm": 36, "parmet": [23, 24, 31], "pars": [0, 21, 32, 36, 41, 45, 95], "parse": 28, "parse_error": 40, "parse_warn": 21, "parseabl": 41, "parser": [4, 21, 29, 36, 40, 41, 51, 52, 70], "parsewarn": 21, "part": [0, 2, 22, 23, 24, 25, 28, 34, 36, 37, 39, 40, 41, 42, 44, 45, 48, 50, 51, 55, 80, 96, 102, 103, 108, 112, 113], "partial": [42, 113], "partialmolecul": 24, "particip": 43, "particl": [23, 99, 102, 105, 111], "particle_mesh_ewald": 38, "particleexcept": 105, "particular": [0, 36, 39, 40, 42, 45, 69, 82, 90, 95, 102], "particulari": [72, 73, 75, 115], "particularli": [36, 38, 72, 74, 75, 82, 95], "pascal": 41, "pass": [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 45, 47, 48, 53, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 89, 90, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 109, 110, 111, 112, 113], "password": 47, "past": [24, 25, 36, 50, 112], "patch": [36, 47, 48], "path": [20, 25, 28, 36, 40, 42, 45, 47, 52, 65, 67, 96], "patient": [52, 54], "pattern": 39, "paus": 42, "pd": [90, 104], "pdb": [8, 20, 21, 24, 28, 36, 40, 53, 57, 67, 69, 70, 90, 100], "pdb2": [21, 36], "pdb_00003nss": [36, 65], "pdbx": [0, 8, 21, 36, 51, 57, 65, 70, 95], "pdbxmmcif": 21, "pdf": [42, 51, 96], "peek": 36, "peg": [72, 73], "peopl": [35, 36, 45, 48, 49], "pep8": [36, 44, 45], "peptid": 96, "per": [1, 2, 23, 24, 26, 39, 41, 42, 48, 58, 81, 82, 83, 85, 86, 87, 88, 91, 99, 104, 105, 107], "perfect": 44, "perform": [0, 2, 22, 23, 24, 25, 28, 31, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 59, 60, 63, 75, 76, 82, 92, 93, 94, 95, 97, 99, 101, 102, 103, 109, 112, 113, 114, 115, 116], "perhap": [23, 24, 48, 75], "period": [0, 3, 23, 24, 28, 31, 34, 36, 38, 39, 40, 42, 48, 90, 99], "periodicbox": [19, 34, 38], "periodicity0": [109, 110, 111], "periodicity1": [109, 110, 111], "periodictorsionforc": 107, "perman": [36, 43], "permiss": [0, 43, 46], "permit": 0, "person": [43, 47], "perspect": [23, 24, 42, 84], "pert": [100, 106, 110], "pert_mol": 107, "pert_mol_id": 2, "pert_omm": 106, "pert_prot": 112, "pertfil": [25, 36, 55, 62], "perturb": [2, 3, 12, 23, 24, 25, 28, 31, 36, 38, 50, 55, 61, 62, 100, 103, 107, 108, 109, 111, 112, 113, 114], "perturbable_constraint": [23, 24, 25, 31, 36, 38, 105, 116], "perturbableopenmmmolecul": [3, 7, 25, 36, 106, 107, 109], "perturbed_is_annihil": 2, "perturbed_is_decoupl": 2, "perurb": 38, "peter": 0, "peturb": 103, "phase": [3, 23, 34, 36, 38, 104, 105], "phase0": [109, 110, 111], "phase1": [109, 110, 111], "phe": [72, 73, 75, 80], "phi": [23, 58, 84, 115], "phi0": [26, 102], "phi_": 115, "phi_index": 115, "phrase": [72, 73, 75], "phy": 102, "physic": [4, 23, 34, 36, 41, 43, 50, 51, 85, 86, 87, 88], "physunit": [22, 23, 24, 34, 41], "pi": [9, 22, 115], "pick": [39, 104], "pickl": [1, 4, 36], "picklabl": 40, "picomet": [17, 32, 36, 39, 41, 85, 89, 90], "picosecond": [24, 32, 38, 40, 41, 69, 99, 101, 113, 114], "piec": [1, 24, 47, 54], "pin": [36, 52], "pint": [36, 37], "pip": [33, 52, 114], "pipelin": [0, 36], "pixel": [42, 96], "place": [1, 20, 23, 24, 28, 31, 34, 36, 39, 40, 41, 45, 52, 54, 71, 75, 81, 89, 90, 94, 95, 103, 113], "plai": [36, 40, 42, 45, 48, 92, 99], "plain": [36, 41, 85, 86, 87, 88], "plainli": 0, "plan": [48, 52, 95, 96, 113, 114], "planar": [79, 88], "plane": [22, 34, 79], "platform": [3, 4, 23, 24, 31, 36, 38, 47, 48, 95, 101, 102, 113, 114, 115, 116], "playabl": 36, "playback": 42, "player": 42, "pleas": [36, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 80, 95, 102], "plor": [40, 70], "plot": [2, 92, 101, 103, 104, 105, 107, 108, 111, 114], "plot_converg": [104, 105], "plotter": 0, "plu": [24, 25, 36, 51, 52, 62, 69, 91, 95, 99, 102, 104, 105, 110, 112], "plugin": 36, "plural": 41, "pm": [41, 85, 89], "pme": [23, 24, 31, 36, 38, 99, 114], "pmemd": 36, "pmf": 101, "png": [42, 96], "podman": 52, "point": [2, 3, 4, 22, 23, 24, 28, 31, 34, 36, 39, 41, 42, 44, 48, 52, 80, 90, 92, 99, 101, 102, 104, 105, 114], "point0": [22, 34], "point1": [22, 34], "point2": [22, 34], "point3": [22, 34], "pointer": [3, 24, 36], "polici": 43, "polit": 43, "polynomi": 0, "pommier": 0, "poor": 36, "popul": [3, 34, 36], "popular": [50, 60, 69, 90], "port": [28, 36, 46, 48, 52], "portabl": [45, 100], "portion": 36, "pos_rest": [102, 103], "posit": [2, 13, 23, 24, 25, 26, 34, 36, 39, 41, 43, 80, 81, 93, 103, 111, 113, 114, 115, 116], "positional_restraint": 103, "positionalrestraint": [102, 103], "positive_ion": 80, "posses": 24, "possibl": [0, 1, 2, 22, 28, 34, 36, 39, 44, 45, 48, 70, 71, 75, 97, 114, 115], "possibli": 104, "post": [0, 35, 43, 46, 54, 98, 115], "potassium": 24, "potenti": [3, 22, 23, 24, 26, 31, 36, 38, 39, 40, 42, 55, 62, 84, 95, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116], "pound": 41, "pow": 2, "power": [2, 4, 23, 24, 28, 31, 36, 37, 38, 50, 51, 60, 71, 80, 90, 95, 98, 108, 114], "powerfunct": 2, "powerpc": [45, 52], "pp": 0, "ppxasjsm": [36, 49], "pr": 36, "practic": [74, 109, 115], "pre": [36, 39, 52, 100], "preced": [1, 38, 39], "preceed": [42, 48], "precis": [22, 23, 24, 31, 34, 36, 38, 40, 41, 85, 86, 87, 88, 89, 114], "preclud": 24, "predominantli": [45, 50], "prefer": [39, 45, 100, 105, 106], "prefix": [1, 36, 37, 45], "prefixkei": 1, "prematch": [25, 28], "prepar": 100, "prepend": [2, 28, 101], "prepend_stag": [2, 101, 108], "prependstag": 2, "preprint": 115, "presenc": [85, 86, 87, 88], "present": [2, 36, 42, 50, 114], "preserv": [36, 48, 70, 95, 109, 111, 116], "pressur": [3, 23, 24, 31, 36, 38], "pretti": 41, "prettier": [36, 42, 90], "pretty_plot": [90, 92, 99], "prevent": [25, 34, 36, 45, 88, 94, 102, 111, 116], "previou": [36, 42, 52, 104, 105, 115], "previous": [36, 99], "primari": [4, 28], "primarili": 95, "princip": 22, "principl": 70, "print": [0, 20, 26, 28, 32, 33, 36, 38, 39, 40, 41, 42, 52, 53, 57, 58, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 116], "print_except": 33, "prior": 0, "prioriti": 45, "privat": [24, 36, 43, 45], "prm": [8, 21, 36, 40, 69, 70, 115, 116], "prm7": [45, 70, 109, 111, 114, 116], "prmtop": [36, 70, 114], "prmtop7": 70, "pro": [72, 75, 80], "probabl": [3, 36], "problem": [24, 36, 46, 47, 54, 55, 92, 105], "procedur": 45, "process": [3, 24, 34, 35, 36, 39, 40, 45, 47, 48, 82, 93, 99, 109, 111, 112, 115], "processor": [0, 45, 52], "procur": 0, "produc": [0, 22, 36, 52, 101, 105], "product": [0, 2, 36, 45, 47, 52, 115], "profession": 43, "profil": [18, 33, 116], "profit": [0, 51], "program": [0, 24, 36, 40, 45, 51, 75], "programmat": 92, "programoutput": 45, "progress": 36, "progressbar": 36, "project": [0, 36, 43, 51], "prominantli": 45, "promot": 0, "prompt": 52, "proper": [4, 36], "properli": [36, 41, 42, 104], "properti": [1, 3, 4, 5, 20, 21, 22, 23, 24, 25, 28, 31, 36, 37, 38, 40, 42, 44, 50, 51, 55, 90, 93, 95, 98, 99, 100, 101, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116], "property_as_properti": 24, "property_as_vari": 24, "property_kei": [1, 22, 23, 24, 31, 58, 84, 85, 106], "property_map0": 24, "property_map1": 24, "property_typ": [1, 23, 24], "propertyasproperti": 24, "propertyasvari": 24, "propertykei": [1, 22, 23, 24], "propertylist": [1, 3], "propertymap": [1, 3, 5, 21, 23, 24, 36], "propertymap0": 24, "propertymap1": 24, "propertymappropertynam": 1, "propertynam": [1, 22, 23, 24], "propertyptr": 24, "propertytyp": [1, 23, 24], "propog": 36, "propos": [44, 46], "propptr": [21, 23, 24, 34], "protect": 45, "protein": [23, 24, 25, 26, 36, 37, 42, 50, 57, 62, 70, 71, 72, 73, 74, 75, 80, 83, 90, 96, 102, 116], "protocol": [104, 105], "protom": 36, "proton": [24, 36, 39, 41, 72], "prototyp": [51, 61, 113], "provid": [0, 1, 2, 3, 4, 22, 23, 24, 25, 28, 31, 33, 34, 36, 38, 40, 42, 45, 51, 52, 54, 80, 82, 85, 86, 87, 91, 95, 97, 98, 99, 100, 101, 102, 104, 105, 110, 113, 114, 115], "proxi": [38, 95], "pseudo": 0, "psf": [0, 8, 21, 70, 74, 83], "psi": [41, 115], "psi_index": 115, "pt": 114, "ptosco": [36, 49], "pub": [36, 51], "public": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 36, 43, 45], "publicli": 36, "publish": [43, 104, 105], "pull": [36, 44, 45, 46, 47, 48, 49, 102, 105, 110], "pure": [45, 114], "purpos": [0, 59], "push": [45, 47], "put": [1, 28, 36, 39, 53, 57, 97, 98, 102, 104, 105], "py": [36, 44, 45, 47, 52, 71, 74], "py310hf95ea87_25": 52, "py37": 36, "py_object": 113, "pybind11": 0, "pymbar": 36, "pypdb": 36, "pypi": 0, "pytest": [36, 45, 46, 80], "python": [1, 3, 4, 24, 28, 36, 37, 40, 46, 47, 50, 51, 52, 55, 56, 58, 60, 64, 67, 71, 80, 81, 82, 95, 101, 104, 105, 109, 113, 114, 115], "python3": [71, 74], "pytorch": 114, "q": [22, 32, 41], "q3": 36, "q4": 36, "q_i": 108, "q_j": 108, "qalgorithm": 36, "qhash": [1, 3, 22, 23, 24], "qlist": [2, 3, 21, 23, 24, 34], "qm": [23, 24, 31, 36, 51, 55, 115, 116], "qm_engin": [23, 24, 31, 113, 114, 116], "qm_mol": [113, 114, 115, 116], "qmmmengin": [23, 24, 31], "qregularexpress": 71, "qset": [3, 27], "qstring": [1, 2, 3, 21, 22, 23, 24, 27, 34, 36], "qstringlist": [1, 2, 21, 22, 23, 24], "qt": [36, 39], "quad": [78, 79], "quadrat": 114, "quadratur": 105, "qualiti": 46, "quantiti": [4, 24, 32, 36, 41], "quantomm": 36, "quantum": 63, "quarter": 48, "quarterli": 36, "quaternion": [22, 24, 93], "quecto": 41, "queri": [36, 38, 39, 41, 85, 86, 87, 98, 99], "question": [43, 105], "quetta": 41, "quick": [0, 24, 50, 80, 90], "quicker": [36, 45, 104], "quickli": [0, 24, 36, 44, 45, 47, 48, 90, 104, 105, 113], "quickstart": [36, 52], "quit": [36, 40, 52, 95, 109, 116], "quot": 104, "qvariant": 24, "qvector": [2, 3, 21, 22, 23, 24, 34], "r": [23, 58, 84, 108, 116], "r0": [23, 24, 26, 31, 36, 102, 103, 116], "r1": [102, 116], "r2": 102, "r3": 102, "race": 43, "rad": [26, 41, 102, 106], "radian": [22, 24, 32, 41, 86, 87, 88, 93, 106], "radii": [36, 58], "radiu": [22, 24, 39, 82, 83, 102, 116], "rais": [2, 3, 21, 23, 24, 28, 33, 34, 36, 37, 40, 44, 45, 46, 48, 71, 72, 74, 76, 77, 78, 79, 85, 94, 95, 97, 100, 102, 105], "rand": 22, "rand53": 22, "rand_bool": 22, "rand_int": 22, "rand_int64": 22, "rand_norm": 22, "randbool": 22, "randint": 22, "randint64": 22, "randnorm": 22, "random": [0, 22, 24, 25, 34, 36, 40, 42, 101, 104, 105], "random_se": 24, "randomise_veloc": [24, 104, 105], "randomli": 24, "rang": [2, 24, 34, 36, 39, 45, 52, 66, 71, 72, 73, 75, 90, 91, 93, 94, 104, 105, 114, 115, 116], "rangener": [9, 22, 25, 34], "rapidli": 4, "rare": [4, 24], "rare_earth": 24, "rareearth": 24, "ratchet": 24, "ratchet_frequ": 24, "ratchet_scal": 24, "rather": [1, 24, 34, 36, 38, 80, 82, 95, 104, 105, 107, 111, 113, 114], "ration": 2, "raw": [1, 3, 36, 40, 82, 106], "rcsb": [57, 65, 95], "rd_methan": 109, "rd_neopentan": 109, "rdchem": 95, "rdkit": [3, 24, 28, 36, 39, 42, 50, 51, 52, 53, 60, 96, 97, 109], "rdkit_mol": 95, "rdkit_to_sir": [3, 7], "rdmol": 53, "re": [2, 36, 39, 40, 42, 45, 66, 72, 81, 83, 89, 94, 95, 99, 101, 104], "reach": [24, 90], "reaction": [36, 38, 55, 63, 99], "reaction_field": [38, 99], "reactiv": 36, "read": [0, 3, 4, 21, 31, 34, 36, 40, 44, 50, 52, 68, 69, 70, 95, 114], "read_structur": 95, "readabl": [21, 41], "reader": [21, 36], "readi": [25, 36, 47, 48, 95, 115, 116], "readili": 36, "readmolecul": 95, "readthedoc": 115, "real": [2, 22, 24, 36, 88, 108, 111], "real_atom_num": 36, "realli": [0, 22, 36, 40, 41, 42, 44, 45, 54, 101, 105, 109], "rearrang": 2, "rearrangement_error": 2, "reason": [28, 43, 45, 104], "rebuild": 36, "recalcul": 105, "receiv": [1, 94], "recent": [36, 52, 63, 71, 72, 74, 115], "receptor": [26, 102], "recharg": [2, 101], "recharge_nam": 2, "recip": [36, 47], "recognis": [36, 41, 42, 46, 49, 90, 95], "recombin": [36, 38, 50, 95], "recommend": [1, 23, 24, 31, 36, 40, 42, 44, 45, 52, 96, 109, 110, 113, 114], "recompil": [36, 45], "reconstruct": 36, "record": [21, 22, 33, 36, 113, 114], "recov": [36, 40, 95], "recreat": 116, "rectifi": 48, "recurs": 1, "red": [24, 42], "redefin": 39, "redirect": [33, 36, 48, 52], "redirect_output": 33, "redistribut": [0, 116], "redistribute_charg": 116, "reduc": [23, 24, 31, 34, 36, 45, 64, 68, 81, 85, 86, 87, 88, 99, 104, 105], "reduct": [23, 24, 31, 34, 36, 81], "reduction_func": [23, 24], "ref": 106, "ref_mol": [40, 109], "ref_prot": 112, "refer": [0, 2, 3, 22, 23, 24, 25, 28, 31, 36, 38, 40, 42, 53, 75, 80, 90, 100, 101, 104, 106, 108, 109, 110, 115, 116], "referenec": 3, "refin": [36, 95], "reflect": [24, 95, 105], "refurbish": 36, "regard": [36, 43, 45], "regardless": 43, "regim": 36, "region": [63, 113, 114, 115, 116], "regist": [114, 115], "regress": 36, "regular": [36, 39, 48, 98, 113, 115], "regularli": 47, "reinitialias": 36, "reinitialis": 36, "reinstal": 104, "reject": [25, 43], "rel": [26, 36, 38, 39, 45, 50, 53, 94, 102, 104, 105, 109, 111], "relat": [36, 95, 99, 105, 109], "relative_mass": 94, "relative_numb": 94, "relax": 36, "releas": [0, 22, 26, 35, 36, 45, 46, 51, 52, 54, 95, 102], "relev": 74, "reli": 36, "religion": 43, "reload": [69, 114], "remain": [36, 45, 94, 113, 116], "remap": 36, "remark": 105, "rememb": [0, 39, 41, 42, 45, 49, 54, 95], "remind": 109, "remot": 45, "remov": [0, 1, 2, 3, 20, 22, 24, 25, 31, 36, 38, 42, 43, 44, 52, 68, 82, 90, 96, 104, 106, 108], "remove_all_link": 1, "remove_all_metadata": 1, "remove_all_shared_properti": 31, "remove_equ": 2, "remove_forc": 2, "remove_ghost": [25, 106], "remove_lev": 2, "remove_link": 1, "remove_metadata": 1, "remove_molecule_schedul": 2, "remove_properti": [1, 22], "remove_shared_properti": [31, 36], "remove_stag": 2, "removealllink": 1, "removeallmetadata": 1, "removeequ": 2, "removeforc": 2, "removelev": 2, "removelink": 1, "removemetadata": 1, "removemoleculeschedul": 2, "removeproperti": [1, 22], "removestag": 2, "renam": [24, 33, 39, 69], "render": [33, 36, 42, 60, 96], "render_imag": 42, "renumb": [24, 36], "reorder": 36, "rep4_mol": 105, "repart": 105, "repartit": [25, 36], "repartition_hydrogen_mass": [12, 25, 36, 105], "repartitioned_mol": 105, "repartitionmass": 25, "repeat": [22, 24, 36, 80, 105], "repercuss": 43, "replac": [1, 2, 22, 23, 24, 25, 31, 36, 40, 45, 52], "replic": 34, "replica": [25, 34], "replica0": 25, "replica1": 25, "replica_exchang": [12, 25, 36], "repo": [36, 45, 46, 47], "report": [0, 21, 36, 43, 85, 86, 87, 88, 104], "repositori": [36, 47, 48, 95], "repres": [2, 4, 21, 22, 23, 24, 25, 34, 36, 40, 41, 42, 43, 50, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 89, 93, 97, 100, 101, 106, 107, 108, 109, 111], "represent": [0, 1, 2, 21, 22, 23, 24, 31, 34, 36, 37, 41, 43, 50, 51, 95, 104], "represnet": 50, "reproduc": [0, 22, 36, 54], "request": [24, 31, 36, 38, 44, 45, 46, 47, 48, 49, 71, 80, 95], "requir": [0, 23, 24, 28, 31, 36, 38, 45, 52, 75, 104, 111, 113, 114], "requires_grad": 114, "res_fram": 90, "res_idx": 24, "rescal": [2, 3, 24, 25], "rescale_veloc": [3, 24, 25], "research": [0, 51], "reseditor": 24, "reserv": 0, "reset": [1, 23, 24, 31, 36, 80, 82, 85, 89, 90], "reset_biological_el": 24, "resetbiologicalel": 24, "resid": [1, 23, 24, 40, 72, 73], "residi": 39, "residu": [11, 23, 24, 25, 28, 31, 36, 37, 42, 50, 55, 57, 58, 59, 62, 65, 66, 71, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 98, 102, 109, 116], "residue_cent": 83, "residue_radiu": 83, "residx": [11, 24, 39, 42, 72, 75, 76, 77, 78, 79, 91, 96, 97], "residxatomcoordmatch": 36, "resnam": [11, 24, 26, 39, 42, 72, 73, 74, 75, 94, 102, 109, 112], "resnum": [11, 24, 39, 72, 76, 80, 81, 85, 86, 87], "resolv": [20, 42, 45, 47, 97], "resolve_path": [8, 20], "resort": 45, "resourc": [54, 104], "respect": [2, 34, 43, 54, 102, 107, 108, 114, 115], "respond": 36, "resproperti": 24, "respropertyproperti": 83, "rest": [23, 24, 42, 63, 93, 105, 108, 111], "restaint": 23, "restart": [21, 24, 36, 40, 70, 95, 114], "restor": [1, 2, 34, 36, 41], "restrain": [23, 26, 36, 102, 104], "restraint": [3, 4, 23, 24, 25, 26, 29, 31, 36, 38, 55, 61, 95, 111, 116], "restraint_force0": 116, "restraint_force1": 116, "restraints_off": 103, "restraints_on": 103, "restrict": [0, 28, 36, 116], "result": [2, 3, 4, 22, 23, 24, 25, 28, 31, 36, 38, 39, 40, 42, 43, 45, 47, 51, 53, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 100, 101, 104, 105, 108, 111, 114, 116], "resurg": 63, "retain": [0, 106], "retriev": [1, 2, 39, 58], "retun": 39, "return": [1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 45, 52, 53, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 101, 102, 104, 105, 106, 109, 111, 113, 114, 115], "return_as_system": [24, 104, 105], "revers": [22, 39, 40, 42, 71, 73, 101], "review": [43, 44, 47, 48], "rework": 36, "rewrit": 36, "rewrot": 36, "rf": [23, 24, 31, 38, 105, 116], "rgb": [24, 42], "rhombic": 34, "rhombic_dodecahedron_hexagon": 34, "rhombic_dodecahedron_squar": 34, "rhombicdodecahedronhexagon": 34, "rhombicdodecahedronsquar": 34, "ribbon": [23, 24, 42], "rich": [33, 36], "richard": 0, "right": [0, 22, 34, 36, 38, 41, 43, 45, 71, 94, 104, 105, 108, 116], "rigid": 36, "ring": [36, 62], "risk": [52, 85, 86, 87, 88, 102, 104], "rjwagner": 0, "rmin": 23, "rmsd": [0, 24, 36, 40, 94, 109], "rna": 42, "roadmap": [46, 51], "robust": [36, 41, 89, 109], "robustli": 36, "rocket": [23, 24, 42], "root": [2, 28, 36, 40, 47, 90, 94], "root_directori": 1, "rootdirectori": 1, "rope": [23, 24, 42], "rotat": [9, 22, 24, 34, 36, 42, 59, 94], "rotate_veloc": 24, "rotation_cent": 22, "rotation_matrix": [22, 34], "rotation_quaternion": 22, "rotationcent": 22, "rotationmatrix": [22, 34], "rotationquaternion": 22, "rotmat": 93, "roughli": [36, 44], "round": [2, 22, 34, 39, 41], "rout": [39, 52, 72, 73, 75, 81, 101], "routin": [0, 36], "row": [22, 24, 33, 40, 90, 92, 107, 111], "row0": 22, "row1": 22, "row2": 22, "rst": [8, 21, 36, 40, 47, 69, 70, 109, 111], "rst7": [8, 21, 36, 70, 114, 116], "rudimentari": 36, "rule": [23, 33, 36, 39, 41, 105], "run": [0, 2, 3, 21, 23, 24, 31, 33, 36, 37, 40, 42, 44, 46, 47, 50, 51, 53, 54, 55, 61, 62, 65, 75, 90, 95, 96, 97, 99, 101, 102, 103, 112], "run_constrain": 36, "run_tim": 105, "runtim": [24, 36], "runtimeerror": 105, "ryckaert": 36, "s3": [25, 36, 53, 100, 101, 103, 104, 105], "s3file": 105, "safe": [22, 28, 36, 107], "safest": 102, "sai": [24, 25, 36, 84, 109], "same": [3, 22, 23, 24, 25, 26, 31, 34, 36, 38, 39, 40, 41, 42, 52, 69, 70, 71, 74, 75, 76, 80, 82, 83, 85, 89, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 113, 115, 116], "sampl": [101, 104, 105, 116], "sander": [114, 115, 116], "sandwich": [2, 101], "sanit": 97, "saniti": 28, "sanitis": 36, "satisfi": 102, "save": [1, 3, 4, 15, 23, 24, 28, 30, 31, 33, 36, 37, 45, 50, 51, 55, 59, 68, 82, 94, 95, 96, 99, 100, 101, 104, 105, 114, 115, 116], "save_fram": [23, 24, 31, 40, 93, 94], "save_frequ": [23, 24, 31, 38, 53, 99, 101, 104, 105], "save_to_str": [4, 28, 36, 67], "save_veloc": [23, 24, 31, 38], "savefram": [23, 24], "saw": [62, 98, 107], "scalar": 41, "scale": [2, 3, 23, 24, 31, 32, 34, 36, 38, 41, 58, 84, 101, 103, 107, 108, 111, 114], "scan": [36, 59, 82], "scanhead": 36, "schedul": [2, 3, 23, 24, 31, 36, 38, 55, 62, 103, 108, 111], "scheme": [36, 42, 47, 99, 105], "scienc": 0, "scipi": 0, "score": 36, "scratch": 36, "screen": [20, 33, 36, 90, 96], "script": [0, 28, 36, 40, 42, 45, 51, 52, 53, 58, 75, 89, 95, 114], "script_model": 114, "scroll": 42, "sd": 71, "sdf": [8, 21, 24, 28, 36, 40, 65, 68, 70, 85, 100], "sdf_field": 85, "sdk": 52, "search": [3, 4, 23, 24, 27, 29, 31, 36, 37, 42, 45, 50, 51, 52, 53, 55, 60, 65, 77, 78, 79, 85, 86, 87, 88, 90, 95, 102, 105, 113, 114], "search_str": [23, 24], "search_term": 80, "searcher": 39, "second": [24, 25, 32, 34, 35, 41, 45, 48, 69, 75, 76, 78, 79, 81, 88, 90, 93, 96, 98, 101, 103, 104, 105, 108, 112, 113, 114, 115, 116], "section": [33, 35, 41, 42, 90, 99, 104, 105, 106, 107, 113, 114, 115, 116], "secur": [0, 36], "see": [0, 3, 22, 23, 24, 31, 34, 36, 39, 40, 41, 42, 43, 44, 45, 48, 52, 53, 54, 58, 59, 62, 65, 75, 89, 90, 91, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114], "seed": [22, 24, 36], "seed_glob": 22, "seedglob": 22, "seekabl": 40, "seem": 25, "seen": [24, 44, 45, 82, 89, 95, 98, 105, 106], "seg": [24, 39, 83], "seg_atom_count": 83, "segeditor": 24, "segfault": 36, "segid": [4, 23, 24, 28, 74], "segidx": [11, 24, 39, 74], "segintproperti": 83, "segment": [11, 23, 24, 28, 31, 36, 39, 55, 57, 58, 66, 76, 77, 78, 79, 80, 85], "segnam": [11, 24, 39, 74], "segproperti": 24, "select": [23, 24, 31, 36, 38, 40, 42, 53, 69, 76, 93, 95, 102, 112, 113, 114, 115, 116], "select_al": [23, 24], "select_all_atom": [23, 24], "select_all_chain": [23, 24], "select_all_cutgroup": [23, 24], "select_all_residu": [23, 24], "select_all_seg": [23, 24], "selectal": [23, 24], "selectallatom": [23, 24], "selectallchain": [23, 24], "selectallcutgroup": [23, 24], "selectallresidu": [23, 24], "selectallseg": [23, 24], "selected_al": [23, 24], "selectedal": [23, 24], "selection_to_atom": [11, 24], "selector": [23, 24, 26, 39, 53, 71, 72, 73, 74, 75, 80, 82, 97, 98, 109], "selector_atom_": [23, 24, 71, 72, 75], "selector_chain_": [23, 24, 73], "selector_cutgroup_": [23, 24], "selector_residue_": [23, 24, 72], "selector_segment_": [23, 24, 74], "selectorangl": [10, 23, 77, 86, 90], "selectorbond": [10, 23, 36, 53, 76, 80, 85, 90, 98], "selectordihedr": [10, 23, 78, 87], "selectorimprop": [10, 23, 36, 79, 88], "selectorm": [3, 23, 24, 36, 75, 80, 102], "selectorm_atom_": [3, 24, 75], "selectorm_atoms_": 24, "selectorm_chain_": 24, "selectorm_cutgroup_": [23, 24], "selectorm_residue_": 24, "selectorm_segment_": 24, "selectormangl": [10, 23, 77], "selectormbond": [10, 23, 36, 53, 76], "selectormdihedr": [10, 23], "selectormimprop": [10, 23], "selectormol": [3, 11, 23, 24, 31, 36, 53, 75, 80, 95], "selectresult": [23, 24], "self": [3, 23, 24, 34], "semi": 36, "send": [0, 36], "sens": [34, 84, 85, 86, 87, 88, 112], "sensibl": [34, 36, 38, 111], "sensibli": 90, "sensit": [28, 41, 104, 105], "sent": [33, 36], "separ": [36, 42, 43, 44, 48, 68, 103, 107, 108], "septemb": 48, "sequenc": [22, 69, 96], "sequenti": [48, 115], "ser": [72, 73, 75, 80], "seri": [2, 36, 38, 40, 48, 104], "serial": [21, 36], "serialis": 114, "server": [45, 51, 52], "servic": [0, 52], "session": [31, 52, 64, 75], "set": [1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 46, 52, 61, 62, 69, 71, 72, 73, 74, 75, 80, 82, 83, 85, 86, 87, 88, 89, 90, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114], "set_approx_epsilon": [14, 27, 39, 80], "set_const": 2, "set_constraint_indici": 3, "set_debugging_en": 33, "set_default_equ": [2, 107], "set_default_num_thread": [4, 28], "set_default_stage_equ": 2, "set_default_unit": [17, 32, 36, 41], "set_dimens": 34, "set_element_is_biolog": 24, "set_element_is_not_biolog": 24, "set_energy_trajectori": 31, "set_energy_unit": [17, 32, 41, 85, 91], "set_ensembl": [24, 31], "set_equ": [2, 36, 101, 103, 107, 108], "set_exception_indici": 3, "set_force_index": 3, "set_header_properti": [15, 30], "set_index": 90, "set_internal_unit": [17, 32, 36, 41, 85, 89, 90, 91], "set_lambda": [3, 24, 25, 101], "set_lambda_schedul": [3, 101], "set_length": 94, "set_length_unit": [17, 32, 85, 89, 90, 93], "set_mass_unit": [17, 32, 41], "set_max_num_thread": [4, 28], "set_max_page_s": 1, "set_max_resident_pag": 1, "set_metadata": [1, 31, 95], "set_min_protein_residu": [14, 27, 39, 75, 80], "set_molecule_schedul": [2, 107], "set_nam": [23, 24], "set_numb": 24, "set_paramet": 42, "set_platform_properti": 3, "set_potenti": 36, "set_pressur": [3, 24], "set_properti": [22, 31, 116], "set_protein_residue_nam": [14, 27, 39, 75, 80], "set_quantity_unit": [17, 32], "set_root_directori": [1, 40], "set_schedul": [3, 24, 101, 107], "set_shared_properti": 31, "set_si_unit": [17, 32, 36, 41, 85, 89, 91], "set_siz": 94, "set_spac": [31, 36], "set_stat": 22, "set_temperatur": [3, 24], "set_them": 33, "set_tim": [31, 36], "set_time_unit": [17, 32], "set_to_ident": 22, "set_token": [14, 27, 39, 80], "set_use_parallel": 21, "set_volum": 34, "set_xlabel": 90, "set_ylabel": 90, "setconst": 2, "setconstraintindici": 3, "setdefaultstageequ": 2, "setdimens": 34, "setelementisbiolog": 24, "setelementisnotbiolog": 24, "setequ": 2, "setexceptionindici": 3, "setforceindex": 3, "setlambda": 3, "setmaxpages": 1, "setmaxresidentpag": 1, "setmetadata": 1, "setmoleculeschedul": 2, "setnam": 23, "setparamet": 115, "setparticleparamet": 114, "setposit": [114, 115, 116], "setproperti": 22, "setrootdirectori": 1, "setschedul": 3, "setstat": 22, "settoident": 22, "setup": [36, 45, 52, 61, 95], "setuseparallel": 21, "setvolum": 34, "seven": 41, "sever": [36, 39, 42, 48, 71, 75, 82, 99], "sex": 43, "sexual": 43, "sg": [71, 90], "shall": 0, "shape": [20, 109], "share": [22, 28, 31, 34, 36, 45, 52, 54], "shared_properti": 31, "shawn": 0, "sheet": 36, "shell": [42, 45, 96], "shift": [108, 113], "shift_coulomb": [23, 24, 31, 36, 38, 108], "shift_delta": [23, 24, 31, 38, 101, 108], "shift_lj": 108, "short": [36, 41, 46, 47, 48, 53, 96, 104, 105, 114, 116], "shorten": [39, 80], "shorter": 105, "shortest": 34, "shorthand": [39, 71, 81], "should": [1, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 41, 42, 45, 47, 48, 52, 64, 70, 75, 94, 95, 99, 100, 101, 102, 104, 105, 106, 109, 111, 113, 115, 116], "shouldn": [0, 28, 47], "show": [0, 23, 24, 35, 36, 39, 42, 43, 63, 64, 65, 69, 89, 96, 100, 101, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116], "show_edg": 33, "show_foot": 33, "show_warn": [28, 36, 38, 96], "shown": [0, 36, 39, 42, 58, 76, 77, 78, 79, 96, 101, 105, 106, 109, 113, 114, 115, 116], "shrink": [108, 110], "shrink_ghost_atom": [12, 25, 110], "shrunk": 25, "si": [32, 36, 37, 85, 89, 91], "side": [2, 34, 116], "sienna": 42, "sigma": [3, 23, 36, 58, 81, 82, 107, 108, 109, 114], "sigma0": [109, 111, 112], "sigma1": [109, 111, 112], "sigma_av": 36, "sigmar": 23, "sign": 3, "signal": [36, 102, 106], "signatur": [1, 2, 3, 21, 22, 23, 24, 27, 32, 34, 113], "signficantli": 36, "signifi": 98, "signific": [36, 45], "significantli": 36, "silenc": [20, 28, 36], "silent": [20, 28, 39, 40, 53], "silicon": 36, "simd": 36, "simfil": 36, "similar": [23, 24, 31, 36, 40, 42, 47, 54, 65, 66, 71, 72, 80, 92, 93, 94, 102, 115, 116], "similarli": [31, 39, 40, 41, 42, 46, 69, 73, 80, 81, 89, 90, 92, 100, 106, 110], "simpl": [0, 22, 23, 24, 25, 26, 28, 33, 34, 36, 39, 40, 42, 47, 55, 56, 75, 82, 89, 90, 93, 94, 96, 101, 104, 105, 107, 110, 113, 114, 115, 116], "simpler": 99, "simplest": [3, 90, 92, 101, 102, 104], "simpli": [42, 45, 52, 65, 68, 69, 90, 93, 106], "simplifi": [0, 2, 36, 42, 82, 93, 97], "simpluat": 116, "simul": [0, 3, 22, 23, 24, 25, 31, 32, 34, 35, 36, 38, 40, 41, 42, 50, 51, 52, 53, 55, 61, 62, 63, 69, 88, 90, 95, 99, 100, 101, 102, 103, 106, 107, 112], "simulaton": 107, "simultan": [24, 40], "simvolum": 34, "sin": [0, 2], "sinc": [36, 39, 40, 47, 59, 70, 98, 99, 105, 111, 112, 114, 115, 116], "sincer": 0, "sinco": 0, "singl": [2, 3, 22, 23, 24, 25, 26, 28, 31, 34, 36, 38, 39, 40, 42, 44, 45, 51, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 89, 90, 92, 94, 95, 99, 100, 101, 102, 104, 106, 107, 109, 110, 111, 115, 116], "single_bond": 24, "single_value_decomposit": 22, "singlebond": 24, "singleton": 33, "singlevaluedecomposit": 22, "singleword": 45, "singular": [36, 41, 108], "sire": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116], "sire_bigtest": [36, 47, 48], "sire_pagecache_root": 40, "sire_to_biosimspac": [3, 7], "sire_to_gemmi": [3, 7], "sire_to_openmm": [3, 7], "sire_to_rdkit": [3, 7], "sirebas": [1, 3, 21, 22, 23, 24, 34, 82, 95], "sireca": [2, 3, 23], "sireerror": [22, 23, 24, 34, 71, 85], "siregemmi": 36, "sireio": [21, 36, 40], "siremath": [2, 22, 24, 34, 36], "siremm": [3, 23, 26, 58], "siremol": [3, 21, 23, 24, 26, 34, 53, 58, 71, 72, 73, 74, 75, 80, 82, 83, 97, 98, 100, 102, 106, 109], "sireopenmm": [3, 36], "sirerdkit": 36, "siresystem": 21, "sireunit": [1, 22, 23, 24, 26, 32, 34], "sireunittest": 36, "sirevol": 34, "sit": 39, "site": [71, 74, 102, 116], "six": [26, 98, 102], "sixth": 78, "size": [1, 3, 21, 22, 23, 24, 31, 36, 38, 39, 40, 42, 43, 53, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 111, 112], "size0": [106, 109, 111], "size1": [106, 109, 111], "skip": [28, 36, 102], "skip_column": 107, "sleep": 42, "slice": [23, 24, 66, 69, 71, 72, 73, 76, 77, 78, 79, 80, 85, 90], "slider": 40, "slightli": 74, "slow": [45, 99, 109, 112], "small": [24, 28, 36, 45, 52, 54, 63, 96, 102, 104, 114], "smaller": [36, 39, 44, 102], "smallest": [34, 39, 75], "smallmoleculecompon": 109, "smart": [4, 23, 24, 28, 31, 36, 37, 50, 51, 53, 55, 60, 97], "smarts_column": 28, "smile": [4, 23, 24, 28, 31, 35, 36, 37, 50, 53, 55, 60, 95, 96, 98, 112], "smiles_column": 28, "smooth": [23, 24, 31, 36, 37, 90, 101], "smoothli": [42, 110], "snake_cas": [36, 45, 81], "snapshot": 99, "so": [0, 1, 2, 3, 4, 23, 24, 25, 28, 30, 31, 34, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 53, 54, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "social": 43, "socio": 43, "sodium": [39, 96], "sofia": 51, "sofiabariami": [36, 49], "soft": [36, 101, 107, 108, 110], "soften": [23, 24, 31, 36, 38, 55, 62, 107, 110], "softwar": [36, 48, 52, 95, 104, 105], "sol": 80, "solti": 36, "solut": [36, 91, 102, 105, 111, 114], "solv": [0, 39, 71], "solvat": [50, 60, 95], "solvent": [102, 116], "solvent_point": 36, "solver": 36, "somd": [0, 36, 110], "somd1": 36, "somd2": [104, 105], "some": [0, 1, 2, 22, 23, 24, 28, 32, 33, 36, 37, 38, 40, 45, 48, 52, 68, 80, 84, 95, 101, 104, 105, 106, 107, 109, 111], "someth": [0, 28, 32, 36, 38, 44, 71, 76, 89, 92], "sometim": [38, 39, 40, 52, 74, 97, 102, 110], "sommar": 0, "sommcontext": [3, 7, 36, 101], "soon": 48, "sooner": 24, "sophist": 104, "sort": [22, 34, 36, 104, 105], "sourc": [0, 1, 3, 20, 22, 24, 25, 26, 28, 30, 31, 32, 33, 36, 44, 45, 47, 51, 114], "sp2": 88, "space": [3, 4, 22, 23, 24, 28, 31, 34, 36, 38, 39, 40, 41, 43, 52, 61, 80, 90, 95, 101, 102, 104, 106, 108, 116], "spacefil": [23, 24, 36, 42], "span": 34, "sparsematrix": 36, "speak": 36, "specfi": 31, "special": [0, 28, 41, 82], "specialis": [3, 113], "specif": [0, 2, 22, 24, 33, 36, 39, 42, 43, 45, 52, 85, 90, 105, 107, 113, 116], "specifi": [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 36, 39, 40, 42, 52, 67, 80, 81, 82, 89, 90, 93, 94, 98, 99, 102, 107, 108, 109, 113, 114, 115, 116], "specifii": 38, "specifyig": 101, "sped": 36, "speed": [24, 36, 40, 41, 42, 45, 63, 99, 101, 105], "spent": 33, "sphere": [4, 9, 22, 42, 83, 102, 116], "spheric": [23, 102], "sphinx": [0, 36, 44, 45], "sphinxcontrib": 45, "spinner": 36, "spirit": 36, "split": [28, 34, 36, 44, 94], "spuriou": [36, 116], "sqrt": [4, 28, 36, 108], "sqrt_epsilon": 23, "sqrt_sigma": 23, "sqrtepsilon": 23, "sqrtsigma": 23, "squar": [0, 2, 22, 28, 34, 36, 41, 90, 94, 101], "sr": [4, 24, 25, 28, 36, 38, 40, 41, 42, 45, 52, 53, 55, 57, 58, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "sse": 0, "sse2": 0, "sse2neon": 36, "ssemath": 0, "sstruc": 42, "stabil": 105, "stabl": [24, 36, 102, 105], "stackbackward0": 114, "staff": 0, "stage": [2, 23, 24, 36, 42, 47, 101, 103, 107, 108, 111], "stage_paramet": [23, 24, 42], "stai": 40, "standand": 114, "standard": [0, 2, 4, 22, 23, 24, 26, 31, 34, 36, 39, 40, 41, 45, 75, 82, 92, 98, 100, 101, 102, 105, 106, 108, 109, 111, 114, 116], "standard_annihil": 2, "standard_decoupl": 2, "standard_morph": [2, 23, 24, 31, 108], "standard_state_correct": [26, 102], "standardstatecorrect": 36, "start": [2, 23, 24, 28, 31, 33, 36, 39, 42, 44, 45, 47, 52, 55, 64, 90, 101, 103, 104, 105, 109, 112, 114], "start_indici": 3, "starting_k": 24, "starvat": 36, "state": [2, 3, 22, 23, 24, 25, 26, 28, 31, 36, 38, 40, 42, 50, 53, 62, 72, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116], "statement": 44, "static": [1, 2, 21, 22, 23, 24, 31, 33, 34, 36, 92, 114], "statist": [1, 36, 90, 105], "statu": [43, 46], "std": [3, 36, 90], "stdout": [33, 36], "steboss": [36, 49], "stefano": 51, "step": [23, 24, 31, 36, 38, 39, 47, 52, 71, 93, 95, 97, 99, 101, 105, 109, 112, 115, 116], "step_spe": 24, "stereo": [24, 85], "stereochemistri": [11, 24, 36, 42, 50, 85, 96, 109], "stereoscopi": [24, 85], "stick": 42, "still": [28, 36, 44, 54, 63, 73, 95, 102, 105, 108, 116], "stone": 41, "stop": [33, 36, 42, 52, 86, 87, 88, 105], "storag": [22, 24, 34, 40, 52, 100], "store": [1, 40, 41, 84, 95, 99, 100, 106, 115], "str": [1, 2, 3, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 74], "straight": [36, 42], "straightforward": [42, 48, 94], "stream": [4, 29, 30, 36, 69, 100, 104, 105], "streamabl": 22, "streroisom": 88, "stretch": [59, 94], "strict": [0, 44, 45], "strictli": 45, "string": [1, 2, 3, 21, 22, 23, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 50, 53, 55, 60, 71, 72, 73, 74, 76, 77, 78, 79, 82, 90, 95, 96, 102, 105, 112, 113], "stringarrayproperti": 95, "strong": 107, "struct": 95, "structur": [3, 20, 21, 24, 36, 42, 45, 50, 53, 57, 60, 65, 70, 90, 95, 96, 97, 98, 113], "stub": 33, "studi": [112, 116], "studio": [36, 44, 52], "style": [0, 23, 24, 28, 31, 32, 33, 35, 36, 41, 46, 51, 65, 82], "sub": [2, 23, 24, 28, 33, 36, 40, 42, 45, 50, 51, 80, 84, 95, 96, 97], "subgraph": [25, 28], "subgroup": 24, "subject": [0, 102], "submiss": 44, "submit": [0, 46, 47, 48, 49], "submodul": 4, "subscript": 39, "subsequ": [36, 104], "subset": [23, 24, 31, 36, 37, 42, 50, 53, 59, 90, 95, 97, 113], "substanti": [36, 51], "substitut": [0, 2], "substrat": 116, "substructur": [39, 95, 98, 109], "subtract": [2, 25, 104, 108, 111], "successfulli": [36, 48], "suffici": [38, 48, 102], "suffix": [1, 21, 28, 100], "suggest": [1, 22, 46, 95, 105, 109], "suggest_map": 109, "suit": [36, 38, 45, 47, 95, 116], "suitabl": [24, 25, 105, 111], "sum": [2, 33, 39, 91, 105, 114, 116], "summari": [38, 90], "summaris": 39, "super": 47, "supersed": [22, 24], "supplementari": 21, "suppli": [1, 2, 22, 23, 24, 25, 28, 31, 36, 40, 90, 92, 95, 102], "support": [0, 3, 4, 21, 28, 33, 34, 36, 37, 42, 45, 47, 48, 52, 53, 55, 56, 61, 62, 69, 72, 73, 75, 80, 82, 90, 94, 107, 109, 112, 113, 114], "support_old_module_nam": 28, "supported_format": [3, 4, 7, 21, 28, 70, 95], "supportedformat": 21, "supports_emoji": 33, "suppos": 45, "sure": [34, 36, 40, 41, 45, 47, 52, 76, 77, 78, 79, 89, 102, 103], "surfac": [23, 24, 42, 115], "surpris": 24, "suruzhon": 51, "suse": 36, "sustain": 0, "svd": 22, "svg": [42, 96], "svndump": 36, "swap": [1, 23, 24, 25, 31, 36, 38, 101, 113], "swap_end_st": [23, 24, 25, 31, 38, 101, 113], "swig": [38, 95], "switch": [0, 28, 32, 33, 36, 42, 45, 91, 94, 103, 104, 106, 109, 111], "switch_to_alternate_nam": 109, "sy": 33, "sybl": 36, "sybyl": 70, "sym": 2, "symbol": [2, 6, 23, 24, 33, 36, 39, 41, 71, 107], "symid": 2, "symmetr": [22, 23, 34], "symmetri": [22, 95], "synonym": [2, 3, 23, 24, 26, 89, 102], "syntax": [2, 39, 71, 80, 94, 113, 114], "syntaxerror": 74, "system": [0, 3, 4, 21, 23, 24, 25, 26, 28, 29, 31, 34, 36, 38, 40, 41, 42, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 61, 63, 65, 68, 69, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115], "systemtrajectori": 36, "systm": 31, "t": [0, 1, 3, 4, 20, 22, 23, 24, 28, 31, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 54, 55, 68, 71, 72, 76, 83, 84, 86, 87, 88, 92, 94, 95, 97, 99, 100, 101, 102, 104, 105, 107, 109, 110, 113, 114], "tab": 45, "tabl": [18, 22, 33, 39, 104, 114], "tabwidth": 44, "tag": [45, 47], "take": [1, 2, 22, 28, 38, 40, 41, 42, 43, 45, 50, 52, 53, 55, 58, 80, 90, 99, 102, 104, 105, 109, 113, 114, 116], "take_molecule_schedul": 2, "takemoleculeschedul": 2, "taken": [25, 28, 36, 111], "takuji": 0, "tar": 52, "target": [3, 42, 48], "target_platform": 52, "taylor": 38, "taylor_pow": [38, 108], "tbb": 36, "teach": [36, 59, 60, 61], "team": [43, 45, 48], "tediou": [100, 109], "tell": [52, 68, 104, 112, 114], "temp_trajectory_xxxxxx": 40, "temp_xxxxxx": 40, "tempbas": 32, "temperatur": [3, 22, 23, 24, 25, 26, 31, 32, 36, 38, 41, 53, 101, 102, 103, 104, 105, 111], "templat": [36, 41, 112], "temporari": [28, 36, 41, 43, 52], "temporarili": [36, 43], "ten": [69, 90], "tensor": 114, "ter": 36, "term": [0, 23, 36, 39, 42, 74, 76, 80, 98, 100, 110, 114], "termin": [52, 112], "test": [0, 25, 28, 36, 46, 47, 48, 52, 54, 55, 95], "test_": 45, "test_atomprop": 45, "test_fil": 45, "test_func": 45, "test_indexerror": 45, "test_mul": 45, "test_myfunc": 45, "test_new_featur": 45, "test_opt": 36, "test_slow_funct": 45, "test_sub": 45, "text": [21, 28, 33, 36, 40, 44, 47, 70, 97, 108, 110], "than": [1, 2, 21, 24, 28, 34, 36, 38, 39, 40, 41, 45, 69, 71, 72, 80, 82, 89, 90, 95, 101, 104, 105, 106, 107, 109, 111, 113, 114, 116], "thank": [0, 36, 44, 46], "thei": [2, 3, 20, 22, 23, 24, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 47, 48, 69, 71, 72, 73, 74, 75, 81, 82, 83, 90, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110], "them": [0, 2, 3, 4, 24, 28, 33, 36, 40, 41, 42, 45, 46, 47, 50, 52, 59, 69, 80, 90, 95, 99, 100, 102, 103, 104, 106, 108, 114], "theme": [0, 33, 44], "themselv": [1, 36, 39, 81, 102], "theori": [0, 102, 113, 114, 115], "therebi": [24, 28, 36, 50, 61], "therefor": 111, "therein": 1, "thermostat": 36, "theta": [23, 58, 84, 115], "theta0": [23, 26, 102], "thi": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "thing": [3, 36, 44, 48, 59, 71, 72, 80, 83, 90, 91, 101, 102, 105, 106, 113], "think": [39, 91], "third": [34, 35, 36, 47, 71, 94, 113, 114, 115, 116], "those": [25, 31, 36, 39, 40, 42, 45, 52, 61, 62, 76, 77, 78, 79, 82, 85, 86, 87, 88, 95, 96, 101, 102, 105, 109, 112], "though": [28, 36, 41, 74, 92], "thr": [72, 75, 80], "thread": [21, 22, 28, 36, 38, 42], "threaten": 43, "three": [3, 22, 24, 26, 28, 34, 39, 41, 42, 53, 77, 78, 79, 86, 88, 89, 91, 93, 102, 103, 108], "threeatomfunct": [58, 84], "through": [0, 24, 36, 40, 42, 47, 55, 90, 94, 101, 104], "throughout": [44, 64], "throw": [1, 2, 22, 23, 24, 34, 36], "thrown": [2, 45], "thu": [0, 22, 28, 33, 36, 41, 45, 67, 73, 80, 103, 105, 108, 111], "thumb": [41, 105], "ti": 36, "tight": 38, "tilt": 34, "time": [0, 2, 22, 23, 24, 25, 28, 31, 32, 33, 36, 38, 40, 41, 42, 44, 45, 47, 48, 53, 69, 71, 72, 73, 74, 75, 81, 90, 92, 94, 99, 101, 104, 105, 106, 108, 111, 114], "time_spe": 24, "time_unit": [22, 24, 90], "timeout": [24, 36], "timestep": [22, 23, 24, 25, 31, 36, 38, 53, 99, 101, 102, 103, 104, 111, 113, 114, 115, 116], "timet": 46, "tip4p": 36, "tip5p": 36, "titl": [33, 36, 40, 47, 51], "tmp": [68, 115], "tmpdir": [36, 45], "to_alchemlyb": [12, 22, 24, 25, 31, 36, 53, 104, 105], "to_biosimspac": [3, 7], "to_dict": 1, "to_express": 23, "to_ghost": 36, "to_lin": 21, "to_list": [23, 24], "to_lj_pair": 23, "to_lj_paramet": 23, "to_matrix": 93, "to_molecul": [23, 24], "to_molecule_group": [23, 24, 31], "to_open_m_m_str": 2, "to_openmm": [3, 7, 25, 36, 106, 107, 109, 110, 111, 112], "to_panda": [2, 3, 22, 24, 31, 90, 101, 106, 114], "to_rdkit": [3, 7, 24], "to_s_d_f": 24, "to_same_molecul": 36, "to_select_result": [23, 24], "to_selector": [23, 24], "to_sir": [3, 7], "to_sire_unit": [3, 101], "to_str": [1, 2, 3, 21, 22, 23, 24, 33, 34], "to_system": 21, "to_unit": [24, 32], "to_vector": 34, "to_xml": [3, 24], "todict": 1, "todo": 0, "toexpress": 23, "togeth": [3, 22, 25, 34, 36, 39, 40, 41, 42, 45, 48, 51, 54, 62, 85, 86, 87, 88, 102, 104, 105], "token": [27, 37, 47], "told": 36, "toler": [24, 38, 45], "tolin": 21, "tolist": [23, 24, 107], "toljpair": 23, "toljparamet": 23, "tomolecul": [23, 24], "tomoleculegroup": [23, 24], "tonn": 41, "too": [24, 31, 36, 39, 40, 41, 50, 52, 53, 72, 73, 74, 75, 89, 90, 99, 102, 106, 108, 111], "took": 105, "tool": [0, 25, 36, 44, 52, 109, 111], "toolkit": 95, "toopenmmstr": 2, "top": [0, 1, 24, 28, 36, 38, 40, 41, 42, 51, 52, 53, 58, 68, 69, 70, 75, 76, 77, 78, 79, 80, 83, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 109, 112, 113, 114, 115], "top7": 70, "topologi": [21, 28, 36, 40, 68, 70, 90, 101, 114, 115, 116], "torch": 36, "torchani": 114, "torchqmengin": 114, "tordkit": 24, "torsion": [3, 9, 22, 25, 26, 28, 34, 36, 59, 78, 89, 106, 107, 109, 110, 111], "torsion_k": [101, 107, 111], "torsion_phas": 107, "tort": 0, "tosco": 51, "tosdf": 24, "toselector": [23, 24], "toselectresult": [23, 24], "tostr": [1, 2, 3, 21, 22, 23, 24, 34], "tosystem": 21, "total": [21, 23, 24, 31, 33, 39, 40, 53, 66, 80, 81, 85, 86, 87, 88, 91, 92, 94, 105, 107, 108], "touch": [45, 47, 52, 95, 96], "tounit": 24, "tovector": [34, 36], "toward": [34, 36, 43, 92, 94], "trace": [22, 23, 24, 42, 94], "traceback": [71, 72, 74], "track": [36, 46], "tradit": [34, 42, 65], "traj": [8, 21, 36, 40, 42, 53, 69, 70, 92, 115, 116], "trajectori": [21, 22, 23, 24, 25, 28, 31, 36, 37, 38, 50, 51, 53, 55, 56, 70, 99, 104, 114, 115, 116], "trajectoryiter": [11, 24, 36, 40, 69, 90], "trajetori": 101, "transact": 0, "transform": [9, 22, 24], "transit": 24, "transition_met": 24, "transitionmet": 24, "translat": [22, 24, 34, 36, 42, 59, 94], "translate_as_on": 34, "translation_delta": 22, "translationdelta": 22, "transpar": [36, 42], "transpos": 22, "treat": [3, 24, 26, 34, 38, 63, 71, 89, 91, 108, 113, 114], "treechain": [58, 82, 84, 106], "treechain0": 106, "treechain1": 106, "trend": 92, "trento": 0, "tri": [25, 28, 41, 85], "triangl": [9, 22], "triangle1": 22, "triangle2": 22, "triclin": [34, 36], "triclinicbox": [19, 34, 36], "trigger": [28, 36, 47, 48], "trip": 42, "tripl": [24, 42, 77], "triple_bond": 24, "triplebond": 24, "trj": [36, 70], "troll": 43, "trp": [72, 73, 75, 80], "trr": [8, 21, 36, 40, 69, 70], "true": [1, 2, 3, 20, 22, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 39, 40, 42, 44, 53, 82, 89, 90, 94, 96, 97, 98, 100, 101, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116], "truli": [22, 34], "truncat": 34, "truncated_octahedron": 34, "truncatedoctahedron": 34, "truth": 36, "truthfulli": 39, "try": [2, 33, 36, 40, 42, 45, 47, 51, 52, 67, 74, 92, 96, 97, 99, 105, 109], "try_import": [18, 33, 36], "try_import_from": [18, 33], "tryptophan": 116, "tsjerk": 34, "tube": [23, 24, 42], "tunabl": 36, "tune": 52, "tupl": [3, 22, 34, 89, 93, 113, 116], "turn": [36, 40, 90, 103, 104, 105, 111, 112], "tutori": [28, 36, 39, 46, 47, 50, 52, 53, 54, 56, 57, 63, 64, 68, 90, 104, 106, 109, 111, 114, 115, 116], "tutorial_url": [4, 24, 28, 38, 40, 42, 53, 58, 68, 69, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "tutorialurl": 95, "twenti": 39, "twice": 69, "two": [3, 21, 23, 24, 25, 26, 28, 31, 34, 36, 39, 40, 41, 42, 45, 60, 62, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 89, 90, 91, 92, 94, 95, 96, 98, 100, 101, 102, 103, 106, 107, 108, 109, 115, 116], "twoatomfunct": [58, 84], "txt": [36, 45, 47], "type": [1, 3, 4, 22, 23, 24, 25, 26, 28, 31, 36, 37, 38, 40, 41, 42, 45, 52, 55, 64, 65, 68, 76, 77, 78, 79, 81, 82, 85, 88, 90, 95, 100, 102, 104, 105, 113], "typenam": [1, 2, 3, 21, 22, 23, 24, 34], "typic": [2, 3, 21, 24, 40, 42, 52, 59, 69, 71, 72, 73, 74, 79, 80, 82, 101, 105, 116], "typo": [45, 46], "tyr": [72, 75, 80], "u": [3, 4, 22, 24, 28, 36, 40, 41, 44, 52, 54, 62, 63, 95, 102, 104, 105, 109, 113, 114, 115, 116], "ubuntu": 36, "ucb": 0, "uiuc": 21, "uk": 65, "umbrella": 116, "unaccept": 43, "unaffect": [28, 80], "unambigu": [42, 96], "unary_funct": 36, "unavailable_differenti": 2, "unavailable_integr": 2, "unbond": 36, "unbound": [36, 39], "undefin": [24, 69], "undefined_bond": 24, "undefinedbond": 24, "under": [0, 37, 46, 64, 96, 106, 109], "underli": [1, 24, 36, 106, 109, 114, 115], "underpin": 24, "underscor": [36, 44, 45], "underscore_cas": 36, "understand": [37, 39, 55], "unexpect": 82, "unexpos": 36, "unfortun": [105, 107], "unicod": 36, "unidentifi": 2, "uniform": 0, "uniformli": [25, 34], "unimpl": 45, "uniqu": [2, 21, 24, 36, 90, 111], "unit": [1, 4, 20, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 36, 37, 38, 39, 45, 47, 48, 50, 51, 54, 80, 82, 85, 86, 87, 88, 89, 91, 93, 94, 99, 101, 106, 107, 114, 116], "unitregistri": 41, "univers": 0, "unix": 52, "unless": [28, 36, 105], "unlik": [73, 74, 114], "unlock": 22, "unmap": [24, 109], "unmapped0": [109, 112], "unmapped1": [109, 112], "unmapped_atoms0": 24, "unmapped_atoms1": 24, "unmappedatoms0": 24, "unmappedatoms1": 24, "unmerg": 106, "unnecessari": 36, "unnecessarili": 45, "unpack": 57, "unpickl": 36, "unsafe_complex_simplif": 2, "unscal": 32, "unset": [1, 23, 24, 31, 36, 114], "unsign": [1, 2, 22, 23, 24, 34], "unspecifi": [89, 98], "unstabl": [26, 36, 105], "until": [24, 42, 45, 96], "unwant": 34, "unwelcom": 43, "unwrap": [40, 42, 113], "unzip": [20, 28, 57, 65, 68, 74], "up": [0, 2, 3, 22, 24, 33, 36, 38, 40, 41, 42, 44, 46, 47, 48, 52, 53, 57, 58, 61, 62, 71, 74, 75, 76, 77, 78, 79, 80, 83, 89, 91, 93, 102, 103, 105, 107, 108, 109, 111, 113, 114], "upcom": [36, 104, 105], "updat": [1, 3, 23, 24, 25, 31, 33, 36, 38, 45, 47, 52, 82, 92, 93, 100, 101, 105, 106, 111, 113, 114, 115], "update_constraint": [3, 24], "update_exist": 1, "update_properti": 1, "update_recip": [47, 52], "updatecoordinatesandveloc": 36, "updatefrom": 36, "updateparametersincontext": 101, "updateproperti": 1, "updatesomeparametersincontext": 36, "upgrad": 56, "upload": [36, 45, 47, 48, 52], "upper": 22, "upvot": 54, "upward": [39, 40, 70], "urea": 28, "ureg": 41, "urei": 36, "urgent": 48, "url": [20, 28, 36, 45, 47, 51, 52, 53, 65, 68, 95], "urllib": 95, "urlretriev": 95, "us": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 99, 100, 101, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116], "usabl": 31, "usag": [0, 33, 36, 41], "use_dispersion_correct": 38, "use_mixed_api": [4, 28, 36], "use_new_api": [4, 28, 36], "use_old_api": [4, 28, 36], "use_taylor_soften": [38, 108], "use_zacharias_soften": [38, 108], "user": [0, 1, 24, 36, 38, 47, 52, 74, 95, 113], "userto": 36, "userwarn": [40, 85], "uses_parallel": 21, "usesparallel": 21, "usetab": 44, "usign": 36, "usual": 113, "ut": 33, "util": [4, 29, 33, 36], "uwham": 115, "v": [4, 22, 28, 36, 40, 41, 42, 45, 52, 89], "v0": 34, "v1": [0, 34], "v14": 52, "v141": 52, "v142": 52, "v143": 52, "v2": [34, 102], "v3": 0, "v_": 108, "vacuo": 114, "vacuum": [23, 24, 31, 36, 104, 105], "val": [2, 24, 31, 32, 72, 73, 75, 80], "val0": 27, "val1": 27, "valenc": [42, 96], "valid": [1, 2, 23, 24, 31, 34, 36, 38, 39, 45, 48, 76, 77, 78, 79, 94, 113], "valu": [1, 2, 3, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 58, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 114, 115, 116], "value_as_doubl": 24, "value_in_unit": 116, "valueasdoubl": 24, "valueerror": 38, "van": [24, 31, 101, 107], "vanilla": 101, "variabl": [2, 23, 24, 33, 36, 39, 40, 42, 45, 68, 105, 116], "varianc": 22, "variant": 39, "variat": [104, 105], "varieti": [113, 114], "variou": [0, 4, 36, 37, 38, 48, 57, 91], "vdw_radiu": 24, "vdwradiu": 24, "ve": [0, 36, 52, 99, 104], "vec3": 3, "vector": [3, 4, 9, 22, 24, 28, 34, 36, 37, 39, 81, 89, 93, 94], "vector0": [22, 34], "vector03": 22, "vector1": [22, 34], "vector12": 22, "vector2": [22, 34], "vector_less__openmm_scope_vec3__greater_": 3, "vector_on_spher": 22, "vectoris": [0, 36], "vectoronspher": 22, "veloc": [3, 23, 24, 25, 28, 31, 36, 38, 40, 41, 58, 70, 82, 84, 90, 95, 99, 101, 104, 105], "velocity3d": [28, 36], "vendor": 45, "verbos": 45, "veri": [24, 31, 36, 38, 40, 41, 42, 45, 71, 81, 82, 93, 101, 104, 105, 107, 109, 111], "verlet": [23, 24, 31, 38], "verletintegr": [38, 101, 102], "versa": 38, "version": [0, 3, 4, 20, 23, 24, 31, 33, 36, 41, 43, 47, 48, 52, 54, 56, 75, 76, 100, 106, 111, 112, 113, 114, 115], "versu": 99, "veryslow": 45, "via": [0, 4, 23, 24, 25, 26, 28, 31, 33, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 58, 65, 66, 68, 71, 72, 73, 74, 75, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113], "vibrat": [36, 38, 99, 105], "vice": 38, "video": 42, "view": [1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 40, 50, 51, 53, 55, 57, 58, 60, 65, 66, 74, 83, 84, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 106, 109, 111, 112, 113, 114], "view0": 24, "view1": 24, "view2d": [31, 36, 42, 53, 65, 96], "view_perturb": [25, 106], "view_refer": [25, 106, 109], "view_typ": 39, "viewe": 98, "viewer": [23, 24, 31, 42, 51, 82, 106, 109], "viewpoint": 43, "viewsofmol": [23, 24, 36], "virtual": 113, "visibl": 45, "visual": [36, 44, 52], "visualis": [25, 31, 37, 59, 94, 104, 105], "void": [1, 2, 3, 21, 22, 23, 24, 27, 34, 44], "vol": [0, 4, 23, 24, 29, 31, 34, 38], "volt": 41, "volum": [4, 26, 34, 38, 51, 102], "vscode": [44, 45], "w": 41, "wa": [0, 1, 2, 21, 22, 23, 24, 25, 31, 33, 36, 38, 39, 40, 42, 45, 52, 53, 55, 56, 61, 67, 80, 82, 84, 90, 92, 93, 94, 95, 96, 99, 100, 101, 105, 106, 108, 109, 110, 111, 114, 115], "waal": [24, 31, 101, 107], "wagner": 0, "wai": [0, 22, 24, 36, 39, 40, 41, 42, 45, 46, 48, 50, 52, 53, 66, 71, 72, 73, 74, 75, 81, 82, 83, 86, 87, 88, 90, 92, 94, 95, 97, 98, 99, 100, 101, 104, 105, 108, 109, 111, 112, 113, 114, 115], "wait": [36, 42], "walltim": 24, "want": [0, 1, 2, 20, 21, 22, 23, 24, 25, 28, 31, 33, 34, 36, 38, 39, 40, 41, 42, 48, 52, 54, 58, 59, 67, 69, 71, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "warn": [21, 28, 33, 36, 42, 65, 96, 102], "warranti": 0, "washington": 0, "wasn": [36, 39], "wassenaar": 34, "wat": [53, 75, 95, 98], "watchdog": 36, "water": [23, 24, 25, 36, 37, 40, 42, 53, 75, 80, 89, 91, 92, 96, 97, 100, 102, 104, 105, 107, 111, 113, 114, 116], "water_spher": 116, "waterswap": 36, "waterview": 36, "watt": 41, "wb": [42, 116], "we": [0, 3, 21, 24, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 57, 58, 62, 63, 64, 65, 68, 69, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116], "web": [0, 42, 45], "webgl": 42, "websit": [28, 36, 44, 45, 47, 54, 65, 104], "week": [41, 48], "weigh": 105, "weight": 116, "weighted_dist": 116, "welcom": [22, 43, 44, 45, 46], "well": [0, 23, 24, 26, 34, 36, 38, 52, 91, 101, 102, 105, 106, 111, 114], "were": [0, 3, 21, 36, 38, 39, 48, 53, 68, 69, 71, 75, 94, 99, 102, 105], "weren": 36, "what": [1, 2, 3, 21, 22, 23, 24, 34, 38, 43, 45, 48, 50, 51, 53, 70, 80, 82, 90, 92, 95, 98, 99, 101, 104, 109, 112], "whatev": [24, 42, 74, 76], "wheat": 42, "wheel": 52, "when": [0, 1, 20, 21, 22, 23, 24, 26, 28, 31, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 71, 72, 73, 74, 75, 80, 81, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114], "whenev": [24, 41, 101, 102], "where": [2, 3, 21, 23, 24, 25, 26, 28, 34, 36, 39, 40, 41, 42, 45, 47, 50, 52, 78, 80, 89, 100, 101, 102, 103, 108, 109, 111, 113], "wherea": [23, 24, 31, 34], "wherebi": [2, 36], "wherev": 52, "whether": [0, 1, 2, 3, 21, 22, 23, 24, 25, 28, 31, 33, 34, 36, 38, 39, 42, 95, 99, 106, 108, 113], "which": [0, 1, 2, 3, 4, 22, 23, 24, 26, 28, 31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 55, 56, 57, 58, 65, 68, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 84, 85, 90, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115], "whichev": [22, 24, 25, 31, 68], "while": [0, 22, 23, 24, 31, 36, 39, 40, 41, 42, 45, 47, 48, 52, 53, 63, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113], "white": [42, 82], "whle": 94, "who": [0, 43, 45, 48], "whole": [1, 24, 31, 34, 36, 42, 59, 74, 84, 93, 96, 99, 105], "wholli": [39, 76, 79], "whose": [21, 23, 24, 25, 31, 39, 42, 45, 76, 80], "why": [48, 91, 99, 101, 102, 104, 105, 107, 109], "wide": [113, 114], "wider": 36, "width": [23, 26, 33, 36, 42, 96, 102], "wiki": [43, 105], "wikipedia": 71, "wildcard": [36, 68, 72, 73, 74, 75], "wildcardtoregularexpress": [39, 71], "window": [22, 24, 36, 38, 45, 52, 53, 54, 101, 104, 105, 109, 112, 114, 115, 116], "wise": 36, "wish": [22, 38, 40, 47, 102, 113, 116], "wishlist": [36, 46], "within": [0, 2, 21, 24, 25, 33, 34, 36, 38, 39, 40, 42, 43, 45, 58, 66, 71, 72, 73, 74, 76, 77, 78, 79, 81, 85, 86, 87, 90, 91, 92, 94, 95, 98, 101, 102, 105, 113, 114, 116], "without": [0, 28, 36, 40, 43, 52, 55, 72, 73, 82, 101, 105], "won": [24, 36, 41, 47, 97, 102], "wood": [1, 2, 21, 22, 23, 24, 34, 51], "word": 44, "work": [0, 1, 23, 24, 25, 28, 31, 33, 34, 36, 40, 41, 42, 45, 46, 47, 48, 51, 52, 54, 55, 58, 60, 75, 77, 78, 79, 81, 83, 89, 90, 94, 97, 100, 101, 104, 105, 109, 111, 112, 114], "workabl": 36, "workflow": [36, 46, 50, 51, 95, 110], "workshop": [36, 47], "world": [40, 105], "worri": [36, 104], "worth": [21, 45, 68, 101], "would": [0, 1, 2, 3, 23, 24, 25, 31, 32, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 58, 66, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 85, 86, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 116], "wouldn": 1, "wrap": [0, 1, 5, 23, 24, 31, 33, 36, 37, 40, 41, 45, 90], "wrapper": [0, 1, 36, 41, 44, 52, 101, 109, 114], "write": [0, 1, 3, 4, 21, 24, 28, 30, 33, 36, 40, 42, 46, 47, 51, 52, 67, 70, 80, 82, 95, 104, 107, 109, 113, 116], "write_to_fil": 21, "writem": 0, "writemodel": [115, 116], "writer": 36, "writetofil": 21, "written": [0, 1, 28, 30, 31, 35, 36, 45, 52, 56, 67, 69, 81, 82, 88, 95], "wrong": [36, 105], "wrongli": 36, "wrote": 0, "www": [0, 21, 43], "x": [1, 2, 6, 28, 34, 36, 39, 40, 41, 42, 45, 70, 71, 76, 80, 81, 89, 90, 92, 93, 105, 107, 111, 115, 116], "x64": [36, 52], "x86": [36, 45, 52], "x86_64": 36, "x_coord": 95, "xdr": [21, 40, 70], "xml": [3, 24, 25, 36], "xtb": 116, "xtc": [8, 21, 36, 40, 69, 70], "xx": [22, 100], "xxx": [109, 112], "xxxxxx": 40, "xy": 22, "xyz_mm": 113, "xyz_qm": 113, "xz": 22, "y": [2, 6, 28, 34, 39, 41, 45, 52, 76, 81, 89, 90, 93], "y_coord": 95, "yaml": [45, 52, 114], "yard": 41, "yaspin": 36, "ye": 52, "year": [36, 44, 47, 48, 51], "yellow": 42, "yet": [0, 1, 36, 42, 45, 47, 48, 95], "yml": 52, "you": [0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "your": [0, 1, 28, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 54, 65, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 95, 101, 104, 105, 106, 112, 114], "yourself": [0, 1, 2, 4, 28, 36, 42, 81, 92, 93, 100], "yu": 0, "yung": 0, "yx": 22, "yy": 22, "yz": 22, "z": [2, 22, 24, 28, 34, 39, 41, 81, 89, 93], "z_coord": 95, "zacharia": 38, "zero": [0, 2, 22, 23, 24, 25, 31, 36, 39, 42, 75, 82, 91, 92, 100, 102, 106, 108, 109, 110, 111, 113, 114, 116], "zero_ghost_angl": [12, 25], "zero_ghost_bond": [12, 25], "zero_ghost_tors": [12, 25, 110], "zero_lj": 23, "zerolj": 23, "zip": [20, 105], "zlib": 0, "zoom": 42, "zx": 22, "zy": 22, "zz": 22, "\u00b5": 41, "\u00e5": [36, 38, 39, 41, 58, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 102, 103, 105, 108, 110, 116], "\u03b1": [101, 108], "\u03b1_i": 108, "\u03b1_j": 108, "\u03b3": 101, "\u03ba_i": 108, "\u03ba_j": 108, "\u03bb": [2, 25, 36, 38, 53, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114], "\u03bc": 41, "\u03c0": 22, "\u03c6": 115, "\u03c8": 115, "\u2c50128": 102, "\u2c50143": 102, "\u2c50192": 102, "\u2c5085": 102}, "titles": ["Acknowledgements", "Public API", "Public API", "Public API", "Documentation", "sire.base", "sire.cas", "sire.convert", "sire.io", "sire.maths", "sire.mm", "sire.mol", "sire.morph", "sire.restraints", "sire.search", "sire.stream", "sire.system", "sire.units", "sire.utils", "sire.vol", "Public API", "Public API", "Public API", "Public API", "Public API", "Public API", "Public API", "Public API", "sire module", "Sub-modules", "Public API", "Public API", "Public API", "Public API", "Public API", "Diaries", "Changelog", "Detailed Guides", "OpenMM Integration", "Searching", "Trajectories", "Units", "Viewing Molecules", "Code of Conduct", "Coding Style", "Developer\u2019s guide", "Contributing", "Packaging releases", "Roadmap", "Contributors", "Features", "OpenBioSim | Sire", "Installation", "Quick Start Guide", "How to ask for help", "Tutorial", "Part 1 - Loading and Saving", "Part 2 - Indexing and Searching", "Part 3 - Molecular Properties", "Part 4 - Measurement, Trajectories and Movement", "Part 5 - Interconverting with other Packages", "Part 6 - Morphs and Alchemical Free Energies", "Part 7 - Merged Molecules and Lambda Levers", "Part 08 - QM/MM", "Importing sire", "Loading a molecule", "Simple indexing", "Saving a molecule", "Loading from multiple files", "Loading and saving trajectories", "Supported file formats", "Indexing Atoms", "Indexing Residues", "Indexing Chains", "Indexing Segments", "Indexing Molecules", "Indexing Bonds", "Indexing Angles", "Indexing Dihedrals", "Indexing Impropers", "Searching", "Atom Properties", "Cursors and Editing Properties", "Residue, Chain and Segment Properties", "Molecule Properties", "Bond Views and Properties", "Angle Views and Properties", "Dihedral Views and Properties", "Improper Views and Properties", "Measuring Distances and Angles", "Measuring Trajectories", "Measuring Energies", "Measuring Energies Across Trajectories", "Moving Atoms and Molecules", "Moving Bonds, Angles and Dihedrals", "Converting Molecules", "Viewing Molecules in 2D", "Creating Molecules from Smiles Strings", "Searching for Fragments using Smarts Strings", "Molecular Dynamics and Minimisation", "Merged Molecules", "Alchemical Dynamics", "Restraints", "Alchemical Restraints", "Running a Free Energy Perturbation Simulation", "Running Faster Free Energy Simulations", "Perturbation", "Lambda schedules and levers", "Ghost Atoms and Softening Potentials", "Creating merge molecules", "Perturbation Files (pertfiles)", "Annihilation and Decoupling", "Residue mutations", "Introduction", "Sire-EMLE", "Alanine-dipeptide conformational landscape", "Diels-Alder reaction"], "titleterms": {"": [35, 45], "0": [36, 44], "08": 63, "1": [36, 52, 56], "1st": 36, "2": [36, 52, 57], "2005": 36, "2006": 36, "2015": 36, "2023": 36, "2024": 36, "22nd": 36, "25th": 36, "2d": [42, 96], "3": [36, 52, 58], "3d": 42, "4": [36, 44, 52, 59], "5": [0, 36, 52, 60], "5th": 36, "6": 61, "7": 62, "7th": 36, "9": 44, "90": 44, "A": [44, 52], "And": 52, "No": [44, 52], "One": 112, "Or": 52, "abov": 44, "acceler": 35, "access": [65, 71, 76, 77, 78, 79, 81, 90], "acknowledg": [0, 51], "across": [40, 90, 92], "advanc": 39, "against": 89, "alanin": 115, "alchem": [61, 101, 103], "alchemlyb": 104, "alder": 116, "align": [40, 42, 94], "all": [39, 44, 73, 74], "alphafold": 65, "also": 52, "alwai": 44, "an": [44, 52, 77, 79, 111, 114], "anaconda": [0, 52], "analys": 115, "anchor": 94, "angl": [77, 78, 79, 86, 89, 90, 94], "annihil": 111, "anyth": 95, "ap": 0, "api": [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 51, 102], "appli": 81, "approxim": 39, "april": 36, "ar": 44, "arbitrai": 89, "arbitrari": 90, "ascii": 0, "ask": 54, "assign": 0, "atom": [39, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 89, 93, 101, 102, 108, 109, 110], "atommap": 109, "attribut": [43, 45], "august": 36, "automat": 109, "avx_mathfun": 0, "b": 52, "background": 42, "base": 5, "basic": 45, "between": [89, 91], "biosimspac": [41, 95], "block": [0, 44], "blog": 51, "bond": [39, 76, 77, 78, 79, 85, 90, 94, 102], "boost": 0, "boresch": 102, "box": 42, "brace": 44, "bracket": 44, "branch": 45, "browser": 52, "build": [0, 52], "c": [0, 41, 44, 45, 52], "ca": 6, "calcul": [40, 91, 92, 114], "capit": 44, "capitalis": 44, "case": 44, "center": 42, "chain": [39, 73, 74, 75, 83], "chang": [41, 90, 92, 106], "changelog": [36, 51], "charact": 44, "charg": [39, 80], "check": 52, "chemic": 39, "choos": [38, 42], "citat": 51, "class": 44, "clean": 44, "closer": 42, "closest": 39, "cmake": 0, "code": [36, 43, 44, 45, 52, 65], "color": 42, "column": 90, "combin": 41, "comment": 44, "commit": 45, "comparison": [39, 45], "compil": 52, "complet": 105, "complex": 98, "compon": 91, "comput": 45, "conda": 52, "conduct": 43, "conform": 115, "constraint": 105, "contain": [52, 81], "context": [115, 116], "continu": 45, "contract": 39, "contribut": [46, 51], "contributor": 49, "control": [99, 101, 107], "conveni": 81, "convers": 41, "convert": [7, 41, 95], "coordin": [80, 116], "copi": 52, "count": [39, 71, 72, 80], "creat": [39, 47, 52, 90, 97, 98, 109, 113, 114, 115, 116], "curli": 44, "current": [36, 42], "cursor": [82, 93], "custom": [39, 45, 52, 80], "d": 52, "data": [44, 90, 104], "decemb": 36, "decompos": 91, "decoupl": 111, "default": 41, "defin": [47, 52], "delet": 82, "deliveri": 45, "depend": 0, "detail": [37, 51], "develop": [45, 48], "diari": 35, "diel": 116, "dihedr": [78, 87, 90, 94], "dipeptid": 115, "distanc": [39, 89, 102], "document": [4, 45], "doxygen": 44, "dynam": [38, 99, 101, 102], "e": [39, 52], "each": 92, "easi": 52, "edit": 82, "effect": 107, "eig3": 0, "either": 52, "element": [39, 71], "eml": [114, 115, 116], "end": 109, "energi": [35, 38, 40, 61, 91, 92, 101, 104, 105], "enforc": 43, "engin": [113, 114, 116], "environ": [45, 52, 100], "etc": 39, "examin": 106, "exampl": 105, "except": [44, 45], "exist": 52, "expans": 39, "extract": 109, "ey": 44, "faster": 105, "featur": [45, 50], "februari": 36, "field": 105, "file": [35, 40, 42, 45, 65, 68, 70, 110], "final": 44, "find": [39, 72, 73, 74, 75], "first": 44, "fit": 0, "fix": [44, 102], "float": 45, "font": 44, "forc": 107, "format": [40, 70, 95], "fragment": 98, "frame": [38, 40, 69, 92, 93], "free": [35, 61, 104, 105], "frequenc": 101, "from": [39, 41, 52, 65, 68, 97, 98, 105], "function": [44, 81, 112], "furthest": 39, "gemmi": [0, 95], "gener": [97, 98], "generalunit": 41, "get": [81, 91], "ghost": [101, 108, 110], "github": 36, "glob": 71, "gnu": 0, "good": 108, "googl": 36, "gpu": 35, "gsl": 0, "guid": [37, 45, 51, 53], "guidelin": 45, "harder": 52, "hardest": 52, "help": 54, "here": 44, "high": 101, "higher": 38, "hood": 41, "host": 0, "how": [48, 54], "hydrogen": 105, "i": 39, "identifi": [39, 71, 72, 73, 74, 75, 76, 77, 78, 79], "implement": 109, "import": 64, "improp": [79, 88, 90], "indent": 44, "index": [57, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "indic": 51, "individu": [91, 94, 107], "input": 70, "inspect": 106, "instal": 52, "integr": [38, 42, 45], "interact": 91, "interconvert": 60, "interfac": [101, 114], "intern": 110, "introduct": 113, "involv": 110, "io": 8, "iter": [71, 72, 73, 74, 75, 90], "januari": 36, "join": [40, 69], "juli": 36, "june": 36, "kabasch": 0, "kartograf": 109, "keep": 44, "lambda": [62, 107], "landscap": 115, "lap": 0, "lazy_import": 0, "length": 90, "letter": 44, "level": [4, 38, 101, 102], "lever": [62, 107], "librari": 0, "line": 44, "linear": 0, "load": [40, 56, 65, 68, 69], "local": 36, "logic": 39, "long": 44, "low": [101, 102], "mai": 36, "make": [44, 89], "map": 109, "march": 36, "mass": [39, 80, 105], "match": [39, 71, 98, 109, 112], "math": 9, "md5": 0, "mdanalysi": 0, "measur": [59, 89, 90, 91, 92], "member": 44, "merg": [62, 100, 107, 109], "mersenn": 0, "method": 44, "michellab": 36, "miniconda": 52, "miniforg": 52, "minimis": [99, 102], "ml": 114, "mm": [10, 63, 113, 114], "modul": [4, 28, 29, 114], "mol": 11, "molecul": [39, 40, 42, 62, 65, 67, 75, 80, 84, 93, 95, 96, 97, 98, 100, 105, 107, 109], "molecular": [58, 99], "more": [44, 98], "morph": [12, 61], "move": [93, 94], "movement": [59, 93, 94], "multipl": [40, 44, 68, 69, 98], "mutat": 112, "name": [44, 71, 73, 74, 103], "netcdf": 0, "new": [44, 52, 116], "nglview": 42, "nth": 39, "number": [39, 44, 71], "object": 106, "octob": 36, "onli": 44, "opac": 42, "openbiosim": [36, 51], "openmm": [0, 35, 38, 95, 114, 115, 116], "oper": 39, "option": 38, "other": [41, 60, 95], "our": 43, "out": 52, "output": 70, "outsid": 40, "over": [44, 71, 72, 73, 74, 75, 90], "own": 52, "packag": [41, 47, 52, 60], "pagecach": 40, "panda": [0, 90], "parallel": 40, "paramet": 106, "parametr": 45, "parser": 8, "part": [56, 57, 58, 59, 60, 61, 62, 63], "parti": 0, "pdb": 65, "pegtl": 0, "per": 92, "perform": 90, "pertfil": 110, "perturb": [101, 104, 105, 106, 110], "pint": 41, "place": 102, "pleas": 44, "pledg": 43, "plot": [0, 90], "pme": 105, "point": [45, 89], "posit": 102, "post": 51, "potenti": [101, 108], "power": 41, "practic": 108, "prefix": 41, "problem": 0, "process": 104, "properti": [39, 58, 80, 81, 82, 83, 84, 85, 86, 87, 88], "protein": [39, 112], "public": [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34], "py": 0, "pyboost11": 0, "python": [0, 41, 44, 45], "qm": [63, 113, 114], "qt": 0, "quick": [51, 53], "rais": 41, "rdkit": [0, 35, 95], "reaction": [105, 116], "read": 45, "recip": 52, "regress": 0, "releas": [47, 48], "repartit": 105, "replac": 44, "represent": 42, "residu": [39, 72, 73, 74, 75, 76, 77, 78, 79, 83, 112], "respons": 43, "restraint": [13, 102, 103], "result": 115, "return": 39, "rich": 0, "rmsd": 90, "roadmap": 48, "rotat": 93, "rule": 44, "run": [38, 45, 52, 104, 105, 111, 113, 114, 115, 116], "runtim": 52, "same": 44, "sampl": 115, "save": [38, 40, 42, 56, 67, 69, 93], "schedul": [101, 107], "scientif": 0, "scope": 43, "script": 105, "search": [14, 35, 39, 57, 71, 72, 73, 74, 75, 76, 80, 82, 97, 98], "segment": [74, 75, 83], "select": [91, 92], "septemb": 36, "set": [42, 45, 115, 116], "should": 44, "si": 41, "simpl": 66, "simul": [104, 105, 111, 113, 114, 115, 116], "sire": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 35, 44, 51, 52, 64, 114, 115], "skip": 45, "small": 44, "smart": [39, 75, 98], "smile": [39, 97], "smooth": [40, 42], "soften": [101, 108], "softwar": 0, "solver": 0, "sourc": 52, "space": [44, 89], "speak": 44, "sse2neon": 0, "sse_mathfun": 0, "standard": 43, "start": [51, 53], "state": 109, "stop": 112, "stream": 15, "string": [39, 67, 97, 98], "structur": 112, "style": [44, 45], "sub": [4, 29, 112], "subset": 40, "subvers": 36, "suggest": 48, "support": [40, 41, 51, 70, 95], "switch": 105, "symmetr": 70, "system": [16, 116], "tab": 44, "tabl": [51, 90], "taylor": 108, "tbb": 0, "temporari": 45, "term": 75, "test": 45, "thank": 45, "third": 0, "thread": 0, "timestep": 105, "timet": 48, "togeth": 69, "token": [39, 80], "top": 4, "torch": 114, "track": [48, 94], "trajectori": [40, 42, 59, 69, 90, 92, 93, 94, 101], "translat": 93, "tutori": [51, 55], "twister": 0, "type": [39, 71, 72, 73, 74, 75, 80], "umbrella": 115, "under": 41, "uniprot": 65, "uniqu": [71, 72, 73, 74, 75, 76, 77, 78, 79], "unit": [17, 41, 90], "up": [45, 115, 116], "updat": 110, "us": [35, 39, 44, 52, 65, 81, 90, 93, 97, 98, 102, 103, 104, 109], "util": 18, "variabl": 44, "vector": 41, "via": 81, "view": [39, 42, 81, 85, 86, 87, 88, 89, 92, 96, 100, 107], "virtual": 45, "visualis": [40, 93, 106], "vol": 19, "wai": 44, "water": 39, "web": 52, "websit": 0, "weight": 94, "what": 35, "where": 92, "whitespac": 44, "width": 44, "wildcard": 71, "wishlist": 48, "within": 80, "work": 35, "workflow": 45, "wrap": 42, "write": 45, "written": 44, "your": [45, 52], "z": 44, "za": 44, "zacharia": 108, "\u03bb": 101}})